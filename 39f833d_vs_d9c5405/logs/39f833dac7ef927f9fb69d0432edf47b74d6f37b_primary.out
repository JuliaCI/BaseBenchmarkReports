cset: moving following pidspec: 18320
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.285585196 seconds)
loading group "string"... done (took 0.578899556 seconds)
loading group "linalg"... done (took 7.088588689 seconds)
loading group "parallel"... done (took 0.162962992 seconds)
loading group "find"... done (took 1.111585149 seconds)
loading group "tuple"... done (took 1.964297844 seconds)
loading group "dates"... done (took 1.256590976 seconds)
loading group "micro"... done (took 0.234673711 seconds)
loading group "io"... done (took 0.951848088 seconds)
loading group "scalar"... done (took 38.013131799 seconds)
loading group "sparse"... done (took 12.144487305 seconds)
loading group "broadcast"... done (took 0.96010335 seconds)
loading group "union"... done (took 12.939192189 seconds)
loading group "simd"... done (took 4.383764937 seconds)
loading group "random"... done (took 8.844139424 seconds)
loading group "problem"... done (took 1.922385891 seconds)
loading group "array"... done (took 20.91755419 seconds)
loading group "misc"... done (took 1.900625987 seconds)
loading group "sort"... done (took 3.171742984 seconds)
loading group "collection"... done (took 17.743161962 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525733857 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139101777 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115059741 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136169676 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.180108979 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130851844 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141557656 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084457898 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.006766358 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16086874 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136431282 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.472925614 seconds)
done (took 4.977895724 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.198153613 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085687151 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094658332 seconds)
  done (took 0.87298527 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064450749 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124503505 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.078760221 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067308079 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065783818 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079905472 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06623317 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064663352 seconds)
  done (took 1.247670552 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073187325 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067700492 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082629676 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066281545 seconds)
  done (took 0.990382567 seconds)
done (took 4.084457003 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.88794618 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236567524 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186663076 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.448788249 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146635988 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186636078 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673914368 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.3354936 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207604692 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098899248 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102384324 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.372940301 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106338362 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664338778 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076466626 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.103533577 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.156330237 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440290249 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080290535 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081276029 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102360099 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139903952 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10206718 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076412941 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166968238 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068506855 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145785784 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093731043 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066775447 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.23933885 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188211229 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683371898 seconds)
  done (took 10.402725217 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097661606 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114890888 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067869106 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137392851 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099826452 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084662513 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070642654 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081566176 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089895386 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.155217466 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11210197 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104170232 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080515369 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06878328 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098468383 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210074752 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107411891 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084058907 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085048745 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074486111 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120397547 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081221752 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092023705 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076525205 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.149994379 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192604895 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111606962 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111306098 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067925397 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079968582 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130729856 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.139739752 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065358346 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079899027 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137727843 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109263053 seconds)
  done (took 4.484149901 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023288981 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15851166 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089695457 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14994124 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083676475 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108772542 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082058276 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098947209 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244558674 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.153009852 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.451087259 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126394573 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099603971 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067549022 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082469101 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067216816 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.493830886 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143422496 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101831036 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100439016 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073223136 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084866038 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360832441 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06741323 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065492054 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083145441 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059123627 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143182003 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067186718 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.199735878 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088078805 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085888612 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100921432 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190905127 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09347193 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122376676 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066413113 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080295392 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167267441 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073591413 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064818286 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103663676 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117107681 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103132144 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082624015 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067131425 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179401257 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066060944 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09784114 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.88719861 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165202088 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094771795 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082500003 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.266325095 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101718121 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06507623 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080478049 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.262363307 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107891674 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.147614972 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079238042 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067310851 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065207134 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085488151 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067821048 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365978395 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081457014 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.932340044 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068099397 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076735317 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083650699 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066255333 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086440137 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071406751 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099072082 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066586862 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06709414 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081627056 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064562428 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082410294 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084123952 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.199323722 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08156266 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06625172 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063182055 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080766823 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08405877 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110490814 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068806508 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080070431 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099161985 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081945993 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066184284 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118040165 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06599406 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100996368 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083123528 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113093098 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080352817 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.168035932 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067058427 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063009104 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111481148 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085289473 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102711161 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092347793 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067357025 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151314884 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06331534 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08036241 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065468255 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079679483 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06716935 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066469009 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097744297 seconds)
  done (took 20.997352752 seconds)
done (took 37.60768239 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288069181 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089460487 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089396168 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073883883 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089892075 seconds)
  done (took 1.409281122 seconds)
done (took 2.162540389 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118456062 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114831543 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062248579 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110748391 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062657485 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115177739 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11185221 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080245319 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115450693 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063144636 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110332568 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063550102 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062650917 seconds)
  done (took 1.96746923 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081166131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083550601 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083485764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081125145 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076826821 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081371981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078757603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102839308 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079388975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085986315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063701347 seconds)
  done (took 1.647151464 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08078234 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082677114 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082842034 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080473887 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076744703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08065555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078984319 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100676695 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079289286 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087598091 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063682243 seconds)
  done (took 1.643983986 seconds)
done (took 5.999071913 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077216068 seconds)
  done (took 0.820596503 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.687063374 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.661711333 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082691064 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.130894958 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.218956445 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153616616 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.441912511 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108500889 seconds)
  done (took 10.401062626 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100314928 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085970359 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067607067 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085585487 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070732442 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.0863804 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070959442 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070730788 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083063016 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067523864 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081829901 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070065797 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083730919 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067886518 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069081277 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08202375 seconds)
  done (took 2.055019443 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091832192 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090484759 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089577951 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074267768 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08731682 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071298867 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089720776 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073694902 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08565226 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07141297 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089288336 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073855281 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086255302 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064876816 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088167893 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075525706 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084995715 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075010787 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088636192 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07497867 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089523676 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064396977 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085970021 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074096657 seconds)
  done (took 2.79197136 seconds)
done (took 16.819310607 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.128688179 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074632108 seconds)
  done (took 0.953910826 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080606561 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096111416 seconds)
  done (took 0.933996065 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081497818 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079265007 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088142585 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091448693 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079432574 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06531383 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.100128723 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065409294 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079394368 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066317882 seconds)
  done (took 1.553616701 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067637245 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.090915184 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069720785 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094590879 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072636223 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.078737709 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072121534 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082455153 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076441505 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077117507 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070999561 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097186516 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070496273 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.098740958 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071652156 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082101305 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08512283 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067179107 seconds)
  done (took 2.183425962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065731221 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065948195 seconds)
  done (took 0.891965724 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066267569 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062539042 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080586603 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065874283 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077750016 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061860939 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077528711 seconds)
  done (took 1.252208012 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395222658 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107028511 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.23952007 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085989564 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10112511 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258264335 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082332822 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070107769 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086275885 seconds)
  done (took 2.221111459 seconds)
done (took 10.748480882 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078656184 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084249334 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108034341 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412913635 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104192853 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065033192 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.130085378 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.214783256 seconds)
done (took 1.957269057 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125280672 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.599098217 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.393474526 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210822393 seconds)
  done (took 1.968920985 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.365445725 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090525418 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072758577 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06605564 seconds)
  done (took 1.363908299 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065292887 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068055862 seconds)
  done (took 0.901053059 seconds)
done (took 5.125357509 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065994748 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098789174 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065021506 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063362754 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081415537 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062852224 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062832552 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079868729 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065077688 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064927023 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.080441488 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067775399 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079665314 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06542649 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063226799 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077811521 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065188057 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065270635 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07827381 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063344587 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062615948 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080883109 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063469811 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062918005 seconds)
  done (took 2.48636509 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084038848 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08146946 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070665573 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086054733 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07007076 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086836825 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070828812 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066140354 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085818874 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06829746 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084455197 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069297192 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082569572 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070205873 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083111338 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070131129 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085846468 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06818962 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067746784 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08447257 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070810477 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081337882 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069454102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085424394 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069120409 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084544345 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06840523 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081331021 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070731804 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084357002 seconds)
  done (took 3.072893044 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069466104 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063708364 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078609152 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069879811 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062787285 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079746945 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063174237 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078867674 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064548236 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063906109 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079918909 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063119144 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062951797 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079529347 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064196678 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08162965 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079431896 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062804491 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079334155 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063113829 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066675605 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078212791 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063505655 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078323066 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062875013 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062845191 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078682419 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062495048 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063302784 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078547343 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066382754 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066494471 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078860899 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069936778 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082281886 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063429532 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06658104 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078043035 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063785397 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062923063 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078000361 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063474675 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062834275 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085527555 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063683158 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081129484 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063322952 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064602024 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079212009 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066664078 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077978726 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063720372 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06491298 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079473052 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066985169 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063113595 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079825989 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062966145 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079548523 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063462658 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063133376 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078481004 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066459082 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063857591 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094330026 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070103197 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078570327 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065421707 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.0646226 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081136256 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064608885 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076938316 seconds)
  done (took 5.854531624 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114554095 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089854157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08175908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065555712 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077473806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063438163 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067567998 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079019095 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065410632 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084846613 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06319864 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064674007 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080120197 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076526707 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079697275 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065388841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085180596 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061821065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063471802 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082552031 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064278736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081847307 seconds)
  done (took 2.435308356 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.181830202 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085963445 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107898012 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088990095 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08282009 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072803791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069362559 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085142099 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070653762 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084871006 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067851971 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084889348 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067571298 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083294544 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068036709 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083841974 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069932443 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083507044 seconds)
  done (took 2.315207065 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07654353 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065413389 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103844366 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065324166 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081645168 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068228184 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086649363 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074082384 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083590595 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066203207 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089305113 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067833468 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083283362 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066369156 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068031164 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081148083 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068143351 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081432069 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073982888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08585223 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070438895 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089380224 seconds)
  done (took 2.475323032 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079946993 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066815889 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099319933 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083824753 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061901847 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06406536 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086995034 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06516053 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086812882 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067671516 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065389318 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079489737 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071101483 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080917939 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070144916 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081963583 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067678025 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065196054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083757021 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06214379 seconds)
  done (took 2.268817684 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086600992 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08207271 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066467572 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09063512 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066868325 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082632775 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075331818 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081944521 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06682023 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107626125 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067090109 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082490395 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074430612 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086792161 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067082107 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089986623 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074395492 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091206782 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066883979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08222811 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106928213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1720449 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090110481 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067062425 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082097333 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066931818 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066760106 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087651174 seconds)
  done (took 3.112168855 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066096944 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065673513 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079348433 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063417791 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063160348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079350574 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064035073 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063804612 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081839467 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06345902 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065562996 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081481944 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065860162 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081026319 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066128479 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065760555 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081302392 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063302019 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063691835 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079498337 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065357898 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065082557 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081544603 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063864705 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078212596 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066473956 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063415821 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079189104 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065647272 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063354242 seconds)
  done (took 2.877645854 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076044458 seconds)
    (2/2) benchmarking "in"...
    done (took 0.088667613 seconds)
  done (took 0.951358695 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063870765 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079893841 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079225746 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069990055 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085432349 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066548001 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089209473 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069282711 seconds)
  done (took 1.386281588 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081491627 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076479891 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083356429 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076669636 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092536494 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081726033 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151966744 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.0831891 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072444947 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080354263 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07958944 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065247118 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088379504 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066962525 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088052667 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072867467 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063909159 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086953239 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068231088 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080365013 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067411369 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090699462 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069033585 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062616421 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083713973 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074853669 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092763682 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067583978 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085522999 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073211098 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070516206 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077143278 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066031649 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08336093 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064083651 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091834236 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081197597 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084684545 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075332698 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067093249 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091174011 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061323125 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086623735 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072705172 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091622564 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06675923 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066144155 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077465798 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06392223 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084231154 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061546413 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066259533 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076484824 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072735043 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085360685 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077107325 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06700848 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083470955 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068509619 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084964087 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072784096 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083451499 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069005307 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066288833 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091493099 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070966592 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090910593 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061326876 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059804259 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079609631 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075514306 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104100968 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07226102 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082480623 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067462341 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079384528 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06961955 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067647684 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087589871 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072040739 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081661998 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071988963 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088712041 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06607723 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06798832 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089075167 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065553231 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083793573 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064430156 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09829003 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065364354 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079417353 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064335862 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075955645 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085551664 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066023637 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079339999 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073499195 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060364161 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082603685 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067458599 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082382075 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076647202 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086795818 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071567447 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090249575 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073477864 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066027282 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085699154 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063490997 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083310962 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065786452 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072862145 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076213618 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069413984 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082173806 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066676223 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074055722 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080370946 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066140786 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088931353 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071818716 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080372438 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06332322 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068850614 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082168838 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069141123 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090069561 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064752115 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061605073 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077124844 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069616258 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082038326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070026273 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087048493 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068833257 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06113956 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080394973 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070071944 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09052491 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066683701 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066544826 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088329683 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067044156 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0812956 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072455316 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084890289 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065186595 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071578434 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083058144 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062212434 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085587021 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069075346 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064707157 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085506095 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069342569 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084485768 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066953213 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064570151 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086975693 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066742086 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081713125 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066075618 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080820488 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076611964 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068248744 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078056451 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063533854 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088592772 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064337159 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065661504 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082025729 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06796627 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083486193 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064285267 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065379071 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084906083 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076199201 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08638711 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066786306 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087408384 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076749747 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081662537 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069004336 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065933822 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083184259 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067260518 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090348924 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071822389 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086756458 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068510463 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062101188 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087758819 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073040536 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081185934 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064936359 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065215607 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085026943 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071617957 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085435856 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066605937 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080770264 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066828132 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069394262 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085124296 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065592226 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080652879 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070279838 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065347784 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088805515 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067217171 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091827395 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069122011 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078018864 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070223925 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080336945 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072207518 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061857583 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080692666 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065921838 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066687448 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082203351 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071471537 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077429405 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072802758 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088796744 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067674446 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065156716 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08257882 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072598716 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083368801 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070292497 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069417843 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088118432 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076207182 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081525959 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069474243 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092427419 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065964622 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060038095 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087396329 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065457955 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081380582 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065159514 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063962727 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085654479 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074317922 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089109443 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060364476 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084606758 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065031412 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065658226 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078295408 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07091651 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.084519081 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066905742 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072404702 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083218665 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066997945 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086032182 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06615165 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066799682 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083193011 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068912682 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082817442 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068582584 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065003206 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08490469 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065479745 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080882424 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068692477 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06616242 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082318879 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071298892 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081512212 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066629438 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067647208 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083862113 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067377845 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08267939 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065361273 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068735556 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083827842 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06646861 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084096468 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062172007 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072456257 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082410192 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0737666 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082571116 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06279484 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087041448 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068236093 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070486389 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083741088 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066911189 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084329445 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06584698 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068253017 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089374961 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063977206 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092650195 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073355794 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082757904 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069156144 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06567948 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084713913 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065261035 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083573403 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066954847 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066361472 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082940652 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070377609 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084694406 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066876783 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067081893 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084096095 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067016488 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083325522 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060964379 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064877561 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.0828976 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066256244 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092039854 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066962567 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082130478 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065140759 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067685407 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082197235 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063295578 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089245421 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075138775 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082845396 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073750509 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065066488 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084859815 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076100079 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076943485 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06422979 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063774686 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081249206 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073214281 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083512117 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075413375 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081791418 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06552599 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063638493 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082952641 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065343521 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060536077 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080144704 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069450182 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08178322 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065104744 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06611226 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085858532 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067219282 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092305899 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065716154 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083256538 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066404456 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063048708 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081796178 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065775199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068747622 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084092563 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064920612 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079931343 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065970362 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067583341 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084610261 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066635373 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083816074 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073347575 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065208533 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085593138 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06987079 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080499383 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069849564 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082280248 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066953029 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065395925 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086017544 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069625082 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083629591 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07484529 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065273928 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08291825 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067099302 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080515094 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066368063 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065579014 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082758318 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06531772 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083750321 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074100081 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063012894 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085757675 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066230498 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082763553 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072363626 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08295164 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069232252 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072410688 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083484117 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067720035 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090284181 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069272432 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085266206 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067917228 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066936055 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088018055 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065543079 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088456627 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067050931 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065758744 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084643387 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063725266 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082414587 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066515954 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065597817 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08897199 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066891807 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082344749 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06552433 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063347049 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083500465 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069847588 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089926982 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068772685 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085890312 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061811336 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063723344 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083729736 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064634792 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067145621 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086544313 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071057839 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084803292 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067132884 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081576505 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075133606 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071076445 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086350979 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064702205 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086289269 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067065039 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067313502 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084569199 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066365845 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084059221 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070045742 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066467552 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082404846 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072889392 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085719382 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067834899 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084499975 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067490697 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066167302 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078401881 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066691447 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084143143 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071310903 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067881929 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083257902 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07651745 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080858732 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066674721 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085007188 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065397816 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070659214 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078654741 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06780612 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083197048 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067500712 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062084339 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082255265 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06458519 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067911985 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082566057 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062061023 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093791135 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075089646 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085613909 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065252148 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0644793 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078007905 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061909339 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082363239 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068038786 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067173433 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.0936649 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066280721 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081980966 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061373952 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066104155 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085578346 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068849313 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080038557 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062178088 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066115713 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08647231 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072054144 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081400586 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066723415 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06902583 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085528832 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064503656 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085906762 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06349325 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069148902 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095568503 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066265095 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083655176 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072047345 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090665558 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068284745 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060907842 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08406634 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068751966 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083722186 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067397739 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083388928 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080299372 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085631193 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065204108 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064804894 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085453608 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065603959 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090336011 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068237467 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066989884 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087574443 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067831765 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091062902 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07002226 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090107621 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069175847 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085518733 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065962558 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065939013 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081454876 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065489779 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066297983 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083949762 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070838014 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090535446 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066145312 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092975552 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075225737 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085058046 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063481415 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065676769 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083094048 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061868395 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08361448 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065332053 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064761339 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081503131 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065258415 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067346887 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088732985 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067327682 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084443287 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066403515 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059989556 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085471773 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068990505 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083864992 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063614284 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066173086 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084424472 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070383548 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085824113 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063845655 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067253102 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084593997 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067032238 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078479311 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073880568 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065156664 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08551997 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066181169 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082740808 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067733189 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069270845 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087959054 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067024503 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085627599 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074617084 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084848681 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063925519 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063021792 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088321055 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065411705 seconds)
  done (took 45.46181399 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106190033 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08030072 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061681651 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078900081 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07419524 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080002471 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061757436 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062996165 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08050769 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065449168 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079096575 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062449389 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087355021 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084715984 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091252108 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065032199 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079874702 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062846205 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078969553 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062745546 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086896138 seconds)
  done (took 2.422870551 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07483972 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088040832 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07328373 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092986892 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067192136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087806569 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072153337 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08761241 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092697054 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067199264 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092200466 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07044381 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.084583242 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067769904 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08320913 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070941972 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093046805 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067455791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.0870405 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073116851 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087347513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071893712 seconds)
  done (took 2.579617308 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066889859 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065869287 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084302326 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061671833 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065471652 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078399786 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069142387 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.080998184 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07005276 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064216978 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082241428 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065725342 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09175809 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061174314 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065872415 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080940046 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.128932511 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069335429 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064692111 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085010668 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.0610062 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085245674 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062053206 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061164781 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.081986356 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070031968 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084350069 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063716619 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064995672 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082460914 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065763328 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079919144 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067654515 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066716496 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081935612 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065371059 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065720491 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083019129 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061475336 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080895562 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066744605 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061694463 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082938223 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067237159 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062739232 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082092705 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067945517 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08202166 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061315262 seconds)
  done (took 4.405516118 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084216998 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.126737954 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085334812 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089363394 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100178481 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.090586843 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069581848 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108500147 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063515436 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083306723 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081348138 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101025307 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083376546 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070583506 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06818059 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084108348 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066187633 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082131858 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068997462 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082523571 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06979632 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089549218 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098072012 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079631348 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087465317 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065431329 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081960004 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070702211 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09543193 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070456436 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087838997 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071359964 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.098835589 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067268059 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082830469 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068409956 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099348059 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066157783 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086092851 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063583744 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085954404 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070417538 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090189264 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081989293 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083552497 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070779185 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082732936 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063038509 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096107539 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068354728 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091374157 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.096704934 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069825276 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065071423 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087962979 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.097216353 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066182403 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063002866 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086950392 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095308193 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064013343 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068591581 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.097637413 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084651379 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072940333 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097559575 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072188329 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087225812 seconds)
  done (took 6.502476906 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075103037 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089915167 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079045469 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098466595 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089367296 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072384528 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089442991 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072285491 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089840401 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07789347 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089240159 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110151347 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068009757 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091491925 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072146112 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090420925 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072516621 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090326434 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071442927 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090619422 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.088926188 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08016334 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089723732 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0977858 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102025612 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084686921 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072188632 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09000768 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079526032 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090795938 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100768709 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0729423 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089683945 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097747407 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084333651 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.088768365 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065400665 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089562385 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072762203 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089951661 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067995175 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099156407 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071789625 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085303522 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071074694 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089436889 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097502041 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083196778 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09225752 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094537024 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073548562 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097517047 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071793894 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090451002 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097565301 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105709103 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097325338 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096703086 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072882211 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098097438 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096665281 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.105250205 seconds)
  done (took 6.202962427 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087135 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092720671 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094016028 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062176726 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063714655 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0873245 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063527514 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081005126 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074798524 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.091755906 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077373338 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086595116 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072343639 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094243754 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086916087 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073022095 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086972484 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069844278 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092179178 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069033843 seconds)
  done (took 2.446732399 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.0755464 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100298307 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066974082 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070886574 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087074657 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071710833 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08690109 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068509674 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084619124 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069352567 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093555925 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075890571 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084486883 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072385693 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093017746 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072242405 seconds)
  done (took 2.118669885 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077379774 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094186772 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079630022 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084512864 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06423143 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080942349 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065881219 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061769383 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080661823 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08137355 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084888061 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068334475 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084227149 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065021588 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062857376 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087558361 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06209316 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082032154 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065965952 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.09769742 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077696042 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08204801 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067185406 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067027523 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085145513 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071158529 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085099361 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063951848 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082005843 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066637723 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084505382 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074331487 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080785445 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064987457 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064086817 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081992147 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065852399 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083779066 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068979481 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065305758 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082430319 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06522781 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084021931 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06769995 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080031494 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066680089 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06180516 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090190755 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064059176 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08480334 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065930628 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085343091 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067238659 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074979328 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088174639 seconds)
  done (took 4.990175233 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079587109 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068998448 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079621474 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064105055 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086510382 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067799729 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068486383 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086514969 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067328878 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081857221 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067843186 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086305937 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068949938 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068354348 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08622036 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06960586 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079273574 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067997544 seconds)
  done (took 2.195431609 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07162226 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06534763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09113735 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066295636 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083507077 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068837029 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061275991 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083002967 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064770839 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083524419 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066040983 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068259739 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082671444 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068749791 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083501985 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066292571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067684515 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082243174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066643119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080326722 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068433613 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064376424 seconds)
  done (took 2.455534656 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071707328 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091835234 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.159086683 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105346647 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081205756 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.097357903 seconds)
  done (took 1.458838963 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089808882 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096593216 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066428722 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105179049 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074587032 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085461887 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067675144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085535878 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077056494 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098943985 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067279391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093976571 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093895746 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076838893 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090811846 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072724972 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085540374 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067316912 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084296595 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103244078 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068240071 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093827477 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068617484 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085060684 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068371152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093036973 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076444947 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09894053 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085039547 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076144197 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091392531 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067389273 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094738957 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099093773 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069561088 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093133821 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068586558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102892664 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073310604 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093503277 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069085932 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092247425 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093234139 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07281117 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094483155 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068170701 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090497276 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066292437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086791517 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109296328 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072976935 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093851851 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09210332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076280525 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093894086 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109738888 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081558779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094650656 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091444065 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082062603 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093944539 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07303968 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093897171 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098360921 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073831239 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095202171 seconds)
  done (took 6.465286862 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083718835 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104532871 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068366993 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100081684 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094189574 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068434902 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085509887 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068791943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085170859 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068139269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127236743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068023854 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095229859 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094288545 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068643707 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085618916 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067843336 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09342021 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067146067 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110418175 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085466633 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075243663 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094191222 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094292369 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080849416 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091421564 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067946817 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086178449 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067051125 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086084286 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071912893 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086034371 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093665151 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068007895 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094008159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067824237 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085766754 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072689673 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085890768 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072809633 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094212762 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103005788 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067972471 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086075364 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080488278 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087140175 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067137792 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085845966 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067911573 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085602009 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080555009 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099643921 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09914919 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093580475 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069267209 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08586128 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068948307 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085494599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068634632 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091257616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075748539 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086166584 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110591114 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068355577 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08582354 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076102588 seconds)
  done (took 6.361237371 seconds)
done (took 126.071169029 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212074635 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.195594843 seconds)
  done (took 1.262137994 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068226926 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094426181 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096317697 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127074793 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084896408 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099562871 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115828194 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078461509 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065335913 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084583017 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066317675 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085414357 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130882811 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066057858 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084636624 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068064524 seconds)
  done (took 2.281883278 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101297358 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.192029007 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10659969 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065382274 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097049192 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077216463 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082787961 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076014729 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092212304 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065513201 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076800103 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093928223 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064014717 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09352304 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073510271 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096199981 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064370168 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095783177 seconds)
  done (took 2.479518274 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10189043 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146187856 seconds)
  done (took 1.110452393 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199670429 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122174409 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.199006524 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.408006353 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20313088 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.272216607 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.169650564 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.16913053 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154841968 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.165421616 seconds)
  done (took 2.925795335 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097844494 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.167597033 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306566663 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13422854 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085545346 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113113985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.134649432 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.087385933 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.099627398 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099107013 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080517345 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095248831 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096278839 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093107879 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072951554 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095293262 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118771557 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073242177 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074945581 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094790365 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115845454 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066263575 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073312212 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09237036 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076668809 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.095133384 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065311016 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084719654 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074614824 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092870642 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07739632 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111670833 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.094658137 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128455247 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081508756 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.128910031 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095645367 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071633747 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093339386 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072253804 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.094875693 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076141852 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101660862 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076303684 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08490455 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077298176 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084197841 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066056186 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096970807 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076721124 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09746427 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077388257 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.127687007 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095060179 seconds)
  done (took 6.109244983 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.737866802 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10826106 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092432484 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.798714894 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087896989 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103971865 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.703239198 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114938717 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212665282 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.755350528 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088025991 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096125818 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.176587717 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.211334084 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.920895871 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284004284 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.627684415 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10244877 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107077726 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.129324183 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136839134 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.172679779 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148079084 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43651212 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074721616 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090420201 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135908773 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074326637 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.135520383 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102609926 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090956662 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15200056 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224902443 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.152274208 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094943013 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069627991 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08964392 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145321433 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217636512 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187254289 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.155846843 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067537806 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089040769 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136484211 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128759998 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068577354 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137102171 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.149164622 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165219752 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074186423 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073485363 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.159309569 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136786638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.139981264 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098685034 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.271823397 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.277075722 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068838659 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117493456 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102471859 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212064406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102420125 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.194831974 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136797212 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.1645752 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089681024 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756297062 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145443726 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090033107 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074020998 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117094115 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073005489 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.157002224 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.125069009 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.366708546 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136781517 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093807948 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068684921 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225356755 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08336934 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089323715 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139172056 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074783695 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119086303 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140645676 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158336285 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.143788364 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21083023 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139871631 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136160949 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093895347 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121696663 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075862797 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188166129 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188272635 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138081493 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185400325 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136003892 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157421367 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.144845578 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076621027 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.147036939 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116691079 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09821454 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136318523 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.18615417 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.100490047 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102266479 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071938198 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.155978799 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.102970862 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105374254 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136795307 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.145871049 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.47248508 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145224988 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066936353 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105221631 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137546908 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138357331 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093764294 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210696079 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120683596 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.143837333 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118854048 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066275737 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117442711 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.136512719 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098516592 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120491974 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135300658 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09595334 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21138671 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.165330153 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09689852 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.190692742 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.159792633 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.093342153 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145670439 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117613824 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143350629 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07764705 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135115943 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095542404 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747337112 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.160925342 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098372289 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093619398 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171316404 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0701288 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101706521 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081800631 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087715898 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753497588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105716734 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079319937 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102851197 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073835869 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119215501 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.153627495 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073898716 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137383115 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194575568 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073845569 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117406463 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102015046 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13852873 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07421259 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103019476 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101490473 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083623379 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121232719 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091192829 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083213742 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144125101 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.137307824 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.187913388 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.538489206 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090688651 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081415673 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195518214 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069230327 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259270945 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134049543 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194280835 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138579522 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098262818 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.25496026 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.140069445 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.172587323 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104365433 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149474811 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067129517 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.154197799 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141159883 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069795661 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093921254 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138655018 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143606362 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139157986 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928779003 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069464088 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200288581 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088261778 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.149168588 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073906931 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096613985 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260198375 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071227806 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142915738 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.138886076 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09258421 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081819666 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.748679514 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08273287 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135829845 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094602901 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.188918107 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139825537 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134037525 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135994488 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09429828 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137209321 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.183922222 seconds)
  done (took 39.925487791 seconds)
done (took 56.957274272 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.254512861 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176519751 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.239573874 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143008256 seconds)
  done (took 1.773060882 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142185838 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103457214 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.115605859 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.083829302 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102272415 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084934378 seconds)
  done (took 1.518350321 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.398115804 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261626818 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227827158 seconds)
  done (took 1.777290285 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27841555 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210022946 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445432176 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.293027648 seconds)
  done (took 2.222641751 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.17275322 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.111564521 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066725422 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104428179 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156292523 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247400649 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125885474 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.189759348 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078996909 seconds)
  done (took 2.189410702 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195124687 seconds)
done (took 10.567037096 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.185606368 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129762656 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.207553377 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097016999 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093364849 seconds)
    (6/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082581319 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.151374139 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.21496939 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10272254 seconds)
    (10/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.200217801 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.233802143 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07805104 seconds)
    (13/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.242587379 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101420171 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.115022732 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214975464 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073301403 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.147642052 seconds)
    (19/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.217800121 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092488171 seconds)
    (21/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107682248 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.18724421 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.099084674 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100796847 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112610631 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089771669 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.263687816 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090415815 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.196835642 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076893644 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117495479 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146188139 seconds)
    (33/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107554757 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.223742387 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.224570046 seconds)
    (36/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.211526022 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19754281 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072969121 seconds)
    (39/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097149433 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.178932029 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094018238 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096823014 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.204823491 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092786625 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.208982094 seconds)
    (46/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051713855 seconds)
    (47/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.166080989 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.21595939 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052677255 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097196575 seconds)
    (51/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052918577 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.0655661 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098667149 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073365586 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.223558125 seconds)
    (56/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075459245 seconds)
    (57/309) benchmarking ("sort", Int8, false)...
    done (took 0.161938436 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093665875 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09088812 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089619577 seconds)
    (61/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064924982 seconds)
    (62/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.121737068 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.161131652 seconds)
    (64/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.128355298 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121539341 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096780564 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.197984492 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.150646514 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.166600844 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067268064 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.147185772 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095274077 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116772942 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072920785 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121236378 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087797981 seconds)
    (77/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063056279 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079953131 seconds)
    (79/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.117385987 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070506732 seconds)
    (81/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100620483 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051490301 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066519292 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097203698 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075269723 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073047923 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156983431 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073398484 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.087329009 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095629197 seconds)
    (91/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073323903 seconds)
    (92/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062151594 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.158923011 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092241298 seconds)
    (95/309) benchmarking ("sort", Float64, false)...
    done (took 0.145762981 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.153628488 seconds)
    (97/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090669818 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094190633 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157345963 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069177593 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075407136 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094838538 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087309645 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.169115427 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089734697 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066102924 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085637857 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066169208 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072730434 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.074693095 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05176435 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051153015 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166223621 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.179750541 seconds)
    (115/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103860201 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074451702 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130204602 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073530439 seconds)
    (119/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103149795 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051524559 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.16693956 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067135239 seconds)
    (123/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051635861 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192965736 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097932383 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0527308 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.157082248 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07541202 seconds)
    (129/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105279178 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072979604 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109101487 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05332925 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18858282 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06646258 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071357444 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092784033 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.199260039 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072561003 seconds)
    (139/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070621789 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095292707 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068395587 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093483296 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082459071 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052293432 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116647694 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079272673 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085635899 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07372834 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07065766 seconds)
    (150/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109522544 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051628585 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09368453 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.134949245 seconds)
    (154/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.120962929 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116233488 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.159190243 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052087141 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094976792 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069839106 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0650471 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093917796 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09123838 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164809344 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114915446 seconds)
    (165/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.131610536 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073151666 seconds)
    (167/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157976907 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075129914 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101875569 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061896129 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.0964658 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051743927 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071596023 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.072052517 seconds)
    (175/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06157562 seconds)
    (176/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061367275 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.107039518 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091225523 seconds)
    (179/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051021996 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.071805175 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072262949 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065931769 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089161842 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069679001 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190448707 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052046503 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.133487265 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072672023 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065946941 seconds)
    (190/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.125385161 seconds)
    (191/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072324876 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053952758 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088515417 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075242565 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109786835 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145973774 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116432356 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098420213 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096192 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07150942 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088004283 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052893372 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051708942 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 0.422038057 seconds)
    (205/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094653075 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073970897 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069774791 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157303215 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064273254 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08725816 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051541942 seconds)
    (212/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067774901 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072247802 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.137405542 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.071433407 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064481908 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052912136 seconds)
    (218/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10101029 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075564894 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072802165 seconds)
    (221/309) benchmarking ("sort", Float32, false)...
    done (took 0.14737331 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051228167 seconds)
    (223/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07407648 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.132441328 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051251354 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087516529 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067111639 seconds)
    (228/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.072809203 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071357411 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08976857 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113563047 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052028698 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095507374 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064599909 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08618127 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120023527 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051502517 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084823088 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097987599 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156120491 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19045691 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133772429 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086845138 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051160297 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052995063 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.159506374 seconds)
    (247/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052820742 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123772396 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110915921 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086791411 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051795544 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074722013 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08985019 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066919547 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091471487 seconds)
    (256/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071836403 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065408874 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1393593 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052705267 seconds)
    (260/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071381566 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092638176 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089595581 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.071941236 seconds)
    (264/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062775998 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066848984 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095239555 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051429451 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072222511 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.166350007 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052551119 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092914103 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065531532 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.108758509 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066168026 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090044862 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155738079 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065611095 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.186263178 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086418071 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065994192 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065623834 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072511341 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066164293 seconds)
    (284/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089659479 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087533862 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073264449 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050504408 seconds)
    (288/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.081795488 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051511205 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063900009 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085212074 seconds)
    (292/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051932517 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065937404 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093304581 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073405362 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085526451 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05248139 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05247139 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088946915 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070926604 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052987205 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.071328421 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071026317 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098321952 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151752495 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.0875631 seconds)
    (307/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089447293 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050954155 seconds)
    (309/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084019638 seconds)
  done (took 32.704666057 seconds)
done (took 33.604054863 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079940653 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114591026 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073813201 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.11436824 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080601 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101199039 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072555055 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098732369 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079647561 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.102678196 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07820069 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054489341 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095758904 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074740366 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096466829 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091587393 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.099553795 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072859658 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.094681666 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065437932 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.0735039 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086607166 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066940598 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056469594 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.098309881 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072841541 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.093302538 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074771803 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065359876 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087899885 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06929996 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072022307 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086415867 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078341698 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092704968 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073456158 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095455382 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077017041 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066865234 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08683732 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073228106 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065314205 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093337518 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073050273 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09274555 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071009042 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073829642 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099872059 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091006082 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089224818 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07372572 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.097205122 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076658159 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07163199 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090624615 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073723147 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091213407 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090889334 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096256506 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068386972 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073204319 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095237571 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071494711 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094743656 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073840078 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075131692 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096834124 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071137584 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095695129 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071034806 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064842029 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094382422 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068317557 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086198203 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.0760638 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076597067 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085909587 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071107036 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071574328 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093376261 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065120353 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087923308 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068321836 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071179616 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089404852 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054786882 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069090415 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092892049 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065127283 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074094743 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.092951213 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072474852 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.087672558 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076251639 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065432748 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09234779 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066300383 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065261357 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088691573 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070084863 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086215973 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068054232 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074563385 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087872578 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071661329 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079498047 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087486347 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071509319 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085526026 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06527951 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080701623 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096813035 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065946051 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088944853 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065051888 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072592048 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086796446 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066142334 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065138406 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086633921 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072462179 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065361549 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090052598 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073531684 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10019469 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065602949 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068884058 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08957191 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065579433 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07048834 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087483582 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066184312 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088455451 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06311481 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067725045 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086817427 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072644902 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067519482 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095216437 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067317222 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09540573 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070339575 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071616562 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092370884 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064600755 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058546967 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089252113 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068111985 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067125615 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086919931 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067590603 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064487701 seconds)
done (took 13.016691871 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066371316 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.165873349 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124067317 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095318469 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109388473 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06596339 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.098886392 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102694871 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.089730586 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124895654 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087145309 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106750971 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113624589 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087110489 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065919572 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069677998 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089046235 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088411898 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.122863935 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.107036359 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116549021 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086603375 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118219878 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090345524 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.110322499 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093924233 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088274039 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069959654 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06877503 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123942407 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107175628 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069388581 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06628008 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121151638 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115441854 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085036383 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087438625 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084424258 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086954 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066779135 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112610344 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098835231 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.102671466 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081674684 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093894497 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068602127 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088286257 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085641638 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112292634 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080141446 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109849561 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130919128 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069410334 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103944432 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064722315 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.108604273 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102267665 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068545563 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066400391 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089526217 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066647544 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069348352 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109657645 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114362119 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069546903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103931604 seconds)
  done (took 7.159549445 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083697985 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11428183 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084320778 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105980539 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065884109 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066449528 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088656307 seconds)
  done (took 1.566852184 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067166458 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088149679 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110997982 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088790157 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107262813 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086850549 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097919234 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066675053 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105167262 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067412164 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086830267 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12508445 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067440302 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.095841736 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090224531 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089004683 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090015226 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089132688 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07002925 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111939259 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069870754 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10828298 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068896219 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066470355 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102449094 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067351988 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136557451 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071578232 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089106436 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070583452 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065688081 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.137857088 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103483647 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077942583 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066308598 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103699683 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08132104 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086948116 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083226006 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093773242 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081438503 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067040554 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090619624 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065493201 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070997651 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099598525 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068462969 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089822079 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069910012 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087011677 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089796099 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080590302 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088766146 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071260067 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068482353 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094786012 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07688559 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089713503 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087458045 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068307711 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106378901 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082693516 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103445864 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083957573 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091473627 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080561821 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103167599 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069823911 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069230242 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092800897 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082624053 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087081227 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068491179 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07744987 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.090735931 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090377968 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112262306 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068741558 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0990701 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067723761 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06740546 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090079061 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089936517 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093366715 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067722945 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071599002 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092638649 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064883984 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06573561 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092867425 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065249271 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089764869 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070853626 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0679867 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091784146 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08355846 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067519238 seconds)
  done (took 9.18218322 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068435902 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06833495 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091321808 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067649571 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06833788 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090616354 seconds)
  done (took 1.428403407 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09714759 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.090692154 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081565284 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.094689498 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105255901 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103549775 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081654054 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104205683 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08463336 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.101470745 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081842638 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104804696 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086990451 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095414996 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081472283 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094532683 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081701905 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097948564 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078836865 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096029892 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087764842 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.094993868 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074070294 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082042481 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092295346 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072372194 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098765535 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078628644 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101031996 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083078243 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095519806 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070835796 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093650935 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082595749 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.103878002 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072475582 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094245734 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072090198 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098385691 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070110317 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104618381 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073365673 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077242236 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09379096 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.104692743 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072629922 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07162541 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09941785 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083195712 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095837494 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071440001 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094166245 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071175809 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093631169 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072208404 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103840976 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071614025 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.104364812 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073494356 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072087585 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09211097 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070454931 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104495795 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070488479 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101946341 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071702042 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093604242 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074121763 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096096872 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072468898 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071451072 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092121939 seconds)
  done (took 7.249390968 seconds)
done (took 27.543969077 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.637630269 seconds)
  done (took 1.605551129 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.770471833 seconds)
  done (took 1.740226594 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 13.922868478 seconds)
  done (took 14.900588612 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.601790028 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.746495316 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.798958862 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132142814 seconds)
  done (took 3.249612154 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.86601741 seconds)
  done (took 1.86228944 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232172197 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220716137 seconds)
  done (took 1.429786118 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729395765 seconds)
  done (took 1.716189558 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.271069635 seconds)
  done (took 2.251173528 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.315933781 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178830663 seconds)
  done (took 1.478537883 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.516161622 seconds)
  done (took 1.500289337 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.719773477 seconds)
  done (took 7.710957923 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226034723 seconds)
  done (took 1.225265853 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.265521669 seconds)
  done (took 1.252494291 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.991595835 seconds)
  done (took 3.979326123 seconds)
done (took 46.878836623 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07802071 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080874532 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103119885 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078186768 seconds)
  done (took 1.322839515 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077250336 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073513991 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098693025 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072021987 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099394262 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072880563 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.096951808 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07660602 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072547146 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096384181 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072911155 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094989101 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075471796 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.096453611 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071064833 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075830734 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098342307 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073895781 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098502069 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073005361 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070721533 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097054669 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075893687 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0940172 seconds)
  done (took 2.999703851 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076761233 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073100209 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096639044 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071755135 seconds)
  done (took 1.310797207 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077354804 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.113351679 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088629168 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077181766 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114292213 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109043628 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069594256 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068955739 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093324782 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077265321 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09016029 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097368138 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109603528 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076630414 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101504902 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065492869 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068197738 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109229 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077660689 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099638823 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070558839 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079216256 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090150798 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08987456 seconds)
  done (took 3.11221293 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076581502 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103493824 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.100509936 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089816545 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.114333517 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065457076 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.098069485 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091267436 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.146931535 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065573427 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093521593 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065648182 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.095324464 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065754759 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076540118 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.129998839 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111636777 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.091395215 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09605291 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.088697374 seconds)
  done (took 2.866974379 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074390643 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069901502 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088321298 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068679845 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076445711 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.094953373 seconds)
  done (took 1.469891571 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067678362 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067160218 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089388197 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066845719 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071817021 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.089476431 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06580689 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066498148 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08962649 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067420326 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066289198 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087510273 seconds)
  done (took 1.893140485 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.379713255 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091844688 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068800814 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.086637854 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070625223 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089055834 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079650792 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067559222 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113276407 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066954654 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090052273 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068890165 seconds)
  done (took 2.274988516 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256548489 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077000571 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318892272 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166231159 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138701492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153010702 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103312749 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137095225 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194875607 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137329932 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197498497 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221254022 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132102931 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165865669 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114117244 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105921796 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208550466 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218237853 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104578686 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220296548 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20332344 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154770765 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17897216 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126837762 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133240445 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149018634 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072214393 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104293131 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229755841 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160400666 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198223723 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135836934 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097132991 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227919946 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223364626 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19242005 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161740812 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084416387 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155167859 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163679725 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251258447 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113451811 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191381863 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131506335 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105110784 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171340489 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145183469 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.144698772 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135282884 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114027656 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172355778 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236799828 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.162619669 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111331827 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136661332 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140515448 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142298885 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103064831 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239053562 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215247602 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157102559 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095449337 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097258099 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208674752 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158121322 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140902074 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152556463 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117967933 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164745072 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208844645 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144523679 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171392172 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178919044 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088721788 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144862007 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19301334 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153699194 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200508647 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174707801 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073391438 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150795847 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128437673 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082753545 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168015958 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075485752 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23007587 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123824815 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136831586 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137106549 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133755264 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110342883 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217604728 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199240349 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104056094 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089573613 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128492118 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147871187 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174186557 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111823505 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133157889 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145153932 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079361319 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163878434 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099527657 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150442643 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078714401 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173837452 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159350005 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076055299 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153524866 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126793613 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126929992 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160926051 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217248214 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090453177 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106380273 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198619978 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176465479 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128421598 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17368081 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186130819 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125576481 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127197953 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201889584 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238143557 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090713296 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218408424 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132727399 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083805268 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112793562 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152369253 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137755609 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147664479 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083046406 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.174410987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197623933 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099336479 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095636698 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188394315 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081933775 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105678431 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138321064 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126270249 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095631569 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12551034 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131777173 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167400868 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151281669 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132362275 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152444961 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122300182 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221752009 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113548395 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.128103768 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104742763 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094605048 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.163406076 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18815911 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103418476 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221780141 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152841062 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129723931 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145647795 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083329337 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166408235 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10317796 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070663029 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196799317 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13520856 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110287177 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.206114748 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128110648 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.152939353 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149889562 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160059239 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157997732 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183144337 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106203438 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111727316 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13766468 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150979047 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097455837 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095221715 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106860636 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129235237 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120265913 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084241139 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169784737 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17703174 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098898411 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138015242 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121947417 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176718234 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101053474 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156387194 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145973721 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11960402 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182178583 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208372377 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162083878 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124591074 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172666144 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094862963 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073577755 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115735908 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154787901 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107917907 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083767125 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142983595 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202070263 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156376131 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164665531 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137092331 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147657123 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184233348 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095785069 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115862831 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201003259 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151841976 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153138255 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090606381 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.123257493 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171739195 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132842788 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240023844 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140980936 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14958163 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203813358 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128914513 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080917095 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130192608 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163372602 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130660255 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20449065 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124996991 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088146011 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135554293 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106641343 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129774885 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155103282 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146410219 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161171062 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142326213 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183339301 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077650269 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142561021 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149455612 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148043965 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.089262764 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145582594 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214443598 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095700042 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144181438 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208411326 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079321749 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.150144817 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233118452 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197037765 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085257928 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139499289 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147688302 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154716786 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144922694 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191715784 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137957787 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162046304 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135032004 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08533889 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112238712 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098231022 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132143554 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121135921 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.135775356 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.142475437 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11956148 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158432681 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137766792 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135723085 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144626828 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09795248 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116400958 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122671494 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206141527 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148024797 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228982533 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126005868 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.202810031 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197666049 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099963469 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079226685 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105573433 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16846845 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109625391 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161663916 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120984031 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106076428 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153118087 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194913478 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094734237 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094137165 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136054708 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163437678 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138138388 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124488886 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106383702 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218469564 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129070418 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079411126 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151365857 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130523506 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129662819 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231657075 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061737708 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122257108 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077305296 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106063024 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156584963 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210868243 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082992538 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15077738 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146428678 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147738975 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157421887 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127944436 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097458314 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138495338 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203499121 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156376671 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.11499455 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138422866 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158350317 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185793115 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130490861 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120882063 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228777542 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183632374 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.218725257 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114840792 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142541001 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141656435 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110183151 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193727802 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108333815 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197374861 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108815731 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164000474 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130924756 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118912931 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155668498 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.122974377 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113440829 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177417096 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146247569 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124907428 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079726865 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143758418 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148744237 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132436432 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100598399 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167292219 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072965925 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189904876 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199778891 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106876003 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132168355 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121920914 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081945389 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134404782 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129681504 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112338822 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119080926 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22707925 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.115788637 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179200407 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195793501 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14114464 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164999594 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125650435 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662148042 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078593973 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209378629 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146513863 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233681376 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123450755 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146771052 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136663813 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151598673 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171450453 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129576869 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204164682 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159597689 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.146945595 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104058169 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129198047 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137641031 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092351243 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131574526 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141122051 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143000264 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126425028 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.146315165 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152224849 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108446272 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119489838 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188736669 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144152295 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196990983 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16985764 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084781678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145323043 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193159564 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08006023 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17411399 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185767781 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134479303 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125585557 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105361402 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107271436 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228506156 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09782362 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191565976 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150990235 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135853883 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13978158 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.170871104 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160823547 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134305348 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153956281 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121369758 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138171188 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143274925 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084894643 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103559974 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132008358 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139494789 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099702647 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127845477 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141274584 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181735453 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09657051 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096732932 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129490574 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19765637 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209424257 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.114839656 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108282562 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145142061 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140421686 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142399271 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152828022 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081828967 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108953361 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108116097 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.111592336 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134818079 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141590677 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103642795 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136503254 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222697931 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110379905 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224940439 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121037778 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133219961 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.0697982 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10585995 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122383771 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099030229 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133576945 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123310435 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230593449 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097551526 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116282429 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118894586 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073944001 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108804753 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155556382 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137509058 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148146436 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123547818 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063737031 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135902854 seconds)
  done (took 70.323042577 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140219017 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.117834181 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.131187156 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.187478717 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162187632 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254797927 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.197326044 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239276158 seconds)
  done (took 2.510888252 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069333928 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.114791433 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100736666 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.113985316 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088045822 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068406734 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.290027529 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108587423 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06678993 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113128302 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.117875522 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.089925165 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468775502 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065285246 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.0930056 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085266071 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069539879 seconds)
  done (took 3.200059204 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425308231 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609017227 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.447700491 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073321074 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.790441952 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105242808 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.193553393 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.15858403 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090309477 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.42002806 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.720919543 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.14546856 seconds)
  done (took 17.26063781 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075049152 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069224852 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10834746 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083648308 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097487262 seconds)
  done (took 1.515479088 seconds)
done (took 113.044338442 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079441968 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341384994 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052914745 seconds)
  done (took 1.509002424 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083316917 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084949512 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109924452 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083377439 seconds)
  done (took 1.451710873 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07498071 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075984946 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110032382 seconds)
  done (took 1.349301702 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.276107832 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165542971 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088522195 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082064666 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077882427 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103213573 seconds)
  done (took 1.353638245 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072898876 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075054845 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098539813 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076337448 seconds)
  done (took 1.406677036 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075480465 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052088108 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05519942 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080522895 seconds)
  done (took 1.353102871 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089445679 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10502522 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080372704 seconds)
  done (took 1.362464392 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10725415 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111808986 seconds)
  done (took 1.309345148 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081043687 seconds)
  done (took 1.165547201 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091967363 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139647978 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153982238 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135670352 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164089062 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137424778 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086787105 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.112657316 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102412865 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087706683 seconds)
  done (took 2.303544404 seconds)
done (took 16.253302525 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077938744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391800758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360149525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115225688 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668422844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355683649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004103235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118129214 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119841149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092979555 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083394943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674514617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.967327205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348645941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.956624651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414123092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674762323 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067792816 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066895848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09327397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962871197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092433982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067232914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067992445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.672815787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370448233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093300384 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418866005 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067929195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094707735 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354919867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093021608 seconds)
  done (took 16.089932896 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069940881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142538117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072807322 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083314756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096585464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06973907 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.096597067 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068702002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151032488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067038769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11080786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06779718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09698482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068427524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086176694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093593611 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068404631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068272841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093623093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068328957 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111460415 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067454128 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067523572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094029344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068174314 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105042318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068723647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067819609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09272905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0696767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.095578908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068503767 seconds)
  done (took 3.808607626 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114196884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151214019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073550166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126994217 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112352132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09574703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168505318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092631348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153433154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067470949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110373238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067693509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126386251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068649379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.112628914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068395864 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068348681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093581776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068078807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093480747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086246223 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067336143 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093575885 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068611238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093761059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080829533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093093778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069158827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068296885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095234871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071598933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068066354 seconds)
  done (took 4.088351782 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072276561 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074126033 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107597078 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082781209 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094780093 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071454393 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072123282 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095094938 seconds)
  done (took 1.771634995 seconds)
done (took 26.850793777 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078035381 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069425233 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098101262 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080540896 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097657139 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078205227 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066516169 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099826208 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075776302 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071917581 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101390685 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067716843 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.096077615 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067005767 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073849375 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092789813 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079184938 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096679533 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078904299 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078632763 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095448431 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076841987 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098892233 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079339461 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104291153 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079286946 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082079149 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098915315 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068897442 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095498381 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075998348 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082870505 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.094679606 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079246897 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093841139 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067715521 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066881937 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092929868 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079936051 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.09883201 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070049402 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099097081 seconds)
  done (took 4.621043947 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087602883 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09043413 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110284879 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064783657 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096164009 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064615891 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.113922335 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063407342 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058835322 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113663845 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055620692 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058512767 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088619917 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053676228 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058301162 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055907201 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08721311 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055701749 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058640461 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085045648 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057727859 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053863651 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085662955 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062538735 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055439166 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.086190583 seconds)
  done (took 3.022490288 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074322208 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082849453 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112953855 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126734881 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131308552 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076987512 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.103354003 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087226925 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111294808 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067728254 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070468411 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121367095 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08739079 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.099638235 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067806502 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112168308 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081626205 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068488655 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.099801939 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089857579 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11035048 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077602108 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117887225 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080908855 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066591638 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095726549 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07183674 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.106666882 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072576473 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076676321 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097512673 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070850419 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095048398 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078665664 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071679489 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095265515 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089499932 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103328206 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077508923 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068101305 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097443185 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068072863 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114064179 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111130651 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093429888 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074900631 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074472214 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103669209 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067523336 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110841809 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076865556 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06754682 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097046138 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06689221 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093309945 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081215949 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06939762 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097016583 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077395264 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096931974 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079768736 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071525466 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109534948 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066947252 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101660992 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067413272 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068277716 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092832769 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.0922609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068687828 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134455376 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068509638 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095484514 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076714214 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101340992 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082712451 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094064553 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083465506 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077418709 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09748174 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076236262 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097192179 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071177155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087268098 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09695647 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06960501 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068728646 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100810719 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070091301 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094966398 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080893417 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068584245 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097358361 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084694446 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093718291 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069438212 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073455304 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.098394153 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067574972 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105788743 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073097264 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094493407 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076660076 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066921249 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09813796 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077784311 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098250502 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066713195 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071951583 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100869298 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068004619 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068652831 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096822296 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06973823 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103208489 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073961209 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071994521 seconds)
  done (took 11.222949876 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.189723571 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.183813037 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070713025 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177075278 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076543474 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106642843 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.1772357 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096899748 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096343317 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068409634 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068660728 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129098686 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.122976618 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106398517 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.104766975 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067978132 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113081 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104030298 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179472275 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.173553295 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11410003 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076592738 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070041893 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097017187 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069915009 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077571165 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112026186 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076708386 seconds)
  done (took 4.226663318 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081993792 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127740134 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073643858 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088510562 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118483002 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06795066 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101040844 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069611541 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.106871787 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079188054 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094768628 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073949239 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073880466 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105246648 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068819234 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105088847 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077796033 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069156196 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0978689 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07251362 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104371036 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080155401 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099151497 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06740788 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073962087 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094471627 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065304748 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112456865 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067469543 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116830385 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065798971 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073149016 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108643505 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068334727 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094728351 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.0719976 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070639376 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098852275 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069793574 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06640986 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093476936 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057343088 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066788052 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107147446 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073605424 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087074814 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074004421 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072841981 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099665223 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065348533 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09787129 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070457409 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070441576 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103859434 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07268357 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072637512 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09927029 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065482647 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103373584 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07109721 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064722445 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093437573 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072887337 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066842003 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102755044 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07194011 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093596035 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071685774 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072823325 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101517518 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071500524 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070690144 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092585057 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070089332 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100520522 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072925957 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072462369 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093911201 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067491306 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068455501 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082817221 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067765308 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053621445 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098334246 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066510159 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066840037 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098463621 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073540867 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107865545 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069142035 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101387348 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.0689576 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066942951 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09834382 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063997928 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070657086 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111513602 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111004359 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068049309 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065822823 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109814765 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073073358 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067508408 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084123832 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075163065 seconds)
  done (took 9.789139014 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09569947 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092867105 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097385762 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082763728 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123453044 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092091584 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10283493 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07395229 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069296365 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112010677 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067636724 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103773207 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067952708 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076464271 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12325784 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075612111 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097040997 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077312673 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07166806 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135280012 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08238769 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108918936 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080556082 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095935014 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072977546 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079748672 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12339358 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079816042 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106741832 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085256731 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080328537 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122801345 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086529831 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099252789 seconds)
  done (took 4.272551434 seconds)
done (took 38.249600105 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.191233483 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.38087109 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.173166904 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.025207922 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.211223512 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.180807046 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.186302125 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.172983612 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.256335343 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.175770238 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.430917165 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.729073819 seconds)
done (took 58.235672007 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.312084169 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.313547472 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46601521 seconds)
  done (took 3.908851374 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.565098633 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.030003064 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.4305536 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.17554538 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.176471802 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.477881598 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.705974417 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.966423114 seconds)
  done (took 27.082301556 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.176715805 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.530589875 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.3560889 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.364300945 seconds)
  done (took 17.548296249 seconds)
done (took 58.536893895 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.159226557 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.221744279 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.222265978 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.160785986 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.279926563 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.203121746 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.322300311 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.22394871 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.178598956 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.172134718 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.177839492 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.178679023 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.205963931 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.345236246 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.179579796 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.177082301 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.245304865 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.791775119 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.541305898 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.184858742 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.181745494 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.231263782 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.194440191 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.177906742 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.225100713 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.183042642 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.17794471 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.181487115 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.214893344 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.182334011 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.259827814 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.465157245 seconds)
  done (took 188.967374984 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.17948215 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.242565566 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.326384361 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.207657727 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.753274738 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.392872235 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.328636293 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.813170028 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.193700999 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209722758 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.483350913 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181213884 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.53404089 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.212178965 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.186076963 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.289590131 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.380106852 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.505052743 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.191923172 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.451761256 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.193233718 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.475692153 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.411494698 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.41474327 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.210339909 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.204336239 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.224757539 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.209789739 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383399815 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.32966576 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.226144998 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.223202235 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.723322663 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.04133762 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.190064381 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.191852438 seconds)
  done (took 149.841793808 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.429716878 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.181343417 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.180023007 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.180720369 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.208787486 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.181027753 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.68058104 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.683884967 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.719110987 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.6170512 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240600352 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.354992886 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.181307454 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270045578 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.193366185 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.181217224 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.196434894 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.207467341 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183288892 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.18096485 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.672136566 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.193408599 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.686161706 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187285061 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.18144436 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209045801 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.569525599 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.180879005 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209568749 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.491920878 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.221567228 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180982851 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.450235087 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.88538067 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287878281 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183284904 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.210025121 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.181294462 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.445729111 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181126341 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.182049355 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.185245719 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.729184332 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.184062372 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.680801616 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184437759 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.056522686 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.184068952 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182706734 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.830101476 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.612557768 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.185320914 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.182305906 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.185050873 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.181992496 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.182231048 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.210508898 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.86766057 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.188195857 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.275739603 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.182579867 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.183248082 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.184771227 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.20996927 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.181925961 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.50473967 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183206647 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.264344788 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.242971895 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.400658477 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.68013959 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184174626 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273035857 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299752997 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.182829524 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.182086151 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183217992 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.182534316 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.287206971 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.183015501 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.562289104 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189933142 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.184294289 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.2401607 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.18309351 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.274159785 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.183691077 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.449724401 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.185784249 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.18332266 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.855821172 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272963068 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.183320608 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.183165567 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184145466 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.562718603 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.692225979 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.349895073 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.186715569 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.790266202 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.188565525 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.184210745 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.579002648 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.670805024 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.747407288 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.188087518 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288626641 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189678548 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.185512875 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.184776113 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213195433 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.185507461 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.244929599 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.184915637 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.57828327 seconds)
  done (took 343.120794538 seconds)
done (took 684.47959197 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.851055147 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.832075868 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.937293097 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.829905038 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.806626443 seconds)
  done (took 10.386192229 seconds)
done (took 11.513912416 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.359250907 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.360970147 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.240627462 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.361382443 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215263593 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.376609048 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.340448747 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20924553 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.281785218 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.255797083 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.281573435 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231793343 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211746918 seconds)
  done (took 17.854731126 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.483791125 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.483054646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25046709 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.507549634 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224465511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.485861695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375991399 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.381321078 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.372109815 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.199394831 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198040741 seconds)
  done (took 16.091828428 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491901207 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512682693 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250846132 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49119606 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225691498 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.498839576 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375438439 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.384709533 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.374617136 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.200108797 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198030386 seconds)
  done (took 16.132527387 seconds)
done (took 51.206989427 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.194073204 seconds)
  done (took 2.323543375 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.224048472 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.390478594 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.206744924 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.197627919 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.19580126 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.194986571 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.197715982 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.194892067 seconds)
  done (took 10.93272158 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.193603146 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.193289877 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.191320069 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.194317714 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.194242048 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.194652366 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.194594092 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.194715331 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.191513826 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.191197012 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.192057571 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.193879566 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.19179924 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.192112554 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.192321669 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.192225612 seconds)
  done (took 20.219139277 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.193210907 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.191239977 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.191642998 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.19294431 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.19213531 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.192442768 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.192251709 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.191719247 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.19201622 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.191238747 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.193539135 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.192746615 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.194009996 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.192091311 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.192190276 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.192558366 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.192820334 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.192573593 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.197185883 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.19383333 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.193869294 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.193121854 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.194449985 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.194109171 seconds)
  done (took 29.763302305 seconds)
done (took 64.368488203 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.144391654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.752581494 seconds)
  done (took 9.027872101 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.194664159 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.195348184 seconds)
  done (took 3.522740011 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.195736507 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.195541276 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.195800584 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.195354357 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.195087507 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.195148708 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.195757924 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.196028458 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.19650514 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.195979673 seconds)
  done (took 13.088273857 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.195085732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.196721246 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.193145722 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.195584481 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.196364002 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.192967648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.19705093 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.196115517 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.196587245 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.193407488 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.196837256 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.195209495 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.195502001 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.194283176 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.195982083 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.193785869 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.195165795 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.194988442 seconds)
  done (took 22.648722101 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.196284951 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.197529286 seconds)
  done (took 3.527251451 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.193513541 seconds)
    (2/7) benchmarking "second"...
    done (took 1.194990034 seconds)
    (3/7) benchmarking "month"...
    done (took 1.195255408 seconds)
    (4/7) benchmarking "year"...
    done (took 1.195243745 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.194636471 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.194916426 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.195069476 seconds)
  done (took 9.497283501 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.198667931 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.36625249 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.441307474 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.782812841 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.19967087 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.201195912 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.037975275 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.201695791 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20358322 seconds)
  done (took 13.767308914 seconds)
done (took 76.211259756 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.181411289 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.189337345 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.977392968 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.199718292 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.203708994 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.53324099 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.201436865 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.310445868 seconds)
done (took 36.931971293 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.194256374 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.877893695 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.920039282 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.202581798 seconds)
  done (took 11.135324782 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.185446022 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.075402656 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.177691344 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.160567857 seconds)
  done (took 17.735204217 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.778773031 seconds)
    (2/2) benchmarking "read"...
    done (took 1.521489579 seconds)
  done (took 4.435233101 seconds)
done (took 40.636234096 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200345787 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.196467601 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.199500001 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.197289277 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.199413302 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.196979919 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.197102279 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.196288191 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.200914031 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.20058438 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.199891214 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.200529705 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199954889 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.200052859 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197505369 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197959372 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.200226917 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19993823 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.197955397 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197801572 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196294425 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20003097 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.197081631 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.197956858 seconds)
  done (took 29.904996971 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.201044591 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.198949114 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.200701782 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.200916171 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.198629236 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.200935315 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.200824597 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.198310393 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.200951753 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.201066526 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198075825 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.198508665 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.200783668 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.198384249 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202343442 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.198679927 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.201084236 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19829101 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200445526 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.199246479 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.201680729 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199290637 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.199378523 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201324109 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.199004519 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198132746 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.201733811 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.200162012 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200851862 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.198530056 seconds)
  done (took 37.136094665 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.205771446 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.208527122 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.202254412 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.201300526 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.201865118 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.202305464 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.202763638 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.20263085 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.201158608 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.201488581 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.202373702 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.201548944 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.20218796 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.202266466 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.202925665 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.202633136 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.20267381 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.202689135 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.202851891 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.202578812 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.203148768 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.203146121 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.202762826 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.203009758 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.20224932 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.203450732 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.202300152 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.203786957 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.20301613 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.203471132 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.203584052 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.202749663 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.20275158 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.203227785 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.203507473 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.202887519 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.207757874 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.210008319 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.202933885 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.202636078 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.203288403 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.203540105 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.204017263 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.2042251 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.204289993 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.204043597 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.20391035 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.202788875 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.20399167 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.203596517 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.203896925 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.203961373 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.203745679 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.203761755 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.203569222 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.20518362 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.20369293 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.203827385 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.204948533 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.204124223 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.204380648 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.204351774 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.204264049 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.204261288 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.204865117 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.204332196 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.204405296 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.204489679 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.203866998 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.206234809 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.205304535 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.205098012 seconds)
  done (took 87.8016116 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.20512973 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202807546 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.203179856 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.202553911 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20288761 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.205306419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.202420802 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205894362 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202966236 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.205170498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205064347 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.203381659 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202571623 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205859729 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205962823 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202715329 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.205746355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203371702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.206378611 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.206081995 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205687675 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.20290923 seconds)
  done (took 27.63563747 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206033099 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206716487 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.203395747 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205085443 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20398904 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206584723 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.20606595 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.207001546 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207110424 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205071245 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204020428 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207336618 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.204207267 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204360271 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204329019 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204465142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206909385 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.20437024 seconds)
  done (took 22.840041891 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.204251114 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.204663708 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.206764048 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.204800224 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.205444764 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.207430247 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204662565 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208261497 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.208361563 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.205078984 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.207691566 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207382293 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.207847174 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205221441 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20760892 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205947102 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.207356629 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20498114 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207881668 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205239845 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204965216 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20855712 seconds)
  done (took 27.684890915 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207252735 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.206913419 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.205898641 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205829293 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205494042 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.208588418 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.207717529 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.205493688 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.208655179 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.208337092 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206015933 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.207789798 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.206337193 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208247684 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.206638643 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206533401 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209101569 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207264394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20879921 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.205692063 seconds)
  done (took 25.287859691 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210286834 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210446783 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209764065 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210134674 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210250411 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.209875799 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210434888 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.20964056 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210538944 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.210512337 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.210842975 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.21103828 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210783151 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.210810532 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.210649485 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210837511 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211789585 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210483603 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.211563826 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21162989 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.211855072 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211877934 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211878508 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.211582553 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211819128 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211048863 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21176603 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.211827695 seconds)
  done (took 35.052462498 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211362823 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2119507 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.208196597 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.208307682 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.209603567 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.208494377 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.208687083 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.209669205 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210983007 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207823048 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.21146129 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.211438107 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211336998 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.212221549 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.211926346 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.212194975 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212081363 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.208564977 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209435202 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208915582 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.211612257 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211752688 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.211633459 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209795268 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209403686 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.213578948 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20906209 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208982348 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211773282 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209173823 seconds)
  done (took 37.460514302 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.229999126 seconds)
    (2/2) benchmarking "in"...
    done (took 1.230851126 seconds)
  done (took 3.609582235 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.209209687 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212458952 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.212070356 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209529948 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210170537 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212057625 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21279042 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210528246 seconds)
  done (took 10.836801812 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.213806393 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.213524239 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.213115295 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.212320293 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.213647332 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.215856647 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224309462 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.229023618 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.21770604 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.216575362 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.222807531 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.223853635 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.220096212 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216048679 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.21589497 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218748677 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.214431356 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.214451197 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.21440214 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.213359695 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21517491 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219648615 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.218738542 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.211141687 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.217752764 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.230085968 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.224610353 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.214437933 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.216191319 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.223625638 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.215779699 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.212387405 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.215729018 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.215379732 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.214266385 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.215111316 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228934789 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232694609 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.225849464 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216077165 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215366901 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.212346634 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219711247 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.220275787 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220275638 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.216029545 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.215722035 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.213373346 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.21773251 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.221831275 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.22009559 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217940165 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.213354689 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225367583 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.221309269 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227752505 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.232236444 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.221386157 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.227147336 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.231274646 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.234182339 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.226525981 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220631604 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.21776243 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228749251 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.245377755 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228662925 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.229083029 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.21359336 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.216963558 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.229099753 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234203522 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.230614133 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.217291917 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.217325488 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.217327125 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219997954 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216903698 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231175669 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.239001565 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.2184408 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.217860542 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230295254 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244543353 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.218579282 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.218174668 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.218407611 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.218766676 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.221501073 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232974907 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.234126111 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.216960928 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.22020847 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.219516519 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.223339424 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.218034684 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.218725048 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222219745 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.215759622 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.218318929 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218793747 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.223984307 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.231140383 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.219304983 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.21851359 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.230516708 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.219145712 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220126941 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232996357 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.220134792 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218436553 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.222839591 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.228750714 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.216905418 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225277755 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.229667043 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.220109389 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.223353892 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.220333452 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.219117764 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231663254 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.251229723 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.218622431 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.219204436 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.227107133 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.231106377 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220578081 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.227452069 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.2213423 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.217799904 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.217619151 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.224508744 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.221376866 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.224757763 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220297643 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225081666 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.218114804 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.219994839 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.22135613 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.22429261 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.226433167 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.22365583 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.225194414 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.225948948 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.221284217 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.225222586 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.231372214 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.224052188 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.225587884 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.225378582 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.21876085 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.221722134 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.225624794 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.221636236 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223739002 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222031285 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.223190304 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.221577299 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.222380863 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.222010402 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222009639 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.224394163 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227843493 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.222438839 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.230623847 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.223245713 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.218534245 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.22259298 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.222673516 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224930279 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.222660901 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.222449743 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.227387376 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.230568482 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.222240902 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.223271198 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.229280754 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222809852 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.222755279 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222339091 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.228337596 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.232788565 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.223596479 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.233441857 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.223069174 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22296891 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.223372458 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.225394096 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.226254812 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223978841 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.228911696 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.23114763 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240388005 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235859753 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.226590493 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.227944413 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.227174108 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228014732 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.232527125 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.224377127 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.224207169 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224119131 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225320037 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224800961 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.229398695 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.224362779 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.226349455 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.224451642 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.225024112 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22444641 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224743443 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.228221683 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228569409 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.221722268 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224288157 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224027752 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.22547944 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.222728366 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.225881862 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.226433416 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.225045306 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.22542471 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.237377613 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.222881968 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22857267 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228354383 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.227631479 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.2258792 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.225993762 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231256378 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.228759496 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237926536 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.24624213 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.228762085 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235860779 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.243220673 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.227372943 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.231526093 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.226241778 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.223710453 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230755439 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.23321448 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.226129691 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.226700848 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.225391108 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229025252 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226546703 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.23798023 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.223965646 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.228566929 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.22717228 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232022152 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.224898101 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230421746 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.229485758 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.229765409 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232080362 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227084094 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.227579526 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232060242 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.22692733 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.227316735 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.227818109 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232145946 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.235439381 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236271333 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.23117554 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.232728514 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.230638276 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.23227183 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.231387511 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.228752563 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.229697069 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244572151 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.236972071 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239233792 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.232879337 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.227784498 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237747711 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.231732138 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.234160066 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230923353 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23091505 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23084381 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229296053 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.225951042 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232615448 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.228516699 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232673447 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.23205736 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.232886055 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.228813616 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.230326047 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.229087086 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.229434201 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.22977889 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.231573009 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.229383014 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.236217133 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234447429 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.231426091 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.230667056 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240127947 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248911133 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.234026699 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.232107354 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.231612225 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.230970037 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.232526457 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.229652558 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.235745186 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237729838 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.235018312 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.243196286 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233610187 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243032718 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.230707401 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.236032481 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.238730395 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.227952618 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.231978642 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.233379476 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.230951774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24236141 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.246893746 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233414783 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.234620365 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230557094 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.231938972 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.230978727 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.231208962 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231404943 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.230583203 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244405556 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.249547135 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.236915048 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236028499 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.229126119 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231268237 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.231021252 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.232485478 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240810953 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.232059782 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.235117238 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.233661622 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.235163545 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.232266976 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.231489682 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.232445245 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.230503159 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.231522711 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24265581 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.251090544 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236085393 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.232951096 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.246995899 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232394981 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243673812 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.248078552 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.235303293 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.232919937 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.231843612 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.238827882 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.235488715 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.237453311 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.233087679 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.236695913 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.237251379 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234163103 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.239167915 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.236387871 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.234289372 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.236231712 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244358437 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260699988 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.237662155 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237740696 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.231050183 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.237212976 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.237781473 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.234221039 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.234768304 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.238201118 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24742279 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24129565 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.23638956 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.232950208 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23783377 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234370411 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.233481881 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.233961014 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.234160063 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.2341621 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.239042632 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.234603241 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24250078 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.234912521 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237697609 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239808686 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.238292939 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.249178478 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.234574573 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.238847325 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234930049 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.235158819 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.23800078 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237788563 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.235148217 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238031911 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234900473 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238799002 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244758131 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243692373 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.241154802 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.237716068 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.235079315 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.238735829 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.23932061 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235773053 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.235727948 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.235653905 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.239662884 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.235858429 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.240083481 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.235964474 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.235744703 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238476277 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235977344 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24150261 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.246302702 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239249407 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.232977219 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.236079539 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236884582 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.237526541 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.240758365 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.251472752 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241889652 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.250039146 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.247479849 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.241488176 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.241350827 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242981733 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247935945 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.237984938 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239943941 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.237136386 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.242542438 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.24109509 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.243141674 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237399495 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.249422751 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.24047854 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239728261 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250230769 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.257030235 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237205842 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.24153761 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.244071774 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.240620323 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.235062187 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.237485525 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239779092 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249721149 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.259379293 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238329696 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243688594 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.239092181 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.24165883 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242334064 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238447292 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.243136737 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.236574503 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.241552657 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238671889 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238954313 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.236585127 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241215064 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.240944882 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.243668085 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.249008088 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.236742562 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24389746 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.242602743 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.241705632 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239697256 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239742301 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.235748067 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.236293337 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.242372214 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23945216 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.24292714 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.245233501 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241729101 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.24295531 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.240435815 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240626582 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245986039 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253433838 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.247957952 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.237337452 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241622345 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243053199 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245773847 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239849522 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.240206298 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242328778 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.24459033 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24052376 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240124384 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.240201237 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.245839532 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26184035 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.256452993 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242692745 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.243463941 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249621111 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.240702386 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.238271976 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.240910841 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.247705699 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.247436541 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249418292 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.241108284 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252011429 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25875454 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.245665925 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.245200997 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.247263 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.252857477 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247390911 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241458979 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.242866189 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.249800505 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.262744699 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242717039 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254307997 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27975246 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.261748895 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246962377 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.241656732 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243569163 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.242482276 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.247597618 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.242730255 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.242316655 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243095928 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.243159661 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.245502753 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25084352 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.24611737 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.242860496 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.243189238 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245516219 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.248914076 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.240289109 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.243797173 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.242986742 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.243315223 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.244136461 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.243568632 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.245940751 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260330764 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.257279591 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.24265361 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.243697067 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.240596508 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.250594466 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.24839315 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256466129 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.251376439 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.243805019 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.243818555 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248501512 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243983863 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.241114701 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.24738206 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.246607916 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24516246 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.24080236 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.260745907 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252902748 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.253662805 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.248244598 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244687582 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.2451087 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249159911 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246926078 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245045801 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.250101069 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.247705292 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24908754 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.244732173 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.244879392 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.250875287 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.253572399 seconds)
  done (took 736.140786597 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242278768 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24197074 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243089046 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243189113 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242610993 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243280033 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242845223 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242161109 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.242494605 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243068151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.242913022 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24414461 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24344848 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243202092 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243349584 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242613573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243631528 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243450845 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244416796 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244684253 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243381539 seconds)
  done (took 27.286464776 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.245877113 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.243135171 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243893567 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245964168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243357987 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246331552 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.244138152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246997084 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246347411 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243540035 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247165032 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246953821 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.24395438 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.244538609 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243757742 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247097063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.246990045 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245875239 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.247894467 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243865086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248223345 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24443617 seconds)
  done (took 28.582121868 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.248063191 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.247120587 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.248765854 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.243532955 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.247663447 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.244964909 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.248338529 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.248041818 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.247948601 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.25083572 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.248973923 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.250694052 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.257487623 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.252830633 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.253741917 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.247311528 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.392266154 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.247924722 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248740376 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248538655 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.245806096 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.25854566 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.2460762 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.245827451 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.249750985 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.248329396 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.247894863 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.248826193 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.248864144 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.25312774 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.253132701 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.248567064 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.250913998 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.253212285 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.250924151 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.253196485 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.253082747 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.249874557 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.246115451 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.249452019 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.261776036 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.273856665 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.249872465 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.259661628 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.24962874 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.249674406 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.256133308 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.257775761 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.247006262 seconds)
  done (took 62.614021211 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.250561483 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.251005039 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.247681217 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.250111724 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.250284182 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.250412167 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.249963186 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.251127479 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.247385874 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.248815766 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.250954427 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.248847215 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.248502333 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.25035642 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.250626285 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.248455476 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248181504 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.248267653 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.248677096 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248443979 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.248798848 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.250697472 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.251508502 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.249481741 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.251390123 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.247964801 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2480461 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.251013749 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.249408662 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.248489588 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.251352879 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.250705126 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.25075139 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.248723752 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.249136547 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.251264707 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.25222259 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.248631127 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.251993622 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.249848144 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.251501138 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25135713 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.251676261 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.252773138 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.2499084 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.25015727 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2498464 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.249733453 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.249725873 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.252754228 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.252178934 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.249820781 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.252850023 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.249926516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.251961958 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.253031852 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.249199044 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.250259875 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.252316137 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.252084105 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.250488912 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.252733555 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.251722293 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.252317468 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.253530066 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.251351025 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.250776686 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.252467011 seconds)
  done (took 86.216070534 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253876968 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.253529923 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252894557 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253514711 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254076841 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.253394602 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253951772 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.253086726 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.253025843 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253723893 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253556356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.254446454 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.253688325 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.254362341 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.254893897 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254668351 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.254509748 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254831681 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255108805 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255387482 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.255231904 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254821687 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254500156 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.254777412 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255229498 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255207769 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254710878 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25478054 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255003076 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255348757 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.255885048 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.254773714 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255414889 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.254089818 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256650665 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.255098571 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254889066 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255260744 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.255114261 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.255010244 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.254122432 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255592369 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255718732 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.25542188 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255288869 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255248481 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255817474 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.256205102 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256244464 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256370939 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.255510596 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255872851 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256668847 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256014749 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256648896 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.256414501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256306487 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257032392 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255880228 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.256820979 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256862075 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.256021803 seconds)
  done (took 79.004549591 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256878658 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257201341 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.254138277 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.253942546 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257764737 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25485227 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256346575 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.256524967 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25767639 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.257637627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256997559 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255144149 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254798753 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257458855 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.254630098 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253915813 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254293993 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254192924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257511115 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254384995 seconds)
  done (took 26.307996822 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.255019869 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258748406 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.255292858 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256829135 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.258390095 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.25493816 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.258842708 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258360735 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254911782 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257754716 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257723912 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25836706 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256074829 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255968679 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.258897502 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.25537703 seconds)
  done (took 21.303743262 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.256245535 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.259883538 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.259181018 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.258806516 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.25688492 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.256727864 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259806455 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.25634811 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.257353955 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.259594595 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.260372969 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.258824048 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.259788392 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.259126675 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.256700018 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.259250313 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.257377086 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.257371501 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.259144176 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.258699244 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.25775614 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.257267912 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.259494902 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.259793712 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.257547825 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.258097081 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.257565544 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.257362363 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.256777875 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.260215495 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.257260214 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.257911026 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.258147074 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.257875895 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.260145507 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.257566108 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.259783183 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.260827496 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.260633281 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.260233208 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.260196887 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.25845638 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.260459646 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.261143861 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.257676954 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.260909643 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.258959042 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.258257202 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.258013744 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.258190635 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.260168398 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.26069305 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.262208705 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.261311692 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.261594127 seconds)
  done (took 70.432932608 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260886665 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261110307 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.258834195 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.261017497 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.260863904 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.258808772 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.261415718 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.258524195 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259278786 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.261715209 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.260940374 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.262305347 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259806082 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262546478 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261582931 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261617621 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.259153913 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.260131713 seconds)
  done (took 23.886621629 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260361326 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259944203 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.262123224 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260502735 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.260802909 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262922653 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260325793 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.263127374 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263363616 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260950367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260696014 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.263005753 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263885898 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.263249635 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260192212 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260560933 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.262864261 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262934518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261002824 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260834043 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263388595 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263666867 seconds)
  done (took 28.957576295 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.264617304 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.264269534 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.282851267 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.3102404 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.298972663 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.26393372 seconds)
  done (took 8.882254716 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261426246 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263492625 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260838934 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264430986 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263563779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260555931 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261189086 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261377187 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263836822 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262622533 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261351917 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264807711 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264579848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261436194 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264574787 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263889336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26411652 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262472546 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261988034 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265740647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262257104 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264084928 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26218665 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262988522 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262591532 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262669431 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265325496 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263335481 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263115974 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265270756 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265080655 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262807836 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265193305 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263319817 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266424758 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265851753 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262649214 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265705134 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265100596 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263282491 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.266398211 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265617135 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265577557 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263671108 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266220041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263243786 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263637069 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262994806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264641194 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267225479 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266325319 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264016831 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266328524 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266480053 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266023671 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266664059 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263787209 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264044768 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267628132 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264471265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264197481 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266970766 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264213215 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264354802 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267241092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265166851 seconds)
  done (took 84.634400492 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264125112 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265744302 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264289545 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266861111 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26503291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264903809 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265323105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264813428 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26527514 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265707172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268248206 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265324217 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265046595 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265213507 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264600844 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266325867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265789785 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26569753 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265542618 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269209815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265255778 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264876573 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265157149 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266008624 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266230106 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267937903 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2662965 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265491035 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266552394 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265212075 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265576508 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266338606 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26637391 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.266468827 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266152111 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267324955 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26689046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266169414 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267153308 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269051614 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266306443 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268889996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266620894 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266490543 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26658161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266344145 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267026621 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267117347 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266468078 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267878963 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267697543 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267792945 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267672745 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267045466 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267360928 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267532019 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267290091 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268403636 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267594159 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270543793 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266902414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267111112 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271046087 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267726079 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26776199 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26889771 seconds)
  done (took 84.800723101 seconds)
done (took 1715.437480823 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.319929456 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.267755115 seconds)
  done (took 13.791240977 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.432277404 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.388134313 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.272757175 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.300942032 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.273032413 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.292297175 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.28707298 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.273343155 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.272933004 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.272251675 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.272208678 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.460142665 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.324615158 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.272456826 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.273384163 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.364779177 seconds)
  done (took 42.245491625 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.299537754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.280670226 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.385864714 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.293463517 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.299757631 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.454254921 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.330972022 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.276986521 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.440026819 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.318193474 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.768360935 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.300567271 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.277629972 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.332964594 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.29601428 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.457200477 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.510772265 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.771222458 seconds)
  done (took 29.300846761 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.706792001 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.307139024 seconds)
  done (took 9.221618715 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.28793804 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.311411674 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.318495586 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.312405898 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.313394348 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.315255481 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.312097599 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.325239522 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.303111387 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.320515098 seconds)
  done (took 64.333724766 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.296031801 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.279716828 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.280002619 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.27719235 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.270072288 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.270456502 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.276739887 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.269575181 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.764443819 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.401483543 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.292459005 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.285599057 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.278474663 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.278972018 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.273736493 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.314065584 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.409267145 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.273898901 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.272626774 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.285188128 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.278347908 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.380805738 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.319021893 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.27432671 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.399584778 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.780082073 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.284485534 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.285400282 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.399622041 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.275427475 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.279015174 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.279957312 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.28106441 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.853136407 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.764055112 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.291235479 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.30238637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.289140889 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.274631643 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.391988246 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.280932796 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.286880558 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27209726 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.737675676 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.438987543 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.3879614 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.487683182 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.28129698 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.281083029 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.341566638 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.280511935 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.281115535 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.307712602 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.017377757 seconds)
  done (took 107.926903918 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.314242325 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.769682834 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442479067 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.294008337 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.1224746 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.971948533 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.273789226 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.548840149 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.304180771 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.273540348 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.545377269 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.77088651 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.28015216 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.316438856 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.691447817 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.287487793 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.27399312 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.172643666 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.274148782 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.274301757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.686138474 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290672716 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.274151556 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.321042781 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.313507383 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725665784 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.687161469 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.791189047 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.276835481 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.274655849 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.733661785 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.279306812 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.283748758 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.27800298 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.541888132 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.617997168 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.594613905 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.280521171 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276564882 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.277239127 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.298864414 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.723168283 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.606894423 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.274798467 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.275605929 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.727553748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.274895518 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.277882997 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.278033417 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483541189 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.040870476 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.276958235 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.685833495 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.276310135 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.629093547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.369988826 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.329003721 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754993075 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276002866 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.399470648 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276140527 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.275813897 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278412009 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28100625 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.280217781 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.612240205 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.645693433 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.282723253 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.613451753 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.728715543 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.286814344 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.792141454 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.141607594 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.290346797 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.316074344 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.276467632 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.990218223 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758907527 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.296231024 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.277130086 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.597983882 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.281178514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.550521996 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.290167228 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277340545 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.698477581 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.299520176 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.31433066 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.278474888 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.278737119 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.050529879 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278853953 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.541213999 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.311287228 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.277697113 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.279180337 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.286763298 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278178751 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.278285027 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.284689311 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.794787089 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.281251667 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.403617806 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298145378 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278485589 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.279260944 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.278427736 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.279461428 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501824555 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.804497601 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.282578486 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279981109 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.279340431 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.281898975 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.304772783 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.285924341 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.574647515 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.281046053 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278395239 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.284498082 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.044467618 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.296744804 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279790161 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.295790562 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.127756464 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.485373774 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.297348505 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.279115231 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.281181088 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.294817849 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.589407575 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280457312 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.342190657 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.285869982 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977236453 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.288015859 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.300140992 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.69279765 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.288296387 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.196821134 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.306252633 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.281971238 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.582087951 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.549688943 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.579773364 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.282413218 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.297978109 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975726967 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.33415155 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429300306 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299309824 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.283618019 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.479115553 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.611158544 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.282911625 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.82653551 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.280462966 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498391812 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.28437701 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596424556 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764802476 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.282060241 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.28210214 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979373887 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.932995262 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.07430233 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.285023487 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.554153241 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.284845143 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.73534996 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.281530793 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.28197571 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.857483867 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.282839911 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.288591591 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.282581697 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.282195693 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343827774 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456184016 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.484367704 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.289786828 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.73257262 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318035645 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.282989332 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.287093897 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.283980938 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.633854233 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.294261942 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.282617551 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.319716522 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.283326717 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.284091882 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741622574 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.172296435 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.283178795 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.437194073 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905417499 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.283077715 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.28318065 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.897833546 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.484213697 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823064289 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.314843019 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.580993625 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.293623608 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.324082624 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.068946204 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.360860162 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.743858335 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284568024 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.285176776 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883922772 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.284299164 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.339534269 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.284192635 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.284708087 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810344017 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.284621735 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.289159823 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.604072222 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284301313 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538104685 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.284323925 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.299049328 seconds)
  done (took 1098.586565268 seconds)
done (took 1366.610664901 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.285274374 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.283583243 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.271143569 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.285749549 seconds)
  done (took 26.348468358 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.288975156 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.288672826 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.288006675 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.288489208 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.289797681 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.290176704 seconds)
  done (took 8.955836788 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.857170213 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.284401061 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.28571639 seconds)
  done (took 19.648428242 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.502627871 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.508933007 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.652064546 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.395707804 seconds)
  done (took 10.282138871 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.28847289 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.288558788 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.289407739 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.291071268 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.290142199 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.291858881 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.290537641 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.295356886 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.291045584 seconds)
  done (took 12.83689836 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.127377621 seconds)
done (took 84.421861889 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.389708982 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.298224541 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.125501125 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.284302698 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.362766355 seconds)
    (6/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.289087473 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.401070637 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.599837923 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.536473814 seconds)
    (10/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.557800773 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.861683963 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.322853314 seconds)
    (13/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.817111944 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.368391826 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.485418793 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.285220292 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.309032809 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.125462403 seconds)
    (19/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.018125473 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.346992164 seconds)
    (21/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.639252965 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.336999936 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.715622902 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.459779672 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.745247536 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.295095809 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.702668706 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.657409957 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.301707399 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.365094901 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.292708029 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.34154409 seconds)
    (33/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.533813634 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.347517838 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.294806246 seconds)
    (36/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.309821756 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.291336851 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.008797215 seconds)
    (39/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.301839491 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.782793045 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.326757139 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.30654119 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.027136981 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.401050767 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.573740017 seconds)
    (46/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.284167858 seconds)
    (47/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.52589608 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.282798491 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.13629391 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.294908661 seconds)
    (51/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.819316354 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.192045719 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.309347938 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.088123575 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.713631053 seconds)
    (56/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.394926391 seconds)
    (57/309) benchmarking ("sort", Int8, false)...
    done (took 4.300685654 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.395464903 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.545915146 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.349246077 seconds)
    (61/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.269877627 seconds)
    (62/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.938005576 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.939906319 seconds)
    (64/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.498589739 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.309619592 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.310661807 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.270376099 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.889022518 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.445419381 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.344019393 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.361157035 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.330937911 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.131955351 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.371470035 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.302409243 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.346380606 seconds)
    (77/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.895035641 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.481439774 seconds)
    (79/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.469923213 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.391285375 seconds)
    (81/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.004098107 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.704088979 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.289538418 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.673320265 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.385637593 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.385058129 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.557474718 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.313073767 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.472573668 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.336463221 seconds)
    (91/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.272132968 seconds)
    (92/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.607595524 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.290399453 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.369962693 seconds)
    (95/309) benchmarking ("sort", Float64, false)...
    done (took 5.582982391 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.865722676 seconds)
    (97/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.364963106 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.645059363 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.866903889 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.323009163 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.648871078 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.916744122 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.320159729 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.113406766 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.399625761 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.111278543 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.191197988 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.190679458 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.501708665 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.286359838 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.859766723 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.61612693 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.291601191 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.767125467 seconds)
    (115/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.272456228 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.466931253 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.273495451 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.32888968 seconds)
    (119/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.629497623 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.8582507 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.592373782 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.852411501 seconds)
    (123/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.657705513 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.29031466 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.373750043 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.274937444 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.810320866 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.312779434 seconds)
    (129/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.655241543 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.559620911 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.730955368 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.273726441 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.486959253 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.70932748 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.049205567 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.031258363 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.30804724 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.548787872 seconds)
    (139/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.315048408 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.391073388 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.394595813 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.392235038 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.639650499 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.338348989 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.338520001 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.000020098 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.050135421 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.316374048 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.30597793 seconds)
    (150/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.306543629 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.949756206 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.294234497 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.428581967 seconds)
    (154/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.90541232 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.366213487 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.388451771 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.475645754 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.313746431 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.308321013 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.701169578 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.313927191 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.736262165 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.311320706 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.285918119 seconds)
    (165/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.035459398 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.317070963 seconds)
    (167/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.59627291 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.294118586 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.41513963 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.54600214 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.376086198 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.771000304 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.396872676 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.601687076 seconds)
    (175/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.663989282 seconds)
    (176/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.650029879 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.231795419 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.84765044 seconds)
    (179/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.48932133 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.665893138 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.42173619 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.294327546 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.443884818 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.293498845 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.791964589 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.051103029 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.702135061 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.332540401 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.869798954 seconds)
    (190/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.642615801 seconds)
    (191/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.3186108 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.276727375 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.350515627 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.305768638 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.69133846 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.311704069 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.334834009 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.097910539 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.333980925 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.765532856 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.419826008 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.848942614 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.564612401 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 6.29542986 seconds)
    (205/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320923313 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.319473957 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.074329903 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.88793846 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.349368769 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.933595526 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.126891628 seconds)
    (212/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.375244516 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.122548484 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.796493276 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.420567015 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.09300032 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.286530729 seconds)
    (218/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.225627329 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.823809497 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.497483422 seconds)
    (221/309) benchmarking ("sort", Float32, false)...
    done (took 5.287594701 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.115897957 seconds)
    (223/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.814047575 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.128142507 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.072024772 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.720429845 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.339407706 seconds)
    (228/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.437961712 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.32960439 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.378006962 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.643307316 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.652478706 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.408133349 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.335235546 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.730980925 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.114951663 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.579276755 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.394492774 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.921006936 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.588770701 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.297263413 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.29698724 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.741365299 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.521450491 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.666181906 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.297245007 seconds)
    (247/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.481685749 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.368475669 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.280147935 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.378800639 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.646579653 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.328219611 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.362492258 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.379974709 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.553968272 seconds)
    (256/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.416738457 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.505206324 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.311577952 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.866708732 seconds)
    (260/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.677967684 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.321538454 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.145093122 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.531482377 seconds)
    (264/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.344581451 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.325281966 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.679167121 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.644311167 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.324123228 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.299322787 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.063592624 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.337136915 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.708482199 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.270711846 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.042589117 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.630991676 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.301404539 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.942462227 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.300521679 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.883521571 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.211862542 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.051947263 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.282498147 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.307020832 seconds)
    (284/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.326266983 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.50848901 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.394847922 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.604048756 seconds)
    (288/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.716395146 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.078407749 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.379069539 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.413944446 seconds)
    (292/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.92783723 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.305775554 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324566819 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.446359259 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.677780509 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.283363751 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.312415336 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.328975784 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.340298858 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.172368725 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.513518397 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.321468224 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.300604758 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.410411187 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.300834264 seconds)
    (307/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.313997426 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.772804212 seconds)
    (309/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.701862731 seconds)
  done (took 909.572390129 seconds)
done (took 910.796345745 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.330626663 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324060268 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.307347402 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.330208075 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.419958966 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.341481616 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.318631978 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.31030022 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.357750756 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.358547841 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.307177032 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.342070042 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.309563152 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.308656083 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.308528364 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322657684 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.295295641 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.309347271 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.326271435 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.318856934 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.326011447 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.30775474 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.358290981 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.342453776 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.313946019 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.312589398 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.312296542 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.328632682 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.421447606 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.312573754 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.313513153 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.32088197 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.296191879 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.308834757 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.306728269 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.329087126 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.321494431 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.320422491 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.314629602 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.3421352 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.691803103 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.309497395 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.312552664 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.310942828 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.311704357 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.316863787 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.311720893 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.317083631 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323516748 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.324854552 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.688241301 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.325991274 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.314283581 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.312780089 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.322966043 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.312025149 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.315213508 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326725376 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.330371402 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.326720059 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.316737987 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.318867643 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.313683989 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.327923469 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.318973337 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.728557343 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.307639894 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.317502255 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.701330042 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.318426944 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.732230864 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.320339367 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.313868709 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.326687749 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.343268492 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.304698952 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.30811824 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.313232131 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.319721174 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.3106615 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.322609024 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325167411 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.318775698 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.314949218 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327110597 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.346303928 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.323483729 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.313811816 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.322663014 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.332023876 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.319556149 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.32376384 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.316552069 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.308807742 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.323289111 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.317597582 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.316554108 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.315252755 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.318567682 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.326178716 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.703604639 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330610553 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.311621858 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.312038426 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.314048492 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.328396501 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.706206678 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.314910023 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.337076456 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.362560894 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.316030539 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.298592919 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.317307116 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329633115 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.323794534 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.318908507 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.311769725 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.300035482 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.701129969 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.329875896 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.317828965 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.312984977 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330973154 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.317679348 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.312817496 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.308753435 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.316849588 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329195015 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.436187137 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.326655479 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.346380791 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.313245918 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.319315325 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.348606121 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331577787 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.347200366 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.319448453 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331935151 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.331856739 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.312476824 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.327264453 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.327917286 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.318829414 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.323080282 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.312102166 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.345439276 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328335286 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328981799 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.337698273 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.437712681 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.314448184 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.301438579 seconds)
done (took 221.588945797 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.380178567 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.315822732 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.402853419 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.314839676 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.417900796 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.418052437 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.313062134 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.312524629 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.312350527 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.696668814 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.313245811 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.313388493 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.318495894 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.314400838 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.40090534 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.316361633 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.314252616 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.713926952 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.316412186 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.388603303 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.31392761 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.313686224 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.315658371 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.699903073 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.312188201 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.310688185 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.388985293 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.315148547 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.66532174 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.318457762 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.313777502 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.663645452 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.411276417 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.333494384 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.3258348 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.323690011 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.417639781 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.333231722 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.400652241 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.402009591 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.405849292 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.355202807 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.318547674 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.319771761 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.318296826 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.317778132 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.314320782 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.344578815 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.318042881 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.313904205 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.688277438 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.325960468 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.314908387 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.315912627 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.315598551 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.346707316 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.315878612 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.31875353 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.411577872 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.318129506 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.3830339 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.702323521 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.730242369 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.31685659 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.319184577 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.315650462 seconds)
  done (took 147.48846111 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.3861017 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.392983895 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.432032864 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.320705081 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.369631434 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.435645052 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.322320892 seconds)
  done (took 10.911180455 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.326771482 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.31893205 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.371069526 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370424367 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.319563213 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.468701758 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.318869138 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.332346873 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.31677185 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.374585588 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.319937652 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.319157566 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.325517216 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.320042971 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.369442195 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.332894272 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.43683457 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.322720623 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.31962611 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.477763172 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.317389181 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.326570922 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.374004237 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.333427151 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.32110293 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.327970039 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.900655828 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32029419 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.317746961 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.319214619 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.317699924 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.360291027 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32084991 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.321298247 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.317497657 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439934328 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.320463631 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.31909487 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.321887029 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.318482611 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.321609767 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.320770536 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.321082271 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.319402438 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.321665707 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.346484324 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.321659816 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.321276989 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.321789857 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.32125679 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.374450797 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.322222632 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.318947357 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.320695267 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.381088736 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328505138 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.322509904 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.320001929 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.322511516 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.319674569 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.480788856 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372191745 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.322652666 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371785751 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.322593175 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.323100695 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.322247957 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.323039877 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378645425 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.321885934 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.371984711 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.319025455 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.481573843 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.348439001 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.32329746 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.328763224 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.32843844 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32240847 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.326394232 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.33019498 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.31993078 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.326479143 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.329691319 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.320534654 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.320184325 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.429829591 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435662909 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.320669017 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.337920617 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.331824245 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.321060667 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.37877834 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.322959064 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.3208717 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378098547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.440056324 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.379206646 seconds)
  done (took 152.133149465 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.329208985 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.334745852 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.327472154 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.341189281 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.326685197 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.326524066 seconds)
  done (took 9.241703241 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.328632816 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.325189285 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.32477408 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.325198514 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.323730177 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.324582743 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.324832607 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.328685203 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.329014665 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.325669275 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.325211673 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.326852797 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.326251864 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.324997986 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.32549724 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.324856275 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.324663875 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.322983539 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.32570884 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325700632 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.432236407 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.325049482 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325523693 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.32896258 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.331015225 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.32543595 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335081643 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.325715852 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.326877771 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.335640289 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.327719915 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.326429095 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.329611448 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.335898824 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.331749318 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.329437354 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331244043 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.328705047 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.32397421 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.326765166 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.328774193 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.326613556 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.326397375 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.328477243 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.33043474 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.333853994 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.331747356 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337571615 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.327504053 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.328308926 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.328467426 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.327860722 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.328544772 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.328219771 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.335701874 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333707963 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.332604152 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.328037737 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.327628749 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.331506384 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.329523673 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.32814881 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.332766696 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.332384405 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.326730432 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.328736458 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.3317611 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.33217478 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328069146 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.328956384 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.329822033 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.325521982 seconds)
  done (took 98.012301656 seconds)
done (took 419.034223291 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.677519916 seconds)
  done (took 7.938339233 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.380009173 seconds)
  done (took 7.643106632 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.885872901 seconds)
  done (took 21.151216607 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.3794126 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.449850191 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.336197597 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.333307988 seconds)
  done (took 26.760199838 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.772992305 seconds)
  done (took 8.034236854 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.321444245 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.330676573 seconds)
  done (took 13.91593399 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.92273045 seconds)
  done (took 8.183001702 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.741372802 seconds)
  done (took 8.007368159 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.331496233 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.341531931 seconds)
  done (took 14.19970446 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.306768147 seconds)
  done (took 7.567962917 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.665047127 seconds)
  done (took 8.927059666 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.319909 seconds)
  done (took 7.583188491 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.374944549 seconds)
  done (took 7.635744221 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.147969385 seconds)
  done (took 9.409771525 seconds)
done (took 158.217902732 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.323703478 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.32831729 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.326985712 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.328563732 seconds)
  done (took 26.569219763 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.362599895 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.362227974 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.363769348 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.373956001 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.366186491 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.362649402 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.355014436 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.354963659 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.374253858 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.366100914 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.365091909 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.364716932 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.363860915 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.355381317 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.366190048 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.365512628 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.374108622 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.364723682 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.356207431 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.367000838 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.330698942 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.374716036 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.366732788 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.331244549 seconds)
  done (took 33.950971401 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.533734825 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.406378842 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.487230717 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.385348225 seconds)
  done (took 7.075731368 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.381848721 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.384878017 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.406375763 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.433614996 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.460956701 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.393007977 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.35869252 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.352731505 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.33978088 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.384127243 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.460426135 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.400091405 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.472698946 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.330864562 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.51930799 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.331409109 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.330613337 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.383107095 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.434444993 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.458143856 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.332263537 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.38251955 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.390386355 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.400365515 seconds)
  done (took 34.786249119 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.329445679 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.338142783 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.33639853 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.331075251 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.330689447 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.331696967 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.337643736 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.332703532 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.352216146 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.332125067 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.330085451 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.332141438 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.33021814 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.331599126 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.329883306 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.344538145 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.344708373 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.331327688 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.334463999 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.337142357 seconds)
  done (took 27.963084477 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.327785775 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.181489037 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.678772986 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.583330526 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.328573252 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.32843629 seconds)
  done (took 27.693699811 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.40643446 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.530254709 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.33581221 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.691893194 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.766373364 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.335869263 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.336046271 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.567544716 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.87377951 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.88710545 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.390954873 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.402038772 seconds)
  done (took 19.790992573 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.33811178 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.329334745 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.343709671 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.347118654 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.389692032 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.340032303 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.342384829 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.329286931 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.392588422 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.394837411 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.339609248 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.390493471 seconds)
  done (took 37.544679442 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414576209 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3747132 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.36724415 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068818578 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.706422519 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540301236 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.09200876 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.758912086 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.336129588 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60250113 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332922205 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418970467 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582641378 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344478675 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330631122 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363764084 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557182423 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82255313 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331022258 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.324131196 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357192113 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336445271 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.440562781 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.361109259 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541084389 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462706678 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.613834191 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329811481 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612781025 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341373577 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340413728 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330172274 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60369663 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013230328 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424464607 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340512762 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.026234274 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.047058803 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.324351436 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.409687742 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286121516 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332682084 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341098588 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331678426 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.265587466 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343124772 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771167015 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.338569492 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.042881215 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331159986 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341805985 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425288809 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.335561473 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.149735212 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349275645 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333114421 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.329315925 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339592831 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901306349 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.869745172 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335739518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.268510566 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.709478906 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.424356877 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94806877 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.435072248 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.335487418 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336776153 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267039641 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.404423823 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351154396 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478549245 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.353161032 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972289044 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024696513 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.340215861 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264450291 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885403117 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334113358 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.288312445 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559181777 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333117525 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267456731 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.276861888 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267166286 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073027924 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343737834 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.772197389 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344763393 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.76342093 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.3468688 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350522863 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357133016 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557373942 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.216157226 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333828341 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.347668056 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464284603 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35486678 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.766624909 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271767545 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.336439421 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588268062 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.544361522 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3377142 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.384225181 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54046145 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337475976 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.354587592 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.349176035 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.346250893 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.914752469 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346476776 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882523499 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354602757 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335169629 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11464698 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338483019 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.43788541 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335241393 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585536296 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.142472977 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340150263 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417660086 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337947589 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335309786 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.468106876 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852220219 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.334985732 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.33703854 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339967793 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.348856929 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.336032881 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280840724 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.337163067 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34100494 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.339516232 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.559616641 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335953923 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612750422 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270217502 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482964883 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.428454268 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.558500469 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.528489996 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.334045753 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593996382 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335242034 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353243689 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34877026 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354659163 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434673228 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358951548 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.336968533 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592680947 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.339478307 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.34039877 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.465035542 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341878408 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80175354 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.342080019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.187265837 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914580276 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31626648 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346013983 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226463841 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.35076148 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401808991 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343486886 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.346896885 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.184202315 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.159762634 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.345192695 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.344246696 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560822188 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348400686 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.35128436 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417502694 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.538109754 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921246066 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351587355 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.271231249 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.048767605 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.030882219 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338148346 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273404637 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339070966 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347480463 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349283328 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.850144349 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922210862 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340949016 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.357397709 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.347258086 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349355804 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.344210048 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339493944 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.157231952 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899447078 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351725422 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.353831442 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482921762 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.352998865 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273862034 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.34304766 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345421511 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338881404 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339908222 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373051489 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.35704524 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818825047 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59690482 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.031725975 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354127523 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.4737852 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.373726892 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.340984883 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354680163 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343054889 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.360754501 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348566007 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.350175473 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.384182836 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.013866543 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907644664 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055794444 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876187491 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334288975 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.348404502 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344172555 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.780155951 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278413392 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904749511 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531643642 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.777731142 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28906714 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544225891 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.540712503 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112459774 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350212142 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569066398 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332157516 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.360338139 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355296777 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552561194 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375931384 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341654601 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273201256 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.626435482 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573267607 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344364319 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421645674 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781908538 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353808204 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3461117 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.343470401 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.754512891 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523165162 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.06259779 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.51443743 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349661211 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351622828 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818375757 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353034944 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.567798664 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962617793 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3490244 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.548093924 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282014255 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.35287391 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.353063324 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.34292567 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.66052296 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.344287688 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.59634874 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353986517 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276950414 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357219835 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880528508 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.199699038 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.348925737 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342600711 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125583573 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349528528 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633524249 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.345012392 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.147241975 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349843112 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.278121285 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279006403 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.037168953 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351779069 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32105069 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838593006 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.703869644 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.347472219 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371252604 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190833285 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.59949482 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.35900793 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.92776201 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570816244 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.143608097 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3708123 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.44540747 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349851927 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.330425499 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345673048 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580216823 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.181589151 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569707879 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.4030399 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.251786555 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346263359 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560541628 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34607618 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349606969 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589510412 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.056637176 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.360249039 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046664295 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371132472 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358325232 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.26336308 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.725027411 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357847252 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425439722 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35637069 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.356630282 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.356795868 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524088834 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353740055 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347880524 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.360149103 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439980439 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.937006689 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.156265938 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.349692658 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936905175 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069236646 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.939692467 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359797325 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347187696 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345897258 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281660537 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496558873 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.573211349 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620909083 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479083258 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.836860124 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371987407 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357805402 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3491063 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561749668 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622150555 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.24353593 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359601767 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36089524 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.347377056 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35885254 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.559563122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849693752 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909701763 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539895252 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352596966 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.786057061 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627145268 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348603725 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34787518 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939821057 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.34863291 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.764125233 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.357697477 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360874947 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49902581 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358404381 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039013073 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361197685 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.50452979 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.121999723 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.40847205 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606425403 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.824395104 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.359410727 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938935787 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.056022874 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613410506 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416375618 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36107815 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.465880832 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496536445 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.346334118 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364109526 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35020347 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194690742 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.059665339 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.359708415 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941819881 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611611473 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.346760056 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.349485906 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373015817 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.358693217 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573399331 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106279986 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578241003 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35985887 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356799029 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.164867378 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943209935 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363515578 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285085343 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.354660099 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592883918 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587484547 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370904345 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.803348074 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.061804813 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913063736 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.324152122 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372897753 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361642293 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063589502 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94511052 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.16749334 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853451262 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910677635 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354343158 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627575345 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.356589712 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351600599 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646059983 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.35584789 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.366770776 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365676805 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.940040937 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132982726 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.374777957 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.42544044 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.290906476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694012683 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989964686 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292352669 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360616063 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.543362711 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356726794 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4819636 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364485177 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.357500806 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353266417 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.111355757 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63311119 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.358188968 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.337421885 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.338611204 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358605047 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364070433 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587066679 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362213306 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.028206678 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.707036256 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60775414 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359159707 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.33997648 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.356809145 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355062605 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.341459577 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.55344756 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.867484338 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919886639 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.362289082 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.366307992 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357955188 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.570364891 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564641745 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362175865 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369473589 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361160297 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373008678 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.265845881 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.855809789 seconds)
  done (took 1600.5836866 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406737179 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.371425065 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.384641936 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.447941432 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.378160084 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479767589 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.374964404 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.383503378 seconds)
  done (took 52.520000296 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.366968568 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.583051295 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.388250212 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.365924523 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.370330408 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.357131958 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.804855768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.365340689 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.367557399 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.367351129 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.356398666 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.365377373 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.992625623 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.367773438 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.367214777 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.345162959 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.366113922 seconds)
  done (took 65.797090942 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.358599408 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.468694299 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.457942863 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.356430938 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.535170598 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.36632903 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.378606795 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.426154098 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.374990301 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.430506299 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.025549983 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.410458899 seconds)
  done (took 79.884124791 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.366102496 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.365911086 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.367474025 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.36672848 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.366712737 seconds)
  done (took 8.127157076 seconds)
done (took 2023.550099814 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.738623226 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.069280538 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.049595431 seconds)
  done (took 5.413077715 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.508023961 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.556718621 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.699116667 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.704477109 seconds)
  done (took 7.765077129 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.645871949 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.750111163 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.544478391 seconds)
  done (took 6.236499253 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.811366435 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.370166391 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.481234243 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.357919691 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.358512573 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.358783584 seconds)
  done (took 20.373097618 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.3633171 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.365953819 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.362820128 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.36574116 seconds)
  done (took 6.755655544 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.343738235 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.117387459 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.351253409 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.362015343 seconds)
  done (took 18.471691451 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.108785424 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.122495798 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.107053179 seconds)
  done (took 7.634959409 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.364613587 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.209649073 seconds)
  done (took 9.871309372 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.656276094 seconds)
  done (took 2.954170583 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.49380687 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.631570752 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.402644217 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.338171071 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.426906949 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.362771807 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.082129429 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.637059855 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.331673143 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.583264603 seconds)
  done (took 28.588742396 seconds)
done (took 127.761317702 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.232271988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.385809207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.564107892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.242383872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.594923129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.565133027 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.647670985 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.211909833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.710710826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.697937696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.20736715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.59598403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.602575136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.386813672 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.603125266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.770217003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.596538279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.264430926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.887439773 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.088321304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.642817576 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.835071753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.02799494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.855406512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.596729999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.511832131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.434339147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.773414474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.061623273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.451685787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.512603606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.260473288 seconds)
  done (took 192.118677908 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.366202525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.363113055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.364967555 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.364516444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.365529682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.363773088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.378035588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.364994148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.379612136 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.373165026 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.365091081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.376914776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365834309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.364942108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.378088016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.366114323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.365540637 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.365439444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.381893609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364955192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.36645474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.391882062 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.365745622 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.365249109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.388608613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.36731495 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.364475945 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.364874519 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.365707563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.380111943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.366897174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.364820981 seconds)
  done (took 205.132251628 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.366005617 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.365307029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.36590248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.365831499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.365876425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.36805313 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.368505892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.365680123 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.386453065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.392860497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.366230091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.380615012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365285298 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.373012451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.365449454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.379776321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.37583803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.381601263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.36790826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.367925656 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.389080948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.366329623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.367039927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.391768963 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.372850136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.366165454 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.375941603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367057696 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.366825586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.367537941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.384298131 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.375710763 seconds)
  done (took 205.227790279 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.562543015 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.372956751 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.374166536 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.307408836 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.373414263 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.372424934 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.371709546 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.565439885 seconds)
  done (took 14.60313828 seconds)
done (took 618.380372651 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.741504941 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.451314712 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.571912095 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.393122932 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.201635434 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.39616075 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.394207854 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.562727251 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.293783893 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.566817147 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.635020222 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.392100718 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.775613405 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.391810967 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.645570567 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.489054243 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.255465219 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.370608025 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.713652522 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.977353965 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.649248971 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.849243645 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.562483803 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.290879111 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.774039726 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.84607793 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.080345795 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.2549851 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.391320505 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.708047533 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.097243652 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.341937928 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.454697747 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.436122032 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.48798281 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.470971114 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.319728765 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.435018491 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.578533702 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.606532198 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.962483132 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.107961237 seconds)
  done (took 93.231463379 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.362034748 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.362512584 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.361487326 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.362275354 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.362505377 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.362297575 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.361741702 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.361162572 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.361828676 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.362049374 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.361569514 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.364372234 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.361484107 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.363592588 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.361492015 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.362786688 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.36320795 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.365220416 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.362288853 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.361878887 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.362151451 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.361723173 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.362860465 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.362301184 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.362980622 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.363741607 seconds)
  done (took 36.731506077 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.375649975 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.613942189 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.794346432 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.385004879 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.378315596 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.38254499 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.456467401 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.377881708 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.382051894 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.382279567 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.536482206 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.37894893 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417730822 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.801166013 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.381496547 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.378156191 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377511763 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.380005972 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.621852264 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389872431 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.460649594 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.379141529 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.458833776 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.390407478 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.382745302 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.380776004 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.384737669 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.868505361 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.382257477 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.537540808 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.180347777 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.458828935 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.827597607 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.807725097 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.175967804 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.381221346 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378844997 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.542679262 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.381560229 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.381948181 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.45827402 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.38195897 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.807256128 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.010027013 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.400621688 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.380326587 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.893735948 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.543957522 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.631932223 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.390644357 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.833246927 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.385725694 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.38192497 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.384845378 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.632321752 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.391004059 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.382721957 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.913812893 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.405087433 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.461254114 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.382152867 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.384866602 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.633357932 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.383678038 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.620999797 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.385646717 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.393025568 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.384885487 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.80970029 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.386976832 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.02659421 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.400766104 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.381865558 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.541466117 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.622458127 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.931987948 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.387896249 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.637361083 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.841956386 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.461261044 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.387095006 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.862528193 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.464336313 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.388674225 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.384167247 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.384515854 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.382492381 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.425996462 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.461088474 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.956062882 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.018081101 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.932926908 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.465742804 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.398142733 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.386243742 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.917501304 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.384210434 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.382749956 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.806585827 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028994742 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.401565329 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.394158664 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.015126555 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.404120721 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.464920279 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.391042581 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.815702625 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.388188336 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.42707969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.383635327 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.394160613 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.388706827 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.464258288 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.39011331 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.385459964 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.006366241 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.564756504 seconds)
  done (took 181.214303229 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.380310042 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.380650073 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.380768219 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.380919167 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.380716409 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385751096 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.380078117 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.381212414 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.387300201 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.380497309 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.380655994 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.380125858 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.382748009 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.401014012 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.39111023 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.388070864 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.993129436 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.382946609 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.380160535 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.381152468 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.184568995 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.386823268 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.380913026 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.381490872 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.382251396 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.380256045 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.388950905 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.402316466 seconds)
  done (took 153.483517039 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.386340853 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.958753726 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.386477424 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.521026646 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.406333832 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.383617399 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.51957768 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.446690427 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.390881804 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.38330628 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384233632 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.694037953 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.38770698 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.905676401 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.583939419 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.522734981 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.908080966 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.387393446 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.383805576 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.385101006 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.522806181 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.393682209 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.696012801 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.960899959 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.388810725 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.960984197 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.375490516 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.38656877 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388390937 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.964524817 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.384644161 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.695474522 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.467518088 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.448583275 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.964647281 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.911353899 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.908077372 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.534978119 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.389605811 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.385412905 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.385418962 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.376306184 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.966736002 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.38863084 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.392295621 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.957611071 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.404015208 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.387607116 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.396249166 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.386541442 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.450295055 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450630622 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.70359004 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.972284613 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.465213505 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.407886534 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.526471029 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.771265222 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.38962265 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.911931749 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.375226062 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.967014034 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.391991211 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.376850576 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.38845836 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.393014791 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.53890995 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.523978596 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.912725463 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.39176293 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.914227447 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.540773372 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.386477751 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.387308987 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389295342 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.967906652 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.914826316 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.540577199 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.525834711 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.588551702 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.377812225 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.391600541 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.377661098 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.46977711 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.38765772 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.967366422 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.916381466 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.390153646 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.390829873 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.391145696 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.391209425 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.571707013 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.971640348 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.470807494 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.905747772 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.717339982 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.703142042 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.391111837 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.45008307 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.389737188 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.705260093 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.392058559 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.447848397 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.834041759 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.705779711 seconds)
  done (took 165.38916849 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.63547729 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.660706952 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.482552381 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.504563356 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.925855966 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.954016222 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.609162661 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.525021744 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.500165795 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.641638606 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.626581817 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.485551702 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.576890714 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.468263688 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.114065308 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.461664384 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.481478095 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.516450269 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.50040354 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.441778002 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.014357541 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.674052322 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.56385306 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.591944197 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.489797222 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.242392933 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.938564911 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.902267227 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.561101345 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.729209389 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.939868197 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.542963101 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.359911846 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.055880846 seconds)
  done (took 67.042591593 seconds)
done (took 698.395417055 seconds)
SAVING RESULT...
DONE!
