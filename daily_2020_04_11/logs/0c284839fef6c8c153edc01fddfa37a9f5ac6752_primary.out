cset: moving following pidspec: 2281
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.365734564 seconds)
loading group "string"... done (took 0.580640005 seconds)
loading group "linalg"... done (took 7.64026258 seconds)
loading group "parallel"... done (took 0.160905034 seconds)
loading group "find"... done (took 1.130118606 seconds)
loading group "tuple"... done (took 1.854918436 seconds)
loading group "dates"... done (took 1.236917623 seconds)
loading group "micro"... done (took 0.234647817 seconds)
loading group "io"... done (took 0.902680846 seconds)
loading group "scalar"... done (took 37.168157472 seconds)
loading group "sparse"... done (took 11.498650836 seconds)
loading group "broadcast"... done (took 0.917752893 seconds)
loading group "union"... done (took 12.433140813 seconds)
loading group "simd"... done (took 4.529244369 seconds)
loading group "random"... done (took 8.659125445 seconds)
loading group "problem"... done (took 1.786117715 seconds)
loading group "array"... done (took 19.949638726 seconds)
loading group "misc"... done (took 1.758233002 seconds)
loading group "sort"... done (took 3.119484386 seconds)
loading group "collection"... done (took 17.07553333 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.558979586 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137608846 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142823236 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.129514942 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156925531 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130178896 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134531068 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093280528 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.902460527 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155217507 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119339529 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412170895 seconds)
done (took 5.549680251 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179519583 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087118565 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088388638 seconds)
  done (took 1.316910384 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07305602 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131540229 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072074117 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074976129 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075387285 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074190188 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074366741 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074172441 seconds)
  done (took 1.720061562 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078779807 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074765393 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073988847 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.076221921 seconds)
  done (took 1.445521251 seconds)
done (took 5.886147067 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.781151089 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217310824 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191976755 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397181291 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135724857 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178167404 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652093253 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317635176 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191628102 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080580085 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112271934 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.348024109 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125470352 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648630746 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079430545 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094947136 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141121355 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417926809 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072899328 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08755846 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094415698 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133634389 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092493372 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078888254 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149831772 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073050234 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13937912 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085408917 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071963548 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218641206 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17818817 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668319882 seconds)
  done (took 10.428789014 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107328398 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103912642 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075886558 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133253684 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106247975 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078575726 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082826808 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074930587 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098007844 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.137621434 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09630313 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110446929 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071340515 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074208139 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088772866 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213587174 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085329235 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087139466 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075637841 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083601818 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113202628 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083224786 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084406737 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085096258 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133770995 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185364907 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101500078 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102981669 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071956426 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08674356 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120385827 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135795321 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074447606 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074068643 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133872584 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105197558 seconds)
  done (took 4.857722386 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.000130128 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147003347 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097439157 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140698162 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072106073 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115700572 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073059367 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085438693 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210810309 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.443214834 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093204114 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.586338814 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097389768 seconds)
    (13/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115040043 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115465774 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108119952 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073006402 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074921055 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074984467 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.496008039 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105268658 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112916889 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086433753 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076301727 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.075145809 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.071034932 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072790076 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072015786 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07621123 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.122517784 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081843343 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.311696071 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127314673 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073348461 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.939998117 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169476033 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.20974294 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106426771 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168216082 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098878546 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148295287 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076524858 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073296117 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166771531 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07083804 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075443784 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071514351 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089667058 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111560875 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124793431 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071329458 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071435621 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172082572 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070767155 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084514971 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.138689283 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160773267 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073966448 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296002578 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09507912 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075549003 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070721719 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.171275606 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123662194 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073306547 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072231835 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073893817 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07470207 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385451223 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073814481 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.883254245 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076760922 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.088159265 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077546966 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075073818 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077761266 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078265839 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09632002 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073627455 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081307088 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073393656 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073461923 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074251103 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090907099 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.365932367 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.174653416 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074988423 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072993259 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098665517 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10333019 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075680836 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073034897 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107260747 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.071473044 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074792231 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074138623 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074625682 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090664168 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072661924 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076472703 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121181734 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074901834 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092332679 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10283768 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074268053 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103656899 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083757495 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075964865 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.410085364 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070824543 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074197664 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072390157 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.074898233 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07434459 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085467283 seconds)
  done (took 22.307507053 seconds)
done (took 39.735098919 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247110503 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076931891 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077356294 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077353248 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077307025 seconds)
  done (took 1.782678638 seconds)
done (took 2.996864109 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124628878 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104949063 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07188432 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103769684 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071640667 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107516132 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110723837 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084463939 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10556302 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071962969 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103950356 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07130381 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071677697 seconds)
  done (took 2.430071145 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088508234 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090136943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077326766 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090420269 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070708287 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089967456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089267753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097009584 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091289928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079977687 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071001315 seconds)
  done (took 2.141772614 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087220082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089478053 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076835609 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089635543 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071009865 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089010566 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088697753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093142266 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08892402 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081523045 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070430627 seconds)
  done (took 2.126106014 seconds)
done (took 7.899177834 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080911612 seconds)
  done (took 1.272227962 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.531157179 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.677941078 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084201124 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108707667 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.1917082 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.114889242 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.247216413 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088595508 seconds)
  done (took 8.392470626 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093832841 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088093664 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076424649 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07494269 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075658199 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074364747 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077829742 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077596882 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075579381 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077214317 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075283601 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074427031 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075577462 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074856576 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07632421 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07679051 seconds)
  done (took 2.511635616 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096637454 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096515731 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.079387891 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079232673 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076943825 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076429796 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079601323 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080381634 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07787109 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079166752 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081688775 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080052327 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078339592 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070671938 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079526837 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080791804 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075240349 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078500284 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078934314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080596187 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079602276 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068784549 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077829414 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080689517 seconds)
  done (took 3.203505674 seconds)
done (took 16.581159914 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11040114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072943763 seconds)
  done (took 1.382688036 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084587067 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085034526 seconds)
  done (took 1.378734225 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085562366 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069929064 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092034656 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080359105 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070750706 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069717053 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090133227 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072247006 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072226892 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072969019 seconds)
  done (took 1.985067129 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072139488 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081264439 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07389099 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084237679 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076742051 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068774296 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075227867 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072193634 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079930265 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067245542 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07505959 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087087746 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074754162 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088834444 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075406473 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07222139 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074056486 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07116722 seconds)
  done (took 2.582828301 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070282365 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071510411 seconds)
  done (took 1.359509273 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070889035 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067917207 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07088389 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070421668 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068299545 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067074384 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067998652 seconds)
  done (took 1.694948146 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389079523 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120164894 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.309469928 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077418288 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08632422 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257075391 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071871742 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076470038 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076437431 seconds)
  done (took 2.712921963 seconds)
done (took 14.31148857 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085559171 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091579505 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100477041 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.384363719 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096884716 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072506583 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118904181 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185023205 seconds)
done (took 2.359885151 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212765446 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.657339496 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404806657 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206882949 seconds)
  done (took 2.48688387 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344183393 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093656774 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066708487 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072917562 seconds)
  done (took 1.803018697 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072258465 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074693233 seconds)
  done (took 1.369002346 seconds)
done (took 7.094873423 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07261473 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.204852927 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069102712 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072871117 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06919586 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071376528 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06936578 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070127002 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073402461 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072222284 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071720919 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.072086993 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073291146 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073315412 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070876567 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070661521 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070803865 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073130395 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070786063 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070744894 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070722739 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072637671 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069840287 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069164313 seconds)
  done (took 3.095360778 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088169929 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070986908 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076214827 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.077330431 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075702373 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077545415 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077400245 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073395825 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077871168 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075454724 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075498353 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075259989 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07524625 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074944407 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075469546 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075295504 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077743482 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072908685 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07495879 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.074547465 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075393932 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071331596 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.075077955 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07741101 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075360455 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075541596 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075766145 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073279163 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077701867 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075036353 seconds)
  done (took 3.503333851 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075753625 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068100867 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.070133575 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078885109 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069953505 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.070411763 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.069882147 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.0704709 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070405196 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069867772 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070993637 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069764894 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069646897 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070901561 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070289179 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.073957807 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086851304 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069315747 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068892913 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.069300458 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.072168068 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070450625 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067993688 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068146343 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068828538 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069148079 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070471161 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069952669 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070798939 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069794681 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074369798 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074556231 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070075628 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078550742 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074492601 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069891408 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.074800512 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.070030974 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070320557 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070030348 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.069529743 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070050592 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069892123 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078128938 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069858409 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.070708394 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070580574 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071548469 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071024958 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.07218737 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070086778 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.069582667 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072374209 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071283563 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074955173 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069711273 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070706773 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069984767 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070805117 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070346881 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.069735301 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069954017 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0732958 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07094367 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087243351 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077974958 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.070023257 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071429461 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071035055 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073656993 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071942957 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085624902 seconds)
  done (took 6.407523727 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092390311 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091955765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071082441 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070769748 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066640293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068993898 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074341054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069036089 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071243393 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087651304 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069397717 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070848606 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071018601 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072800713 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069275092 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072601428 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079802555 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06720746 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06870946 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073183815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068730621 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07404718 seconds)
  done (took 2.869505322 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153145707 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07525571 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110182537 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079748225 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07508023 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079149613 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074720404 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074924616 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074914712 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072467061 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072659204 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074933868 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074459408 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072669364 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072824385 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072287905 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075044595 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072656406 seconds)
  done (took 2.695078766 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081849771 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071488934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092756213 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072808535 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072711215 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07365461 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075647382 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08029007 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073919296 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071557876 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07961755 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073208676 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073606832 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071537169 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073624991 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071027918 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073421409 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071547045 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078502682 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075317208 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075254066 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078696035 seconds)
  done (took 2.90165133 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085377587 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073215026 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087237669 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073166751 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066101366 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069663043 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074979422 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070752854 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074923802 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072749354 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070863181 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069380772 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07319429 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070994278 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073235361 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07123223 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073095883 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071084834 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073203312 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066331946 seconds)
  done (took 2.702819009 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089059926 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072768485 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073032929 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080841559 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075017437 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074090463 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081062264 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074160759 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074072461 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095304747 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074667344 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074392899 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081016952 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080854881 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07310402 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078873471 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078434216 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078593523 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072815356 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072389525 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093326302 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073070004 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078809072 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072292932 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072162404 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072210175 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072300989 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076255256 seconds)
  done (took 3.406396047 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072561951 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072069658 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.070814047 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071103802 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070807899 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07114656 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071214717 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.070995442 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073861954 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071062787 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073681522 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073070876 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073870296 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073328959 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073202624 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073372124 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073549382 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071098353 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071429426 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071167784 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07333053 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073322615 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.072856498 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070990374 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070471775 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.072980367 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07122447 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071174177 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073260763 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07075304 seconds)
  done (took 3.409272202 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080060173 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077955042 seconds)
  done (took 1.404681717 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067408559 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085362666 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068156046 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077385651 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07599148 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073316154 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078040843 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074228952 seconds)
  done (took 1.84249285 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087160314 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081073874 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073760564 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083566041 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08218069 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089112983 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131721821 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.072942189 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079741585 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071401579 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085710414 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072582039 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.079932927 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073854817 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079527378 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081233857 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070394496 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076256635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072077569 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069639684 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071423712 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079683007 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07628853 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068380903 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074784505 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097000769 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0848505 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072289979 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076986817 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081550035 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.079955136 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06735739 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073187747 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073014754 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070579089 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08163675 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087852422 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075304432 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080129935 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071228305 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079041192 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066327909 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07592322 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078785437 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082542493 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070820524 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.07087191 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066138344 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069858954 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075541211 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068116991 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074204897 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067709444 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079275279 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075038627 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083788424 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071846519 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07505394 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076391497 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076572564 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080377633 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075115394 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076761151 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072087852 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083457969 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079113677 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082018959 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068157279 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066843076 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.070873151 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083143268 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097489138 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079572228 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.072751834 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073427577 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.070336714 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077357102 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073382324 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078792352 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080867942 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072764526 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077926493 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081303282 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074960275 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076379699 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079628365 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071475535 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075676667 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072290008 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089615996 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.074526791 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071096349 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071899956 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082974605 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076288243 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070231198 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069638595 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078816308 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064983194 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070468909 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071171873 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072423469 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081177814 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074861085 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074496428 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079790394 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078610039 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072738847 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074481631 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067519973 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195980142 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072622999 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080541377 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066228426 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077226388 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074807453 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.073237188 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.082670432 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.071525081 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.072662544 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081835744 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080623049 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.071939982 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070296745 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.076648751 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.072478193 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075383387 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08191092 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071547052 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068485623 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067559657 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075623811 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07303428 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077322451 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077270852 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077156279 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.067592369 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071010767 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.077858392 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.083007509 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074445054 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.074922727 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.078923834 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074955664 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.071453907 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080260734 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076692991 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073422584 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078559465 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073390944 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066341513 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073333437 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074560246 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070517547 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075857609 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07334844 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07394433 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070759977 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069283651 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076230995 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071386238 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071023904 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07197903 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069825645 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081711595 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073694079 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066235622 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068109268 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077254875 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070021512 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069741651 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071525013 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073933489 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072339604 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068889218 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070347911 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073714803 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078537964 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073431178 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071214251 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076917147 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083622037 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069947725 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074015526 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069913297 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071430607 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071376179 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080614647 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077989427 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075095468 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074199318 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068090915 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076482764 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079902497 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071620652 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069096966 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071252359 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07422933 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077573995 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074121525 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070888693 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06909749 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073147708 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073113342 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074423667 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070472351 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071794584 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076040895 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069116421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076554482 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07154036 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081417168 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075164436 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065922343 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07460788 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070599716 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.080436669 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067888729 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07162023 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.073042171 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.07302878 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.07165854 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073388302 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065523302 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.206180118 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080394704 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073530334 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072242574 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.07150074 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080055804 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074171038 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075668518 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076283147 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078625391 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082978171 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071045963 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075578986 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085016438 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070242427 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066038787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077448198 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068983209 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06970561 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069505799 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069236278 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075654444 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077755873 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078236119 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065275228 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074644114 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06934003 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070854241 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066592521 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076467304 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074363855 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072528755 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07843587 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071782814 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070538235 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07539107 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071093167 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072450015 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073229557 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075156404 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070958713 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073759412 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071017365 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074603522 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07116896 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068553836 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07335612 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070427716 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072185551 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076256065 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0702945 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071900137 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073999524 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070798577 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072443482 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072280708 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071378705 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074882689 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072924502 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072459335 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074415722 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066608507 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081277886 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.071987192 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081446716 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074163697 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069068081 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076307344 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074063793 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075004139 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071178004 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071432494 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073007372 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070221681 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074426698 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079047473 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069800139 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082887726 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08026123 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074941886 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076850116 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073978507 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075159043 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.072476305 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.074546975 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073124597 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074365924 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070895701 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076135235 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073941471 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07215973 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073197453 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072679664 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.073872763 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.073878525 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067513219 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072773344 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.072890214 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072024248 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080193843 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071040768 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070826109 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069446483 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071006388 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069405211 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067622637 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076953157 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077152575 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070432238 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077320209 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07044187 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073493424 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081706235 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064871248 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068598409 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.199283575 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071796104 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080276372 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071785906 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081970575 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072968525 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.073006671 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070151763 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071505933 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069530957 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06634415 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068510718 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074982176 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070929595 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069985044 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07099963 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074593001 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071062824 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080616829 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0701377 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073198112 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070799278 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06872853 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.07166477 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071401538 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074371893 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071208436 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069722099 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069565296 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070299154 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074371397 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075367287 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073309789 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075611895 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080670721 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072602158 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076458147 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074590833 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067125582 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076707931 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072409011 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071825104 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072845111 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.076881039 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079724892 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073705335 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082812053 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072675938 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074672193 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072750132 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070348379 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072130504 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072651992 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.072691799 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.072919072 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.073341924 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081802662 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.07107224 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076837838 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073569277 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074293938 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080123311 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073504756 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.076667872 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077873262 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074454251 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075682414 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082560415 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076258146 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076530806 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073228676 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075529437 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079405223 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.072950594 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080635104 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07408785 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073035751 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075123285 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07193305 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072571892 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072833937 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071686214 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079425222 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.072904647 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073430544 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073215983 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070589821 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074615969 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075345763 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081151416 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074580027 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076265724 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066720192 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069095708 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072227445 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070951724 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074860445 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074939436 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077336997 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073946207 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072419198 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070276249 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081028925 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077010372 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074906716 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071015845 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076684378 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071228974 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073484291 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07462412 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073758774 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073446543 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077302758 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0754245 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072911095 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079987023 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076584201 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072782064 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074014658 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073816073 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07218201 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065824023 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070167322 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073361845 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075720396 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073090603 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070349366 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080876982 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069041605 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071226076 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071862915 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069057771 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074907144 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065615225 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072413937 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070585398 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070191645 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065226973 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.07036977 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069104497 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072299314 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070059685 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065282846 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080535063 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079250061 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073327108 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068975688 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068307634 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064990396 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.0651012 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07009594 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070224665 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072234835 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080086322 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070138358 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070195882 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065096562 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069705115 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073123398 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073778341 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067283651 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065192819 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070198122 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07328772 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075911044 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068809146 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069161267 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073402181 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072110852 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067421772 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070683935 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066786118 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072869773 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080640708 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068662514 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071074175 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07531974 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076729949 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070549732 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064900858 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069231816 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07288908 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070809708 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068882632 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069876494 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082685671 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073474303 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069272725 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068851983 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072753645 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07159685 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077214939 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069444082 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069103585 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073855549 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071459887 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073450711 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073421142 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075192779 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071600311 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071881456 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067208719 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069688482 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066499406 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06893052 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068730287 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068024538 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072071006 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073185253 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06853773 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079014055 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07705434 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071245312 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066101927 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06991954 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06886172 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063811704 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068376354 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066647374 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066934923 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066980333 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068540918 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070865538 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072956977 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070175749 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068322506 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067815582 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063751124 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072506804 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071473079 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069792054 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065920129 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068034012 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.307486335 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078686534 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075396641 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072031968 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.076838496 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076846526 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076388915 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069422287 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.082527408 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072600637 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076696767 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074486246 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075137772 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.075146028 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079456716 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07954734 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076263434 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.077279308 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.080283806 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076866558 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.07085678 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0709261 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079129507 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071534506 seconds)
  done (took 45.855524168 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108477625 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07035315 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069660372 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070223915 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079999894 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070708715 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069139582 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070080307 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070524541 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071941257 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069634035 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068667869 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076447568 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083687057 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078716614 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073140688 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068747708 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070037904 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068574042 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069720766 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076257879 seconds)
  done (took 2.913600328 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078505382 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084022452 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081132802 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088641415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077470955 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075607927 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080012103 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075454773 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084805655 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080381352 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085415056 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077914239 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.080358895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.080293469 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080677356 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077802607 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085942988 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079578557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077549539 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080816326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076220626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080241602 seconds)
  done (took 3.106521835 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072227285 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.071364489 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074513962 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06676282 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072442897 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.067254875 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074081015 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069803277 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074288673 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.07148686 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080227264 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072992423 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.076357631 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068875769 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074748386 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071579078 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115817251 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.076531582 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073659356 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073212865 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066791075 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074166109 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067058372 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067203062 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.07175631 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073856271 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071873276 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069737427 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071071446 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.0714836 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07135736 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069517305 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.074227201 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072840255 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071764262 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.071633137 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072527339 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.074234082 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068431572 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069694579 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.075141339 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067987956 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071580603 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073323629 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069972618 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069273808 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073615738 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070726949 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066601833 seconds)
  done (took 4.898585425 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082126774 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113191391 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073796377 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094310644 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084803537 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077521319 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.078119486 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09582267 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070194033 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071465331 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088053325 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084203804 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070846721 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074637301 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076170598 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070415382 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071469368 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069756603 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073729435 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070116822 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073676737 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07715644 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08471637 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08235888 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075109478 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069809353 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071720716 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07630643 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.083993813 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076783371 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07677533 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077718279 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087522431 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.077868181 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072071479 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074608509 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08738768 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070970083 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072846888 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.069009294 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072623171 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.075475836 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077344805 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085694689 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07046952 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075285772 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070334089 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067674088 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082080531 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072478223 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077281972 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082928719 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073988233 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070747542 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074795191 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084525429 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070544135 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068955282 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073555665 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082135607 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06965323 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075919115 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085400716 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07473077 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078771408 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082617407 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075083528 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073711253 seconds)
  done (took 6.713618406 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080828266 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101981073 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088424661 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087859645 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081466134 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080975905 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081214549 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.081162323 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080404209 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084807923 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080979485 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121207433 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085176809 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083107398 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080624523 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080698809 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080932637 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081119152 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081267065 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081130141 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.081446248 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086884167 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080567255 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102967026 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08348997 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078217342 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082645819 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082845421 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089163066 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083417762 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085927685 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082713231 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080759793 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086761789 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083478298 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080704619 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070823295 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080939096 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080381004 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080686722 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076714914 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086852808 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080150082 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075906694 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08023332 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080152095 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086543148 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083025801 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082878719 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084457108 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080613739 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086408555 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080023036 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08018635 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08650922 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089171665 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086336157 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086664017 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080206664 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08642194 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086824328 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089652103 seconds)
  done (took 6.575258763 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08566679 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077775995 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086878334 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068394456 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07292789 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076883142 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070868468 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071431784 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079936944 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080244324 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082816283 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07937279 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081754905 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081691418 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078931793 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081272216 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078848601 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078883437 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07977137 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07823049 seconds)
  done (took 2.961888602 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080270926 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088844881 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072398332 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07739572 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076428582 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078582085 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075811777 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076384624 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074364529 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076329894 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082461112 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082724566 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074780462 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076582433 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080312914 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07609341 seconds)
  done (took 2.622332491 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087608668 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077231438 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08277659 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070897408 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072568953 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067239047 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070675454 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066539786 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0670358 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082789383 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.071647307 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084006537 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072262288 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071205774 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069399056 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078700289 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069041537 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069859173 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.07248751 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084146572 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076702107 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070614584 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076026379 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070407394 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073237437 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075043017 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069965524 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07187949 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068100854 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070776091 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.074055335 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07468505 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067698126 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069342785 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069817007 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069731917 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07095444 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.071041332 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076417188 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.07050099 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06949132 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073280404 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070720996 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071324722 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067074798 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071457581 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067297057 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073903009 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069239339 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073547335 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072493892 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07436857 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071678067 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077588768 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073166652 seconds)
  done (took 5.374390139 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085730388 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075088316 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067645665 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069270043 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074557252 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072789582 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074828052 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072053771 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072780196 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068720688 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072817113 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073785529 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072825294 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074977057 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072759523 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074526789 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066437801 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072321593 seconds)
  done (took 2.700415493 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077310324 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071670346 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078396982 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071781229 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07131472 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073088892 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06671081 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069359834 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070265316 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073560988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073426472 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075440705 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070991002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075648392 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073334564 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073354554 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07522563 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071602719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073205572 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068603463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075542077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071148066 seconds)
  done (took 2.979308297 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097614392 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08865931 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142985066 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084947672 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091914361 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077475283 seconds)
  done (took 1.965418397 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097474323 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105446071 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072088309 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074056085 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081698844 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075186912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075058419 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074955759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081890754 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079599935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075361404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084514083 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082104069 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081380751 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079910389 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079719238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075344517 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075564702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071505706 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086585003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075244866 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082593512 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075432903 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075360413 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075807637 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081730766 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081976121 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079987958 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075539809 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08250758 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080074186 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075587411 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082867495 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080009398 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074811524 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08221496 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075179632 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087420218 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080303576 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081509389 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074626568 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081955009 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084951341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080345768 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083053795 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075280638 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07914127 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075262013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075356535 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088207999 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080389292 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081526885 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080398214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083310847 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082260439 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088515425 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080056781 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081608543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080384879 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08017558 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081473175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080165805 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081571749 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079993363 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080018492 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081941935 seconds)
  done (took 6.680703809 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110322133 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07285277 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075788557 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081588968 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082694714 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076312602 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077332871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077570708 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077443559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07474754 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11568597 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077679872 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084002911 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083328969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075671082 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075015451 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075180067 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081581554 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07232567 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088604551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075233624 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081474532 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081609062 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081446879 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080095881 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080156719 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075147401 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075135135 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075423232 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075462531 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079418193 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075372012 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081647875 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072151417 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083492328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077839421 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076462619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080544462 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077607513 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082370026 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08426516 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089588458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077541922 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077118821 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082347252 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078229789 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077572874 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07457424 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077733144 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074696004 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082787241 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082826643 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082394399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084026165 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07752267 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077462679 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07754474 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077600019 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077580429 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082514943 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083903641 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077413899 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089983819 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07706187 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077167898 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084109929 seconds)
  done (took 6.693617497 seconds)
done (took 137.502715205 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198728234 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17665148 seconds)
  done (took 1.746406968 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074109726 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102079699 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084330023 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136838603 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07272551 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105900505 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104478559 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08230204 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073505838 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073740404 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074017678 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075985117 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138632392 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071791917 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07144985 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07364351 seconds)
  done (took 2.803196832 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101952654 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163672789 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108841679 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.073510001 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104901133 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080007301 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072543023 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085040848 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078411656 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072819043 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079797254 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077844772 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072742295 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077569729 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07885547 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079878794 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073418668 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079964773 seconds)
  done (took 2.952619672 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102259527 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095384243 seconds)
  done (took 1.591394326 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.168141961 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.141003766 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210027544 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341209701 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157824814 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148389088 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148130031 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146523016 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1215983 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141364077 seconds)
  done (took 3.113603186 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105047461 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15387476 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277321118 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12443377 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080547416 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098611805 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126222034 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086818263 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08768235 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086851755 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085681105 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080744216 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10335969 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0780404 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079640988 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080629864 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107338698 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079379305 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080185097 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080039631 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105822701 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072593323 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080791346 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081954617 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084664899 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084453719 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073586093 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073868204 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083356996 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082591703 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083646077 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097461496 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083326502 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109030713 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079050652 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109926633 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.082149101 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078145717 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080263992 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077892803 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081653947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08188522 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081228398 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083517021 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073951993 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084082793 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074203208 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073786484 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083355577 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072412366 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081626487 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080743934 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105929124 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072509799 seconds)
  done (took 6.333195822 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112450475 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111398169 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075300203 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117841397 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109664049 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07480496 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111604256 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105334122 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.113684302 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077081447 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076040479 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077456828 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086422824 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088523704 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120290829 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112218335 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077231926 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074391853 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111727002 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111977405 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074372963 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105738301 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1020539 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11136357 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072833142 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076418892 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075929923 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076752828 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082558708 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084917387 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074290454 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083216088 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087895601 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081904498 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072764787 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074118138 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073532658 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082160423 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082983012 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082993395 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081084654 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072946176 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073589139 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074315584 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074360544 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072710708 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081685325 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082684605 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081589734 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073434522 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075431836 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073834528 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074625725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08295716 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080328142 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083045012 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082833675 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075069998 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075793364 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078675983 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086539341 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085883913 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085356664 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075228166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083860014 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076342612 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08452658 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086008888 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073694359 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075265285 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075925182 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076013148 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.077449017 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083135804 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.083165785 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077410617 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075863067 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074769405 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085250645 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082148793 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074343371 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080750799 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073007383 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073684487 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075475066 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075038385 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080633736 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083159284 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075400517 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073899813 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07353192 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073681888 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073900779 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.081355042 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08159989 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081799238 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080755659 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074567942 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081047643 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080691626 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.207063564 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.084090259 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074979424 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078751363 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077762072 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084251499 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081660969 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084004136 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074614002 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075105606 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080998973 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084594073 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074125404 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080941698 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083670599 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082459072 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073321341 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08394428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075169658 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083425326 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073683653 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083191831 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07434079 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082726604 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073743079 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.073333712 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074544461 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08260169 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074716803 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07372071 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075031141 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074117978 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.0828701 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085294838 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074935905 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081680867 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082597582 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076375554 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082554479 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075491276 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085579454 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075289285 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076980516 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075142896 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086753425 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074684727 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073832694 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073456242 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083654376 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073568954 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08298312 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080801001 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072881113 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084440218 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082742802 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080326757 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083233529 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075054392 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075727027 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075310116 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075371778 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083123648 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085368526 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077294173 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07589814 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083290179 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.085515685 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07482762 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083494957 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082907868 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08362544 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076323305 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075782116 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086755735 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083667082 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081201647 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081142683 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081556301 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073811522 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081730543 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081196134 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073719307 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086611223 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073830749 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085810985 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081793613 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080080287 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081867036 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083176566 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08333707 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083274815 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085520977 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072754857 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073090333 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081288526 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072940796 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072974738 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080095683 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074720305 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073950409 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084706218 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073838535 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082362652 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072356568 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081280146 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072991622 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074938673 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085437824 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073793366 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0746451 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082137673 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076162057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080021449 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082528947 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080501183 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072985568 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074247921 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081841956 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081227606 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072773238 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072609445 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07444735 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08024223 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078941292 seconds)
  done (took 19.645748934 seconds)
done (took 39.592102874 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202294882 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15286682 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.16372816 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118378157 seconds)
  done (took 2.120882191 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115030746 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102760741 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093929827 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071418431 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099161229 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070970854 seconds)
  done (took 1.980741542 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279273195 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194935021 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177886682 seconds)
  done (took 2.077052782 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201771248 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187688154 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.429882482 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265416642 seconds)
  done (took 2.606185842 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142021603 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09094242 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072156916 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088298463 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133078947 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16208961 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103538422 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128860087 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.085424479 seconds)
  done (took 2.480545342 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147400172 seconds)
done (took 12.873534086 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.202775563 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.214396412 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131406743 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172864802 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096386113 seconds)
    (6/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.170998568 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075722341 seconds)
    (8/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.19105632 seconds)
    (9/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08631401 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.129047191 seconds)
    (11/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.070781023 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.083036417 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.220663316 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163863921 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135561297 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229913202 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108195217 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.22085304 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.099022466 seconds)
    (20/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.080323056 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081626165 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140763893 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.373440702 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.226139549 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075553672 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081751898 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.075403369 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.084567931 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09009691 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.073272293 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106500964 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.189165272 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.240858897 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096451061 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.078473476 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079652169 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096270378 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164114037 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060273624 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072164336 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119866067 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185336437 seconds)
    (43/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.173157869 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.084218889 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.178999259 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.208703159 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.100619832 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.199958028 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.085406412 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.060322941 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.15460656 seconds)
    (52/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.159121985 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080639122 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09792949 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.081340962 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071558974 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.057353617 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08583034 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.071915739 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104377349 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087322068 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.199987076 seconds)
    (63/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068416824 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081194299 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.217108463 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071337636 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07892733 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095197798 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163454258 seconds)
    (70/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182740371 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.106448269 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.112356127 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093824688 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069242839 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070842554 seconds)
    (76/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.131887733 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079337384 seconds)
    (78/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.058785507 seconds)
    (79/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.132448423 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077296514 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090879043 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080740495 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.230474648 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081782121 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.070298159 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.079056089 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078453364 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119570669 seconds)
    (89/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.086209103 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.082770549 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069628124 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057125134 seconds)
    (93/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.082199658 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124726124 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.083854578 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081869827 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.120371395 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.078608861 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162876891 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.153647402 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.173592721 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079572144 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083729466 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079979297 seconds)
    (105/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086290241 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057634311 seconds)
    (107/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07274421 seconds)
    (108/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076633113 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057217447 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071969854 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.071465829 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077245179 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098243608 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 0.137975543 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195808363 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072400882 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.196641561 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152615441 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079771462 seconds)
    (120/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.073810816 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.105225699 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067465912 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195951889 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07067121 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080901932 seconds)
    (126/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08099011 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088577506 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068655347 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079417357 seconds)
    (130/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.121656865 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057252127 seconds)
    (132/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116966366 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.163669153 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059066529 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227105447 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074694097 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074569802 seconds)
    (138/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08134571 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.059159757 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082102641 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09401885 seconds)
    (142/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.120029864 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083823766 seconds)
    (144/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058788621 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076535469 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078029997 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067245433 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087141993 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159777725 seconds)
    (150/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077600048 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.057029581 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057213469 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057332555 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078044361 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083771672 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059523636 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114679035 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071530001 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.180280656 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079504448 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174469341 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157498285 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057126742 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069583733 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123940436 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096529659 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058695355 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058666646 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.057057839 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.12386982 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195506629 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095009555 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160022169 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092928027 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149377313 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057731804 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091023417 seconds)
    (178/309) benchmarking ("sort", Float64, false)...
    done (took 0.134089676 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057801543 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170427786 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056895868 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12191971 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093109525 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077480809 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05933724 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058097553 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057782518 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081582896 seconds)
    (189/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.245713644 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.074114852 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.059078098 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061139224 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071490616 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104569341 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.081478693 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.151033228 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125716024 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.082584137 seconds)
    (199/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166145761 seconds)
    (200/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082470082 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08287117 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095708918 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058227043 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105810753 seconds)
    (205/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078891895 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070303399 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.057350451 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.059024625 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078218966 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13910796 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.072421389 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077832722 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143130269 seconds)
    (214/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072752451 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070950509 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071134124 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079713007 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081470448 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078112703 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078744519 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058851814 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.058974351 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19482397 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.1448799 seconds)
    (225/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072172498 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072413165 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071061923 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100704995 seconds)
    (229/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058652922 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.119208211 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078080173 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093680825 seconds)
    (233/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057968726 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07135501 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057044452 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077091744 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057897487 seconds)
    (238/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083033314 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081056516 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058378993 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079525266 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070904635 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057723565 seconds)
    (244/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079438801 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070731686 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151488731 seconds)
    (247/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182627378 seconds)
    (248/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059025763 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174337377 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157758215 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.069644158 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069698866 seconds)
    (253/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.117515369 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095348798 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091347147 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.071024849 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057500192 seconds)
    (258/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.073648639 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.058375056 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071491816 seconds)
    (261/309) benchmarking ("sort", Int8, false)...
    done (took 0.149305463 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057063383 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057223779 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.058286062 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095530291 seconds)
    (266/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076748359 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07916596 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14508525 seconds)
    (269/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073756952 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07684294 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07095977 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133290992 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059102345 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056993302 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070771937 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110694782 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09783967 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181402637 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070253336 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057066373 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.07077098 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078357437 seconds)
    (283/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074724766 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.058271872 seconds)
    (285/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057159359 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074288394 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074120798 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078853146 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093143075 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071938412 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073487271 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058656757 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113504711 seconds)
    (294/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059943799 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076706001 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10758204 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.07038139 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074116497 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070724309 seconds)
    (300/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078020333 seconds)
    (301/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057861002 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070958721 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070975359 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075096615 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070652076 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085439353 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.23874598 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.083982758 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087255119 seconds)
  done (took 32.852945822 seconds)
done (took 34.288898981 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088147976 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099418547 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083167841 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099250152 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088130163 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.085009123 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079430917 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084348971 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087043711 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088105056 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084892434 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061846571 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.08119392 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.081156422 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080916704 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096714908 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085472981 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079796237 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079617012 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070653591 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08006633 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071771071 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073136907 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061082547 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084630611 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078463864 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080463984 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080567394 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071334901 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071436842 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075274687 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079692273 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.07155216 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085570736 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07951879 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07918051 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081057597 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082828367 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072872878 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07178724 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081280778 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071354859 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079124431 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079724573 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07803104 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077315452 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079039455 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082582489 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095970022 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07352915 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081202571 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081794062 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082491366 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078889502 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075948834 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079042623 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076787631 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095695192 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079374041 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073553528 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080416827 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079630739 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07661581 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079240501 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079232945 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081195278 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08244582 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076914034 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080798141 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077354676 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070604516 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078932736 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075041523 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071293358 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082149671 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.085818551 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070299097 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077453551 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079320018 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079473609 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070609041 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073738155 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073063939 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07796941 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073299076 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061255052 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07536502 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077927431 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.07020505 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07920656 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078041328 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078818977 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072570282 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082962274 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07074924 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076974855 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071257095 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071013383 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072907145 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075414878 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070623104 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073319027 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082129551 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072638645 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077726874 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084077767 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070940199 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078358021 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069875104 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070319868 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083863514 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080842363 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070588839 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07335015 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069984132 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077949501 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069728855 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070487996 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070787841 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070514918 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077057717 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070685311 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072943008 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077875922 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.222749079 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071809913 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.076607528 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074183266 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071458718 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077994959 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07201036 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071689514 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07284974 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068919677 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074373539 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072613191 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078489043 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074002854 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07955168 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073221515 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080455552 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07665461 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077661598 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0768412 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070380699 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066381182 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074588002 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074087804 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072615464 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07144565 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072966942 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070670212 seconds)
done (took 13.376833485 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071717128 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.136673161 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09858139 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099598327 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08910946 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071974609 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079735552 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100290429 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073561534 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103504645 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.094249742 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092304511 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113220815 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070216447 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.0709807 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075496401 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07293588 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084271843 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10023474 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091519778 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115288792 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070904964 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095069486 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092536659 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090286824 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105774122 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07232055 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074979836 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075180264 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094686074 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093385736 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075188268 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072313041 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099323011 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09746482 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086169028 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071798998 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086158784 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072460423 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072406347 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073460608 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099690769 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084606 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083997427 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075364398 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081618771 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072573596 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086111318 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092047582 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082310988 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08827536 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101872387 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074083742 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08711608 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06989058 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088091251 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080173826 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074034366 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.0721177 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079089892 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071964488 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075380058 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084253824 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084014022 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075257731 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087524143 seconds)
  done (took 7.110708424 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089830141 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099102574 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088427731 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090863715 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071331994 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072450439 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072149985 seconds)
  done (took 2.111248163 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072119338 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091970313 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092450361 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093075896 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085575342 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095283888 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080951106 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071857502 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096253994 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073030942 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092543429 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102238491 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075302123 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.084882398 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094210089 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072162273 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094068764 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072154807 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074647601 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09421669 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077551867 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100772556 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079144622 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072180957 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085537826 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072390978 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117072365 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075620587 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073826695 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075240047 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073280589 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110962622 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084262102 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079665722 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072218523 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086936467 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085511046 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075087377 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082888801 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080660041 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085230126 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07229414 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073129125 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07352721 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076201547 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08198205 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073612609 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076109695 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074777178 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091116833 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07102847 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084592435 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074525398 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077160297 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074220566 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078403937 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082245938 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073492803 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091278536 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073916714 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087158204 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086624065 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084931658 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086349712 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07414566 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084254873 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084724024 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075084482 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07386383 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07655842 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086587831 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07173164 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074975143 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081734459 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074298115 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094059775 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093786199 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073655647 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08502421 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072720258 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072304424 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072250859 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093368133 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07747463 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072504748 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076333876 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075395454 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075547548 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071639834 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076270893 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0706684 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07846404 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075113185 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075059485 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074873039 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087014185 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07518627 seconds)
  done (took 9.361870771 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07484094 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073526447 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074955757 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073520928 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073015741 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07356684 seconds)
  done (took 1.990830771 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094817217 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073702869 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084704809 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076702539 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107400229 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090606504 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091016617 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081877894 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087793894 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083287398 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090036139 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092019897 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095443862 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077223293 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090277853 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075935888 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091686714 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078642984 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082770686 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077597981 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089658918 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077065768 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077038824 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085389472 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080274489 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076298095 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083416667 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08328433 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082938951 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08175739 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076988428 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080757136 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075500032 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081476989 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090858283 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075294723 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076219534 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082025821 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076516432 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083254646 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09178665 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077231025 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078616361 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081305328 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081544006 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075637522 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081443948 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083624062 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090608029 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081767374 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081204346 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075991743 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079729186 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.0819588 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075724568 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081383395 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081354364 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090756418 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076962785 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075232711 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073492027 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080110623 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081507916 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080402496 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081620785 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081468657 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075731701 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07728625 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077117715 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076157075 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081809634 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073734717 seconds)
  done (took 7.424085155 seconds)
done (took 29.506736826 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540637659 seconds)
  done (took 2.044559848 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606504711 seconds)
  done (took 2.137685397 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.220329373 seconds)
  done (took 8.747676295 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.37149984 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475826365 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.711707568 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138111977 seconds)
  done (took 3.262251423 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711049282 seconds)
  done (took 2.248826965 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239215853 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230053254 seconds)
  done (took 2.012114585 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380494007 seconds)
  done (took 1.915066401 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.122940096 seconds)
  done (took 2.65593835 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.241996352 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181643077 seconds)
  done (took 1.962467743 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445689333 seconds)
  done (took 1.982381423 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.848513257 seconds)
  done (took 6.388509708 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223699587 seconds)
  done (took 1.797437078 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240608032 seconds)
  done (took 1.776989621 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.745218905 seconds)
  done (took 3.281911172 seconds)
done (took 43.754814559 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088653589 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090532641 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090209156 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086455541 seconds)
  done (took 1.876230793 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082064887 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078184054 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081294459 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078137281 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081348497 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07753691 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080496342 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080871195 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077841449 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078023225 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078110801 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078015041 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080082615 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079807544 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076712196 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080116605 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080821844 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077664361 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080797684 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077851745 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076007722 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080215619 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.08009296 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077013726 seconds)
  done (took 3.439993418 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083759083 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078884696 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080755636 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.078895529 seconds)
  done (took 1.871448925 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083049571 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094450801 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093093403 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.085523343 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098803427 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.092482067 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.076646923 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077104737 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078080933 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.085738777 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07589108 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10321991 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.094050496 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086066512 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.087929342 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.072812165 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075651751 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09503227 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08680551 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08686765 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078088608 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086385444 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.075658331 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096240939 seconds)
  done (took 3.611225131 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086320282 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105518526 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087749561 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.098821859 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.100873488 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073187409 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088109837 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100595043 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134369666 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073322331 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.078793088 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.073845869 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.081705633 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073255715 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088236274 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.118701203 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.119904991 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07572902 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102597219 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07122429 seconds)
  done (took 3.384894658 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078024502 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074931425 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076146675 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073913842 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.084976646 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081118782 seconds)
  done (took 2.025023805 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073669708 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07392316 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072829409 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072673892 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077963781 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074750133 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073440231 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07352595 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072982596 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072603925 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072110059 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071471687 seconds)
  done (took 2.43549219 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185670401 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073496946 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074544698 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071250865 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075995785 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071832269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086552295 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072922785 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096769953 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072149537 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07185311 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.0741102 seconds)
  done (took 2.579376087 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19830401 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08046784 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228948323 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15255996 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110682881 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114995351 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114343842 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11349337 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138291115 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101434242 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161530198 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161846227 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109215401 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137852168 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09325881 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106520172 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151493439 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164284256 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108647747 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162751956 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143568565 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128433146 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14614209 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104160194 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107784347 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120456953 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07695408 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083746099 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165421373 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131300118 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142123421 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113096132 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094151234 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177102327 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163360089 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139328678 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149417001 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087677515 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105814305 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132768661 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191705523 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092206029 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301084581 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113679115 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084871028 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135111613 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119870435 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12215539 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107057177 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094165342 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144317298 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17832074 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134122345 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090476789 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125412117 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114699408 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113762783 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115660694 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172498058 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15731405 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129337727 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077191275 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114416416 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149553209 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132627147 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109132862 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123687937 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096619901 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132508053 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152131144 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123162867 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140869361 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117388674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091887346 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121719247 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137008298 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126742509 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157840604 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125663979 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077725885 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122614695 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101603424 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084391653 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147704426 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080308085 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172977563 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103435875 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108574143 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124623035 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109132265 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109958608 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15285308 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285011245 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106991545 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073234015 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108711324 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120445821 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144301096 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091723828 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110314019 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117783977 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082389434 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134428232 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080258952 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12516593 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082651823 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12557837 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130547892 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082117822 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123665773 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10694739 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105234275 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131585398 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156746793 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091555271 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085026988 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162599518 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122776727 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10447771 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141174581 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15378396 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105459626 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101447402 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145289445 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167146921 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09317345 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159428737 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106713373 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087536967 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091630666 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123721408 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112689352 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12513023 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085619311 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118684338 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162605157 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079395352 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099319835 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13560722 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083139901 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084250055 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107465955 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105231719 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100363314 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101027403 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103478401 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134429351 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270686718 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112128524 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126745265 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101720492 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163260065 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091875453 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106203114 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106853782 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074699485 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13274785 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153693458 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083572183 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157507665 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122392516 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118194685 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121014901 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087894733 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137529418 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083567434 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07541816 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140843822 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112790018 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111540507 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147753665 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11697123 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124334056 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119183437 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130261318 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12983759 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129343272 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109133893 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092301838 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114564926 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127656491 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078312574 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093290607 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084271655 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107006031 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097748644 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08770753 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139565983 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122967981 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11434938 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114448643 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100643768 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145649635 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080761724 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127120508 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120216674 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097849406 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14847174 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147513307 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131936935 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102076284 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282142491 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076403036 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079581604 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090947917 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12423175 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087709603 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087174284 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117501356 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146170779 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129579447 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135308395 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125135043 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120448758 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151685693 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075959273 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122552196 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142547245 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122192914 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107860697 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094474648 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102831963 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140453048 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106948491 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172984131 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115694364 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126007327 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153919848 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105569124 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083946845 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105525589 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131814844 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104657016 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13995735 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101577513 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091538924 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110100986 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083084747 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099975941 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126934275 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118028629 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134535045 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115163489 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13332249 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0824498 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115914598 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123799966 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120495338 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069962061 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118289375 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153517849 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097792064 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118087941 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294610794 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084164493 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139166465 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169978569 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143360406 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088510603 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109455364 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121826004 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125968759 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121422294 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137711637 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10698429 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138087183 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11314538 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089117462 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090758415 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099053404 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106825218 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.0984748 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104324904 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114828999 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099303901 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131670699 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105616718 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11208033 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118959888 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10332581 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096672539 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100173477 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170716187 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11937106 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165553734 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103457228 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139742152 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157836262 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079825892 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083500293 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082709656 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137589241 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088523187 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130532682 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11243296 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117917499 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124115408 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138499836 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099051499 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07446541 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111179965 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132203461 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123525219 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100674435 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103567212 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15683531 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100823172 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082587088 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259239282 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119141394 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106659293 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166079265 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069351333 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109647893 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081803742 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083936922 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126152541 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149077658 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085290853 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103067834 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122002694 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113851978 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12679634 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101765295 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114175852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125564721 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145229873 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128517559 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092866079 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113208656 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126876242 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151930684 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104564412 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100904707 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168975945 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148585207 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155728734 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089327237 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116182971 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115642484 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11124509 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136534913 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087700048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158126843 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085830865 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134923372 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10431511 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091034493 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128095455 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11318935 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09213319 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14389295 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118282318 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086571132 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082090671 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116377182 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119279095 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105411784 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079015653 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284197741 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079770277 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133682243 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157899726 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08628076 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108081262 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09983962 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084079182 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106825635 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105774339 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090533234 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103049846 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165901596 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089567084 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146077529 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134434369 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113285213 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133131192 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105656726 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64333201 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081848289 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14839041 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116505807 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167574263 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102253096 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119018485 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111842984 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12059471 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14145839 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104114821 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179514892 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131086061 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117587811 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083193694 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104645814 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106304347 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090647919 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109755331 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115257711 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115672861 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095786588 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117308011 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123845845 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087195355 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099249852 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15237518 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11691706 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141975134 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136704287 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087878763 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11820178 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135214448 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231038193 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120019088 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148165282 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10817544 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103379602 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085910895 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102448589 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156586221 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09402985 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155944287 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12558258 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112956293 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115635253 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110778527 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132253534 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107257394 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12417207 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094699494 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108877732 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115665657 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085389295 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08103934 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107633696 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111651182 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10191089 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099058534 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103400573 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148863806 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077996038 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100960094 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117479715 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141747992 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168134595 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092461861 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087135086 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120138758 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117868301 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113924981 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122263782 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083136627 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085479634 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083576934 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08660418 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109473582 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115186703 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11557125 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112088474 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158236061 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088077807 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227054146 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099333915 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107040625 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075278293 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081696348 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098667251 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098563015 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253158538 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115408619 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157903712 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100041528 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094276263 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094521319 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080725325 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088252742 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126589713 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110980472 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119352852 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104718232 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069559621 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108282645 seconds)
  done (took 59.545044337 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112051246 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087747218 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101098703 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148396473 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125849312 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204339482 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.16041174 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193162122 seconds)
  done (took 2.780505704 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073287793 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099296101 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107888489 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088675059 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072020313 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07353073 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226396066 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085774897 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071454186 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094363982 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081891695 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074623386 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411995833 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071089719 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072354005 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067254802 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073380121 seconds)
  done (took 3.484304416 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389954033 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615040775 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347437536 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082858161 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.938980516 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095562162 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.293670054 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139603345 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084681417 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533975736 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414576487 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134996606 seconds)
  done (took 18.719035644 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086621582 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.08041691 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093547664 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093218452 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083332367 seconds)
  done (took 2.08088913 seconds)
done (took 109.399012714 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088227025 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420110027 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060348336 seconds)
  done (took 2.152333761 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09176896 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089950479 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089926436 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087119328 seconds)
  done (took 2.008489788 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079247099 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082641625 seconds)
  done (took 1.809658753 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230448245 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171469327 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100435973 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087213548 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08445887 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085128686 seconds)
  done (took 1.9062946 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077507778 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080560285 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0777134 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080630455 seconds)
  done (took 1.961060589 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081389191 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058495732 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060535077 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062542535 seconds)
  done (took 1.9094543 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091456783 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087657032 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083582473 seconds)
  done (took 1.909201799 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104592636 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092642915 seconds)
  done (took 1.845121094 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085555351 seconds)
  done (took 1.735641675 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09343736 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103079964 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136636775 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11931501 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141816907 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118398256 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08916679 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090276995 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083592189 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091243865 seconds)
  done (took 2.716419494 seconds)
done (took 22.185997598 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08343154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372598331 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364711779 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093866212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67429693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362999648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988948069 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097798218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144484724 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073799023 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089718452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654573613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98281211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335360531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970689671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.335112612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656500926 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074510291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074167863 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073734625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97605302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074037665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073771617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074529122 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653610732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377571424 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074688359 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.335286178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073891616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075859245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.377814564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074722065 seconds)
  done (took 16.375262006 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076032033 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123958788 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078320876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090638155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076687529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075262557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077988312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07467163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126704782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074131946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091801706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074422507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077719244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074799766 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093542324 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074797122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074797692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074872257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077275854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075210207 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092376861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07366858 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074589223 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074685401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074185772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08635803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074333551 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07449513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075248799 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076288421 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077431677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074660059 seconds)
  done (took 4.253240242 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121084683 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129770542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079317544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109905678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117575233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077077097 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149651733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098906537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132464882 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074016699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09115447 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074663705 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106590595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075508989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093711849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074485831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075384316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074533605 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074391939 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074278126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093004079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074213139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074579964 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074652975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074431425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087964945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074692402 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07481942 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074293518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076423797 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07774728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075328434 seconds)
  done (took 4.499213805 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078260087 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081116399 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087710714 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088421016 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075160276 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077185174 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078854173 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074896845 seconds)
  done (took 2.307498731 seconds)
done (took 29.089245585 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08485444 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075050929 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078497084 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094993425 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080068413 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082873133 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073259323 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082340071 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079814799 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079664344 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080761189 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073060957 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077425151 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072351512 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07970626 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073523501 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084135083 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077760767 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084260048 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084743204 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076296428 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079108046 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081035987 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083371027 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083496158 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083515113 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082410314 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078104992 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073872683 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076154636 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08179489 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089269111 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073903 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083498995 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073009179 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073025244 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076971263 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073095602 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083758709 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08223494 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075236473 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081774431 seconds)
  done (took 4.983090584 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092932279 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098104997 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.09057132 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06849155 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073471083 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071806992 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095605579 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066034955 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066767206 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094763005 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063203522 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.066097448 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069348631 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061051891 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066585046 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064521282 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068258961 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061798581 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066654845 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065907115 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095184868 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060856657 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083041692 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069452406 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062888103 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068285685 seconds)
  done (took 3.585326738 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07957225 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088645139 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095516945 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147706747 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115675724 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083696863 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084427682 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097940452 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098999277 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072727388 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076907335 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098620765 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092975821 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07931091 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073125678 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089750805 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091175734 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074709737 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078329459 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096866236 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090983719 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090901216 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096496957 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089507585 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072193146 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075362309 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076889855 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085769835 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075395913 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082295726 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076241372 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076014205 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07518453 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083801167 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075891832 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074548594 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098500293 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082858177 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083717655 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073746284 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081057094 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07447789 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.0966804 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128980259 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072227753 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079116961 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076126498 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08272539 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072211454 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100592514 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08471892 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075022917 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078505401 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07446765 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074269644 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077919055 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075465577 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074945921 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081689818 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078784337 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096490962 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077825566 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088590001 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072562301 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081060624 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072296453 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074243357 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072165924 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097387628 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07499391 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112592021 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073792269 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073721544 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083065441 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081314142 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079333219 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073238735 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08874614 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082876631 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076107458 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081231086 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076404175 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075684922 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101515283 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075367595 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074488365 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073634483 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078372168 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075359746 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07381174 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085407749 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073017481 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075525894 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089524763 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073220251 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074460789 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078243851 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077410433 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073242944 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08397642 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077354701 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074107068 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082959558 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073342969 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075910699 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085301962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080262309 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072249238 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076990071 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077878109 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073980512 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074618724 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075439806 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074723664 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081560984 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079874596 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077573152 seconds)
  done (took 11.285267353 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165152839 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155991857 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075985605 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149182066 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082079624 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084269472 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151130044 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09782473 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073647146 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074228761 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073678703 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112928214 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108105927 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118716742 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083825516 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073591128 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095648674 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116899047 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152058814 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147843304 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095639377 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081834873 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07585791 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074762705 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075260462 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083272531 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089987023 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082146424 seconds)
  done (took 4.563299702 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08523443 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107915397 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080720462 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096906245 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09527439 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073736635 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075645531 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075244622 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090484162 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083241481 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073178437 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077673718 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07966928 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075968559 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074269316 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.08007872 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079862946 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074167758 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07716125 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078258841 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083237653 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096324971 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076180982 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075246394 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077829157 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072586176 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068005751 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088627351 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073878812 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09785073 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071180275 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078506831 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087258691 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074725668 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073225551 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073100131 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073008495 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073050479 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075622507 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071610765 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07170946 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063530653 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072375905 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083198942 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086133874 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062248783 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077578042 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078080929 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078532616 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070507332 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076571031 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07600242 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075971103 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080665714 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077229437 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079098351 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074637933 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081699313 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081815782 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073757137 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069923041 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071721158 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078107132 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070011038 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087886797 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078250945 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071880082 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073599033 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074996228 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086884869 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073263435 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078269802 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070953222 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075537082 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077783438 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075098584 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074499405 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071603393 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073650926 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073607012 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061305142 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073608349 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059158135 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076093092 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071456367 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071712049 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073336607 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077884204 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083509663 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074499696 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079345039 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074467762 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072297682 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075925812 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065628271 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076011705 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083752627 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086884184 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073653843 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071075429 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085878339 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078402962 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072586984 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063348977 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077615469 seconds)
  done (took 9.77851159 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096587672 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07603153 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088122822 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094855673 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091877953 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079981168 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084184587 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07481727 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08977392 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080128475 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082488285 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073299241 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08414986 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083067046 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075371331 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083479724 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077222202 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088662786 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087695158 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073567058 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081550309 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085664018 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094465976 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085573953 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08457668 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08605321 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094278452 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08345401 seconds)
  done (took 4.074978151 seconds)
done (took 39.93054228 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.765674117 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.008683782 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.749242611 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.087524595 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.820614893 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.92888042 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.834170732 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.744443786 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.947732226 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.777480012 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.081334131 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.852603303 seconds)
done (took 65.398404909 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.786030242 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.881521234 seconds)
    (2/2) benchmarking "String"...
    done (took 1.98834176 seconds)
  done (took 5.54296309 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.979450129 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.333742154 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.987893985 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.742676733 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.74983942 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.043249721 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.535843097 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260234133 seconds)
  done (took 30.327664149 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.902062932 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.971639432 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.451390268 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.464148108 seconds)
  done (took 15.510706708 seconds)
done (took 62.903852989 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.756828239 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.756582342 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.75695604 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.729076906 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.80329084 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.758357851 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.105535937 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.808011156 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.747870171 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.738413543 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.744955906 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.178311937 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.753705703 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.94889813 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.744472962 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.754405804 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.794146784 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.209997983 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.903663843 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.765280996 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.763922898 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.77227087 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.749046558 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.75448025 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.8036899 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.747865223 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.152954019 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.744586988 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.575703176 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.747851454 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.796918336 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.209014011 seconds)
  done (took 203.249723356 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.745157209 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.80957018 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.887868977 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.777969336 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.315035008 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927567971 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.851923725 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.339763609 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.750683802 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.762889294 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.957831864 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.745269662 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.985823727 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.722936177 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.774179705 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.753501974 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.907128557 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.984701623 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.781961377 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.914840039 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.773305633 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.824895889 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.782624989 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.937674605 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.789996965 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.812582049 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.760773416 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.763640573 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.941411324 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.886920957 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.755864898 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.789742853 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.956440504 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.6192606 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.76995399 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.769298673 seconds)
  done (took 169.306193846 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.941004747 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.747082239 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.746727917 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.746590651 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.753599244 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.747578048 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.874468605 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874194406 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.384909852 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.483202642 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.750420431 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.79642816 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.746921903 seconds)
    (13/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.747302819 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.552708672 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.746696865 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.813534637 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.76133441 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.747508867 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.7620025 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.774498928 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746487203 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.746484645 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875026979 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.760363271 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.745961774 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754419846 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.748215517 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752839499 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.116356381 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.746706342 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.955894432 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.747163457 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752697038 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.989395005 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.748144848 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.749339983 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604077652 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.400344754 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.830134021 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75054779 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752787884 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.749266597 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.96560855 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.750443988 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.74771011 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.749303747 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.750966806 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886318691 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.752057395 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.875029358 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.751601965 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.227358841 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.7491958 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.74898212 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.385454033 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.333113349 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.753169011 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.750305984 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.748836179 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74894107 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.755072677 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.36033501 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.824814318 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.750871862 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.753001895 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756244508 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.749502273 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.767102439 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752270054 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.79859279 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.812914654 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.979366422 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.8718576 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752552259 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815531287 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.842755001 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.750454541 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.74949881 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.74911408 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.749510908 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.829166685 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.750147606 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.878680281 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757605051 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.750933682 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.800548424 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.81892282 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.75002108 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601352036 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.753420049 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.750473963 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.013368748 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.750150193 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81617699 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.7508278 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.750246132 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.879778135 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.750400131 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874071123 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468643665 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.753991447 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.588951553 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.139269736 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751681525 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.980527944 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.751571469 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841948055 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.756147892 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.752028807 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784769228 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.751844195 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.808714027 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.751828188 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.125929452 seconds)
  done (took 399.324749644 seconds)
done (took 775.549715054 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.366288538 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.331067421 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.440825662 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.349040805 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.325072949 seconds)
  done (took 13.492222088 seconds)
done (took 15.171398968 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.844646656 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.847711578 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.776073105 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.843971194 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.773196513 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.843873222 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.825597057 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.777537185 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.809784145 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.777245721 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.812865922 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.776584797 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763902108 seconds)
  done (took 25.153647799 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.994526711 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990080755 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.82308364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.988763261 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.798788147 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.988893275 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919128007 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.905563163 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.903786037 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768875324 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.764260802 seconds)
  done (took 22.527505499 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.996857791 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.997533633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.831403127 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.991971409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802383435 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.999061121 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.92104101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908759649 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906000705 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769543776 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765888483 seconds)
  done (took 22.571854021 seconds)
done (took 71.932560187 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.761551593 seconds)
  done (took 3.443302732 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.789217684 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.958833409 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.768129442 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.76586914 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.763883065 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.761869601 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.765909654 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.762339605 seconds)
  done (took 16.019010416 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.758273654 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.760732676 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.761915092 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.758235192 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.758951129 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.75832071 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.761386152 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.761044134 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.756729881 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.761257636 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.759008493 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.759489046 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.762677213 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.759349754 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.762313808 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.76098847 seconds)
  done (took 29.844415132 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.760339029 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.759714127 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.75867482 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.760666277 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.758469769 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.759854072 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.760467015 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.758936 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.759167047 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.759009484 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.759508242 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.759124112 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.76036376 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.759606517 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.759602305 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.760671608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.760065972 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.759802057 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.764060811 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.759398257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.76013933 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.759065436 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.759860512 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.760558325 seconds)
  done (took 43.923601175 seconds)
done (took 94.910807507 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.478476219 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.489735315 seconds)
  done (took 9.652605405 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.762597523 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.762490721 seconds)
  done (took 5.213097575 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.762864744 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.762923279 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.76306815 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.763055133 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.762861957 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.763773159 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.762423504 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.763213339 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.764067649 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.763160364 seconds)
  done (took 19.315620048 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.763692422 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.764907103 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.760458754 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.763546707 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.763190108 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.760790873 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.764336527 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.763734802 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.762908336 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.761621038 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.763481335 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.761919403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.763592898 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.760960702 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.763524476 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.761303732 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.761753946 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.760908576 seconds)
  done (took 33.411596007 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.763477669 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.763536727 seconds)
  done (took 5.215458871 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.761841416 seconds)
    (2/7) benchmarking "second"...
    done (took 1.760938684 seconds)
    (3/7) benchmarking "month"...
    done (took 1.761222357 seconds)
    (4/7) benchmarking "year"...
    done (took 1.761788231 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.762104363 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.761310478 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.761010337 seconds)
  done (took 14.015775301 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.765031981 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.905283702 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.971772213 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.419701075 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.767835842 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.770316639 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.681086478 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.768827529 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.769041674 seconds)
  done (took 19.505054698 seconds)
done (took 108.011478978 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.612571649 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.760440152 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.993807261 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.814272511 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.818120773 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.101309716 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.785956482 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.025443821 seconds)
done (took 42.596728949 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.79026938 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.42613046 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.464771256 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.786418438 seconds)
  done (took 15.36626498 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.745860234 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.052819411 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.767779761 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.589037704 seconds)
  done (took 21.846239952 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.126647438 seconds)
    (2/2) benchmarking "read"...
    done (took 2.104349222 seconds)
  done (took 5.92322607 seconds)
done (took 51.613181045 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765606524 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.766062873 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.762689541 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.765630665 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.763734168 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.766030354 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.763152068 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.764630437 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.76855878 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.765790634 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.765390394 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.766106081 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.766331061 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766595982 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764401864 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763509872 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.762946623 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766239358 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.764337418 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763742404 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764068712 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767518181 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.76458374 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.764447466 seconds)
  done (took 44.050811597 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.769146832 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.764965027 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.768339098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.767015057 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.765833684 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.76798577 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.767151597 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.764923927 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.767086276 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.768102622 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765274739 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.765283538 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.76754028 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.765912946 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767971672 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.765361446 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.768406778 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767615476 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767717382 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.765268591 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.768337479 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766052044 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.765680424 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768293006 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.766862155 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765728042 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.76832006 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.766594392 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768435209 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.766489436 seconds)
  done (took 54.69764234 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.773230747 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.776701461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.768515925 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.770284471 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.768689311 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.768556997 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.768873301 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.771167888 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.768457067 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.768736893 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.768445133 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.768987092 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.768725416 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.769650001 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.768457455 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.769943816 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.769292999 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.769517584 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.768656816 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.770257137 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.771580004 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.7699287 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.769313444 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.769348608 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.770563151 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.770032722 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.770148683 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.769575478 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.770356765 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.769571247 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.770305991 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.771205985 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.770700686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.770237642 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.771026219 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.769960305 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.774582776 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.779867701 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.76957933 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.770750603 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.769699383 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.770634586 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.769808855 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.77002185 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.771045669 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.770056054 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.770716489 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.771466007 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.770540589 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.769753089 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.770849337 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.771443575 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.771471537 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.770830184 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.771398162 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.771362414 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.771278379 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.770166111 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.770793699 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.771217944 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.770748583 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.770831998 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.771701276 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.770840952 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.772227582 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.77189842 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.771415715 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.771622692 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.771730288 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.772806192 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.771528956 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.773343917 seconds)
  done (took 129.180968012 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.772353079 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.769829615 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.7689099 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.769099272 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769384756 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.772443184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.769188958 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771972385 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769535411 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.772188551 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7712325 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.770041226 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768859052 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772019969 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772403327 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.770319081 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.772103154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770067527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.771843486 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772578747 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772216666 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.769495059 seconds)
  done (took 40.651840554 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772258904 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772638427 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.769735483 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772885547 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770384726 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772772967 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.772349155 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773125166 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773492789 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770845999 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770912179 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773152892 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.770861655 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770488863 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77043994 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770985876 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773041396 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77129402 seconds)
  done (took 33.586248647 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.77092188 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.771196216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.773159545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.771253958 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.770615154 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.773747011 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771321046 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.77495931 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.774682179 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.771925394 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.773718931 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774101654 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.773362948 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771589756 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774225715 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.772548785 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.774085875 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771344233 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774326433 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771900151 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772181575 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774582708 seconds)
  done (took 40.697471954 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775483876 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.775559425 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.771875033 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772874296 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.772614389 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.775005063 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.775079814 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.772676219 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.77541384 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.774917294 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771971701 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.775143176 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.772210084 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.773159974 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.77254564 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771726963 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774758199 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.772603926 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776570366 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.772812695 seconds)
  done (took 37.171528103 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776857457 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.777613651 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.777489429 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776826205 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778153605 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.77817786 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778213541 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.777554252 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.778248302 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.7773115 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.777845191 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.776755154 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777304023 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.77818246 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.777981063 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777451544 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77806456 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778029482 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.777811407 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778458624 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.778001992 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777757577 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777261885 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.778656326 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.778981736 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778394855 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778559625 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.778655149 seconds)
  done (took 51.477521539 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776897354 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.7771057 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.775799115 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.775293655 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.774615089 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.773808203 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.775086443 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.773700255 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.777220229 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775373567 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.777261005 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.777598346 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.77687715 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.777699407 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.776443313 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.777329559 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777513739 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.774797592 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775142183 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776440603 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.777408019 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77713923 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.777514992 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775309077 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774317075 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.777735314 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775468948 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.77572366 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777426429 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.775648854 seconds)
  done (took 54.983920522 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.796241682 seconds)
    (2/2) benchmarking "in"...
    done (took 1.796499465 seconds)
  done (took 5.291990503 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.775238133 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778771884 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.779186941 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.775747752 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.775476442 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.778290534 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.777997922 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77662028 seconds)
  done (took 15.916283877 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.777409948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.778239165 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.779081436 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.778835629 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.779672937 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.778941572 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.785002505 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.779433623 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.779797417 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.780967912 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.787471887 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.787099767 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.780460007 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779705074 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.777956987 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780765432 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.779610986 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.78140352 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.780888417 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.779740071 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.781601675 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78024642 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781965799 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.777540888 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.781435865 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.791077018 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.783738098 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.779954181 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.779635831 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.782872623 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.779106623 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.777813174 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.781575647 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.782514035 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.78013575 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.781981713 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788890226 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780764704 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.785671039 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.781736228 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7801113 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.778957891 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.781288705 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.782652265 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78202971 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.782999727 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.78182881 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.778383327 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.780453554 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.783931675 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.786500703 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779292148 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.778766134 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784055529 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.782849847 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78771687 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.784205773 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.784921306 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.791346585 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.791842071 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.794715507 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.790088143 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782350339 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.78328112 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.791427553 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.80560572 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788019475 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778408302 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.780095576 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.781171017 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.788377738 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795482842 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.79183772 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.783961647 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783495429 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.782819204 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.783147687 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784814381 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.789527786 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.785088495 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.784459949 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78456997 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794161031 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806416644 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.782396159 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.784146599 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.784063524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.784633063 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.783769237 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.795047087 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.784694146 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782737728 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781852514 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.781752171 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.78523044 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.784546634 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.782780465 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783047156 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.779903532 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.783991642 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784937327 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.788117669 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.792618478 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784682692 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.784565337 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.789552669 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.783758637 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782732111 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.7898341 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.783844755 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785178365 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.786201606 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.789418805 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.781082598 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788170167 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.792664096 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.785149432 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.784608121 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.785546517 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.785263479 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794276885 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.81045823 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.784607652 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.784487377 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.790592501 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.798077186 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78668937 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.78907958 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.785848943 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.782655374 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.782335941 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.786180423 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.785332477 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.785905462 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7861327 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786331025 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.785372393 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.785299255 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.786878591 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.786959981 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.785809268 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.786078841 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.786931948 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.786892977 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.7897755 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.788155113 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.790952474 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.784842816 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.785962614 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.786814156 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.783666623 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7850691 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.787260406 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.788149832 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.786500186 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787882351 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.785067325 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.788350002 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786148616 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.78607138 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786695795 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.789410405 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.79115525 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.787689321 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.789794646 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.785569974 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.783584576 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.786957968 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.787032807 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.785847516 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.787407551 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.785562779 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.790253463 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.796308773 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786072219 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.788256643 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.790148055 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787911412 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.789523597 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788968055 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.791385 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.795967379 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.789406463 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.794035669 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.789161302 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.789026324 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78861071 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.788122382 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.78725813 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789219208 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.791989599 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.796716448 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801226832 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797337235 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.789609154 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.795350937 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.790043674 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.793629043 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.791354418 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.788899843 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.787692547 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.790126208 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786749454 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790012971 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.788816283 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.790225063 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.78744889 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.788942528 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.788129198 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.790052861 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789149851 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.789265417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.792184094 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.785875159 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789344759 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.790027712 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.788207903 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.785901276 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.78784022 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.788703573 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.790468063 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.7907462 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.794226802 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.786245903 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790086534 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789750497 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.788665847 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.78926151 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.791666521 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791214824 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.78896292 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796289419 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.78957409 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.790333674 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79620615 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.789940565 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.789139022 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.792344755 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.790725709 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.788714437 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.79273253 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.798315781 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.790532493 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.79140615 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.792521608 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79257498 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792379785 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.796130223 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.787534052 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.789788988 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.790542634 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.791809461 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.787864496 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.792309464 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.790357494 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.791542682 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790976114 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791056302 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.790355007 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.792182362 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.79198032 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.792626822 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.793958089 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794310632 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.800403651 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.7952355 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.791367531 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.794046491 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.791644964 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.79506716 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.792137827 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.793598152 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.79079222 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804485855 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.802441437 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797668059 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.793589804 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.792445449 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79600711 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.795344967 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.795451189 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79173358 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793056088 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.79215585 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.792054069 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.789501312 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.792404784 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.792847614 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793777205 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.793804459 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.797216117 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.79256131 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.792348634 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.794500703 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.794396743 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.794428454 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.792361161 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.793015644 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.794635503 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794050874 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.791975515 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.793006429 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799096709 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793610707 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.794727121 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.792986732 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.793809204 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.79209606 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.794640682 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.796098421 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.796508088 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.802953334 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.799122365 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.803843727 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.795237394 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803343016 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.795303996 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.796331149 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.804489043 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.791559209 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.79232767 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.794352796 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.794585526 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801230081 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.795925185 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.795391155 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.800197767 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.796763992 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.79630224 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.795706752 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.79545272 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794722995 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.79545041 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802467232 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.795652155 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.798160854 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796202328 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.792706095 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.796631362 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.794706999 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.793548526 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79806398 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.796941494 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.79533343 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.795260015 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.795983081 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.797906662 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.797010485 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.79693766 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.792810689 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.795282389 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802510431 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.79529573 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.8011843 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.795993199 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.802453828 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797780255 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802094382 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.798515925 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.795837012 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.797929401 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.796084679 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.798506814 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.79639631 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.797528335 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.79903112 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.797032922 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.800374301 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.797880776 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.798687842 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.797105373 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.798052479 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.796355213 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.807023351 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822703286 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.797936302 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80206741 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.794069509 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.797469031 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.803511518 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.798840041 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.79680695 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.800321522 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808458679 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805467063 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.797226305 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.798752704 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797342315 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799502419 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.797155785 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.797340012 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.799000567 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.797658801 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.798657515 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.799361048 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800664933 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.799629169 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.79760805 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798379934 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.799752839 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.807565742 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.799601975 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.799561256 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799154011 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.79880162 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.799165115 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.798309508 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.800075733 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799094701 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797540753 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.799549454 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805897843 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.805161598 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.801217438 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.798397409 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.799133299 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.798644987 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.799157455 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800670184 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.800230339 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801002849 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.798899314 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.800311551 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.799361877 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.797187617 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.798968311 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.799591591 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.799226412 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802031927 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.806859142 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79940895 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.796103014 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.799132699 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799555247 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.798490311 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.798831974 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.807525262 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802110098 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.810729991 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.809304786 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.805628161 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.79920837 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802777661 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.80804326 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.799380001 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.800590556 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.801197191 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.801438901 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.800829335 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.803924549 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801293537 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.806674304 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.799965794 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.798982238 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808229897 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.802256113 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.801987057 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.802952415 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.805064269 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.799920369 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.798825825 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.8017081 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.800546978 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807443106 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.80341738 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803139786 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802761262 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.799215688 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.802115482 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.808070875 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801486375 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.801902027 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.798959039 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.802005578 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803261949 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802692956 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.798888693 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.801716726 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.801933382 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.806359525 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.809319966 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.798792151 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803376069 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.802514894 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.802788715 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803773793 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802752893 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.802203102 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.799440265 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.801656405 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803325396 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.802590409 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.803954559 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.80224658 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.805624316 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.80383522 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805992056 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805327214 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.813564734 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.811255218 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.799854412 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.801943818 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.803089562 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.805796822 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.8047623 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.8043327 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802776058 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.804794063 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.802523239 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803692278 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.802894371 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.806581996 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818845877 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.803956568 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80281087 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.803459122 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808918102 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.80390963 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.801731392 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.804422178 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.805364246 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.806824939 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.813446425 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.805811447 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810649239 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803734381 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.805488764 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.808519776 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.806886074 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.812875189 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.806595118 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.805691325 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.805127932 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.809277941 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.821365523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804820297 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81456462 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834667887 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.804711082 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.805508998 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.806076142 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80368093 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.805941638 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.804915943 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.806217175 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.804558467 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80640336 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.80626666 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.80607397 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.81064207 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.807152187 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.80424383 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.804238909 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.804979524 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.80631517 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.802519769 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.806999359 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804861059 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.806987897 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.805793134 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.807802592 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.806497146 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821027576 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.815956412 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.806843934 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.807323816 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.803620555 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.808069108 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.809180511 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817169315 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.814151353 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.808166606 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.807022382 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.806369782 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8070398 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.803868443 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.805751682 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.806581278 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806319587 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.804226386 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.819465528 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817089987 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.81082927 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.806001057 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808135917 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.806621122 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807192391 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808838008 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809113019 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.808280578 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.807707468 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812185414 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.80725787 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.806740966 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810698936 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.815749368 seconds)
  done (took 1071.645070915 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80464478 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805132267 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805222077 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80467616 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804401725 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805663107 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804872249 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.805640992 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.805274267 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805437704 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.80486833 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8045318 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804832062 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.806152506 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805087672 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806968855 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805452579 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.805257903 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805853931 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805936752 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.805500191 seconds)
  done (took 39.639952123 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.808196044 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.807036858 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805506326 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.807569731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806037643 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807957629 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806059996 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80966835 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808718432 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806853473 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.810295519 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810100405 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.80765317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.806318302 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807225127 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809015668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809739396 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806248837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.80942576 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806938136 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.810123337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806495213 seconds)
  done (took 41.502155506 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.812162812 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.811371701 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.808177774 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.807612104 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.810992336 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.808753519 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.809730138 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.808969562 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.809458697 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.809262434 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.808656211 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.809366222 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.815449794 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.813973632 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.809498185 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.809027636 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.952478903 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.810326395 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.810339708 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.810698661 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.805851211 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.814811465 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.80634311 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.806650529 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.807809304 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.811638151 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.80946063 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.809364167 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.810588357 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.810050098 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.815139557 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.809467156 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.809474053 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.810171889 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.808854122 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.809474088 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.813718535 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.811488743 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.806068546 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.807600858 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.817228706 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.829856073 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.810298521 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.814661977 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.807871202 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.807799337 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.810954487 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.818261539 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.805694373 seconds)
  done (took 90.59436506 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.8076125 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.809605382 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.806101424 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810572602 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.808820116 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.808787248 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.808616895 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.809172642 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.805614129 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.806872141 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.80906276 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.80404738 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.803563195 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.805254201 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.80645692 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.803432319 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.800442561 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.800440808 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.800147373 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.800048322 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.80064505 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.804047688 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.801798881 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.800376281 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.801704396 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.799724235 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.80020007 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.800800685 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.799155652 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.799201168 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.801628221 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.801809649 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.801939607 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.799165299 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799296915 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.801312209 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.802174651 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.800285471 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.802396383 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.799562927 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.802622373 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.802269737 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.803140747 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.803284253 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799005196 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.800212045 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.800602357 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.799355017 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.800825798 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.802562491 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.803514012 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.800298751 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.80253169 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.800253168 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.802935349 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.803805413 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.800993794 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.800619118 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.803967731 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.80056181 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.800782588 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.804351929 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.800737213 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.803131003 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.802671636 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.802941309 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.799762482 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.802317417 seconds)
  done (took 124.312716368 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8037343 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.804916858 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806689727 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804130672 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803693497 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.803695606 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804594887 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.80496846 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.803920697 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804067217 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803643103 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.802570033 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.803590697 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.803838083 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.80432792 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.803847127 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.804541092 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803611774 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806618833 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804337855 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.803294873 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.805477009 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.804914331 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.804665669 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805533855 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.803518347 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.804807039 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.803733685 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80460315 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.804282074 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.804856433 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.804717802 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.805702573 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.804603393 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.805795798 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.805738695 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.804510811 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805377194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.805898583 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.80469423 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.805341419 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.805791007 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.805371395 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.804222154 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.804617021 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.804912214 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.804582416 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.798270276 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.796160433 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.798334674 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.798484149 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799899463 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798147993 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.797107447 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.796683686 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.795192168 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797128515 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798356219 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797630595 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.797485 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79759489 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.795574184 seconds)
  done (took 113.503052669 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796156487 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795416254 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.793781647 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.792137498 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.794912546 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796435421 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.794755677 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.793750548 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794972508 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.794566518 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795982183 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7936972 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794138013 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794978622 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793079074 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794484697 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792959312 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793798011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795210553 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.793251057 seconds)
  done (took 37.603643231 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.794271238 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.797595242 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.792860847 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.792463132 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.795776246 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.792500407 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.795340215 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795837919 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793113155 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795959858 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.795404919 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796584337 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793219804 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.793478232 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.796163156 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.79378278 seconds)
  done (took 30.42889982 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.792800614 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.797299442 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.79863906 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.798557922 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.794307515 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.793364331 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.795653707 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.793082263 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.793673906 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.796601753 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.7961497 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.796737887 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.797192349 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.796007773 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.793815855 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.796245516 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.793819124 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.794082296 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.79579533 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.797032714 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.792832172 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.7929233 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.794261769 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.798443132 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.791574241 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.791691499 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.79080602 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.791581293 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.791981978 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.79405203 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.789753993 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.789819237 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.789542342 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.789641821 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.796823327 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.787167166 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.790408195 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.790835174 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.791092967 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.790288403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.792184705 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.786908992 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.78993649 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.790525376 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.78914615 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.790492247 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.788453477 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.787244762 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.787138032 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.787056428 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.789932722 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.793397391 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.789531079 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.789516693 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.788414645 seconds)
  done (took 100.303302973 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789329305 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789455769 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.785848321 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.788471063 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.789152724 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.786084831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788709075 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.78501461 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785551447 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787368951 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7860822 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.787861081 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787057816 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785772474 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78381738 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785778109 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.782520406 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.782886783 seconds)
  done (took 33.865934527 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.781924412 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.783616347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.785138672 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.781807563 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.783876315 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.785121044 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781767175 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.784499863 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78441167 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.783679232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783191499 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.785109039 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784536371 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.784425368 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.781778597 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782242733 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.784353607 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783707994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.781652072 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781916969 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78508739 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784285829 seconds)
  done (took 40.944882252 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.782685971 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.783813561 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.799767388 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.802814619 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.807135327 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.81631612 seconds)
  done (took 12.496420804 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782167767 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783743528 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.782898247 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783656532 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784860439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781481029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782088076 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781903652 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78391906 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780804196 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78074728 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784018327 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784878707 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782749882 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785359954 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78336485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78164127 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780352844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781290773 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784346884 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781656167 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782756372 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781268153 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780508305 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78124175 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781730418 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78358707 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780546556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780629377 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783197951 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785248166 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779206987 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781852012 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779376646 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782337821 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781690238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781053037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78107936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781127388 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779093354 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.780963663 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781798606 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78246589 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778955161 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781643608 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778793644 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779084804 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780947416 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777901133 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781590841 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77992222 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779447215 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78146903 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781961211 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780766606 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78075323 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778723246 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777578057 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780925453 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778491387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778028817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780186576 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777573391 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778518077 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782623444 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778151093 seconds)
  done (took 119.270826876 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77806572 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.777864431 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778853859 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779927947 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777783486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778125359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77756257 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777627616 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778813213 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777184638 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779802978 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777610559 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776580868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777713885 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779415567 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777955788 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776988429 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777700664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777663196 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78122153 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778921361 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777791086 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779212628 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778454552 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777237495 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782146376 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777691321 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777980259 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777739603 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777177975 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778099436 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77967441 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777430827 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.777739715 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778139994 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777638453 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778059823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77794428 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777144854 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780462939 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778473207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780851894 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779527876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777915785 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778366857 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777942631 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7778078 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778513162 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780031961 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77806651 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778339157 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777287287 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777990142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778369292 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777839646 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777076929 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778024348 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777183296 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77767032 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781059411 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778167007 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778859581 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780238327 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778575058 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778045516 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778848877 seconds)
  done (took 119.074066733 seconds)
done (took 2484.581316127 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.825982227 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.77480362 seconds)
  done (took 15.301452512 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.940796302 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.895572896 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.778258234 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.828843382 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.778692714 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.80316985 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.797631999 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.77851336 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.780385693 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.778591228 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.780133833 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.965545833 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.834435939 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.778674026 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.780239686 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.871679884 seconds)
  done (took 50.876752538 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.782446823 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.785710952 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.793343735 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.785522162 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.784799989 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.795760924 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.81700257 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.787884089 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.81794257 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.79681565 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.854852168 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.794921292 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.782058658 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.831995488 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.796811469 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.797533495 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.873297012 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.859290714 seconds)
  done (took 34.240899848 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.861150925 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.789284166 seconds)
  done (took 10.359857624 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.782757518 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.834643513 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.849779981 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.791792366 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.782094114 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.815095676 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.78411459 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.787163839 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.782718211 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.811589659 seconds)
  done (took 69.726480397 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.789104018 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.784708614 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.785254204 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.782782341 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.776188112 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.782307951 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.783365081 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.777745979 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.446824514 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.818616333 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.792480151 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.788364312 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.783708503 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.785291866 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.7814869 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.807145689 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.890011976 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.781907866 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.781529289 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.789826142 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.783759034 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.840486545 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.800217141 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.785088223 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.814123774 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.446618331 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.795341139 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.789902438 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.886293317 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.78189573 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.784320557 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.785309626 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.78733899 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.16889652 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.055156444 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.785243784 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.800304132 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.792021307 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.782528714 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.894179897 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.787188336 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.790750345 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.538699116 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.037194886 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.890464342 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.828783657 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.091365179 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.80401873 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.78820925 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.814477989 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.788200544 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.785505911 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.798643624 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.278068808 seconds)
  done (took 127.599417339 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.783109564 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.133306561 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.950438963 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.782354727 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069324593 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989268991 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782459997 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830599143 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.782052314 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.016451094 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.038797541 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889022199 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.782788923 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.782675174 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.78167061 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.780635046 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.941747913 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.855047074 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.783543087 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.780859094 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812092481 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027228618 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.905545125 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.784693943 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.811469408 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.993835988 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.904654092 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.890072657 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.555909368 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.78104486 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.846700386 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.782982307 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.779600475 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.781448413 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939749551 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.877633594 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867586926 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.782797313 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780875974 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.779456449 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.456753004 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984380698 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.878814139 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.923971453 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.983425988 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.988821522 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.567191783 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.780391573 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.535182999 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.948545215 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012520222 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.019319095 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.906931445 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.784205942 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.319559702 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.781377142 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.781452556 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.036624899 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927556232 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.881149299 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.784443549 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.781691744 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.783197875 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030800284 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.784839417 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.880460477 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.785670749 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.782294235 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.881298075 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.883782519 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.922990228 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996541063 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.815414494 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.729641099 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.326410209 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032876743 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.85088846 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036638045 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.785141843 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.782562876 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863099665 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.633684591 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039240189 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.032239355 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.038274279 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82136455 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.505520129 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.783255617 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.013326893 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.006925597 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.045469658 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.020428009 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.027476104 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.109147848 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.784216591 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.783824746 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.010426971 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.922082404 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.785647079 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.132416175 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016892859 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.334640995 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.80410329 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09283236 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917537372 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.785576072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.425821658 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.786051016 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.017303588 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.826527095 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.787638737 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78472277 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.00972069 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.778059649 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.784150202 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.443098725 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.848014481 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789581883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019492878 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.786878761 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056173674 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.786651988 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023715852 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.826462652 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.818676869 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.017827612 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.018804651 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.786229833 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.031495096 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.031065355 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.901115128 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.01087505 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.492608516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.786292456 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075754697 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.787116551 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.784687376 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.956718208 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.786828765 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.933054738 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.786598276 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.079727933 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811283944 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020429465 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788316598 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.04528345 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.82104206 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.839281881 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.788150778 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919709575 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786843488 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.622959264 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.944769337 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78816823 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.786805368 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.593136709 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.787589628 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.936421454 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.019847308 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.2232722 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86115222 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.461158675 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.785842801 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869990818 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.811281017 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.179522279 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.785426805 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.040861323 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.78880082 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.786860245 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.788059735 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.030195027 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.972325908 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.791043636 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.786225449 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.699544903 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.786350557 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.7873072 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.972340142 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.142638426 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.7861356 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992419671 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78818431 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.915692516 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.791453419 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.874473372 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.129921578 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.786740136 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.78630362 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.78774414 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.788070563 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.78742025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052832511 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.815954159 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.306944609 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.931306528 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067361431 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.100812545 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.039342658 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.833628061 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.793870811 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044016556 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.789884401 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.853243687 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.789485067 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.810563779 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.019516357 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792912723 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.000622384 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.069905222 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.645695642 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.838862443 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.79187969 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.791478974 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.788451562 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.93565346 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878706304 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.789905929 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.789592885 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.905835284 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.911519203 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9989514 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.790218482 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.871156231 seconds)
  done (took 884.973247394 seconds)
done (took 1194.7783018 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.791761719 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.789883541 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.7792254 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.792797336 seconds)
  done (took 28.868770057 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.796241924 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.792903536 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.797085548 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.792980005 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.796477943 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.793568918 seconds)
  done (took 12.482356909 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.83923094 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.787372602 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.792070127 seconds)
  done (took 21.133431573 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.862171774 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.176491398 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.893002801 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.214312453 seconds)
  done (took 9.859698967 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.797414592 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.798109669 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.797419418 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.79741049 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.79736009 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.797050776 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.796549927 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.797811934 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.797698563 seconds)
  done (took 17.893243618 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.940707888 seconds)
done (took 95.89189648 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.805702336 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.167141575 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.987347883 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.895901574 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.86974758 seconds)
    (6/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.8670142 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.905051723 seconds)
    (8/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.900039378 seconds)
    (9/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.801620874 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.236654565 seconds)
    (11/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.03496215 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.82229878 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.113507012 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.896057049 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.9095697 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.888561343 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.873231201 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.898477707 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.886720566 seconds)
    (20/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.935716254 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.962209314 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.812725369 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.798302549 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.001465021 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.881455589 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.822988058 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.803139323 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.878036176 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.891708972 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.938839291 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.147695367 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.804060455 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.192418029 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.512893671 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.908517783 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.980094822 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.742109958 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.908965911 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.038378783 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.912623152 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.803599566 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.986676997 seconds)
    (43/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.046769182 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.899245373 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.859957477 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.729464989 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.802942567 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.336377859 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.819828885 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.89146804 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.02843364 seconds)
    (52/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.073517961 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.191357837 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.433762328 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.824804033 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.186989483 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.936117259 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.987174592 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.506936686 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.314871725 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.072348227 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.082668932 seconds)
    (63/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.935251324 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.808387071 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.57053304 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.967909713 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.826888505 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.736046277 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.904749286 seconds)
    (70/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.980768968 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.808377761 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.866551393 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.823452717 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.892325359 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.80152063 seconds)
    (76/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.893229169 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.198126844 seconds)
    (78/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.253019972 seconds)
    (79/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.047987646 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.088367283 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.759152073 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.843751112 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.942447078 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.806021513 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.127570326 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.065520242 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.067730719 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.055197189 seconds)
    (89/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.712692897 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.132871174 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.796726098 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.410924473 seconds)
    (93/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.839751471 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.833666721 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.808562172 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.02783571 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.035697503 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.030594856 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.913658444 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.129818005 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.196607534 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.843398496 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.807102148 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.905049367 seconds)
    (105/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.659839444 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.727605916 seconds)
    (107/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.89604922 seconds)
    (108/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.256388634 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.171286129 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.815236276 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.300096714 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.831277781 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.460368922 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 5.572276761 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.237047561 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.821907445 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.04739092 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.811692351 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.812441661 seconds)
    (120/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.252912424 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.955070771 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.261179449 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 6.813561641 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.957061816 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.904504111 seconds)
    (126/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.809608864 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.109155781 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.152804782 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.837352238 seconds)
    (130/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.887822756 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.111532583 seconds)
    (132/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.941829515 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.803025815 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.180184666 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.766849123 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.87392095 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.80905373 seconds)
    (138/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.244156112 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.143887118 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.854680028 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.753732389 seconds)
    (142/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.973711041 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.513643008 seconds)
    (144/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.232783888 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.327752403 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.074130913 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.258516466 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.072794131 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.430936718 seconds)
    (150/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.897719126 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.889861581 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.110992161 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.107234475 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.845648758 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.525204111 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.80181909 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.821151242 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.817578599 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.50117699 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.902201293 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.813182301 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.051417804 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.112095846 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.841062268 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.814027664 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.924619123 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.21144519 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.245958725 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.38183008 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.347869875 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.800187747 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.629614486 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.890658267 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.838324383 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.811915326 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.915194602 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.736225831 seconds)
    (178/309) benchmarking ("sort", Float64, false)...
    done (took 5.607648996 seconds)
    (179/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.910594671 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.816068309 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.980303206 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.805169578 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.840106846 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.85629085 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.798089436 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.192573243 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.800685355 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.762400619 seconds)
    (189/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.849360263 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.814062036 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.128608075 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.804991221 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.227289563 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.893037977 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.002997067 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.929221042 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.874108052 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.439416793 seconds)
    (199/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.962644188 seconds)
    (200/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.83062701 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.914144867 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.485082384 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.935541486 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.802220516 seconds)
    (205/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.969351366 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.981600251 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.993508431 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.293092203 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.889726566 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.905419187 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.814238394 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.301464393 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.820610794 seconds)
    (214/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.975646072 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.165999078 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.153121953 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.845378455 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.559463508 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.019884462 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.949513394 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.992416684 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.885082583 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.073604206 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.964894992 seconds)
    (225/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.822101379 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.026044638 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.972945084 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.941268912 seconds)
    (229/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.298570429 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.015032204 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.853026154 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.855121845 seconds)
    (233/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.939787985 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.227917764 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.019319296 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.830430516 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.920442581 seconds)
    (238/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.333836932 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.856204063 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.800931361 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.911778544 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.141887495 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.194621446 seconds)
    (244/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.831286599 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.222723656 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.820405666 seconds)
    (247/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.820666157 seconds)
    (248/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.083735991 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.978515406 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.915056156 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.008580834 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.968813752 seconds)
    (253/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.948073045 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662226138 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.985134133 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.119966998 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.808783273 seconds)
    (258/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.077675415 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.88784355 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.820380171 seconds)
    (261/309) benchmarking ("sort", Int8, false)...
    done (took 6.120348124 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.00150162 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.201288507 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.799077635 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.47669172 seconds)
    (266/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.986508129 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.155592331 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.815818943 seconds)
    (269/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.886712905 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.834689517 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.165464284 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.949373694 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.935440537 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.109644561 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.096156038 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938101097 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.859012318 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.818529063 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.902448312 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.176988817 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.230888403 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.847674568 seconds)
    (283/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.803937465 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.321502812 seconds)
    (285/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.008239698 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.893580373 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.881851132 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.578722611 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.985721699 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.824615465 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.895219876 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.991441722 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.910099186 seconds)
    (294/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.804162539 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.50617465 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.931602244 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.123145878 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.843673978 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.08384749 seconds)
    (300/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.85259695 seconds)
    (301/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.804080298 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.741098219 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.504948536 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.962887987 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.038429983 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.683481385 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.069203285 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.845723752 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.408003302 seconds)
  done (took 990.353224108 seconds)
done (took 992.361637131 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.858456137 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845854572 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.830571003 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.850555019 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.941459705 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.856953849 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.840725466 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.831973603 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.877570326 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.878880461 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.827632849 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.855449139 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.832728606 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.830101001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.829824721 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845283184 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.147933603 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.860824232 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.846909771 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.838172712 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.847012116 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.826143462 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.878584682 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.856659627 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.833257862 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.831676402 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.832826621 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.849410237 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.941919371 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.832814483 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.832546707 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.841500494 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.148279652 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.859917825 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.826665807 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.85073356 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.841872119 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.838165646 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.833920601 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.863634307 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.230780841 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.87133097 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.833755251 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.830435086 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.832212654 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.834334708 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.83226059 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.837077805 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844895284 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.84648016 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.224464978 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.887504248 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.8339321 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.832065987 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.842047931 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.832467264 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.835067186 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.847001648 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.850679191 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847929843 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.130425569 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.869266044 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.833607659 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.849617005 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.839981521 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.259337385 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.870172432 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.837120419 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.230835935 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.876361988 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.260365273 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.880893402 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.83396446 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.846401477 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.864179925 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.146766711 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.860062944 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.832087523 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.839808083 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.831078932 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.841818688 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846244185 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.837307171 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.832486882 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846021996 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.85975785 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.843860427 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.834383974 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.841161317 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.852970912 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.840024854 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.844735851 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.836762742 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.829424676 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.842859517 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.837413335 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.836175846 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.836625832 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.839310276 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.843658841 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.231199033 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890830129 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.831289426 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.830805469 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.833375948 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.847606055 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.230835058 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.877159409 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.8549819 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.881273538 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.836517799 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.132680352 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.868594509 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851313415 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.843879758 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.83832136 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.829505 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.132167554 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.259326662 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.890212976 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.835307598 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.831305761 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850659264 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.837596305 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.831693909 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.149851286 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.866353159 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850143902 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.957373805 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.845688851 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.865696404 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.831288903 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.837505742 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.866550453 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.850562738 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.866067512 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.838170543 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851118781 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.851851697 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.832348838 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.846381589 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.845304791 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.839112729 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.840947883 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.829588251 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.867697453 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.849571047 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.849236064 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.855973535 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.95755112 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.834105137 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.132469308 seconds)
done (took 288.287994631 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.905653408 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.827946329 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.931681541 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.834235515 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.917451692 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.918056197 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.831425065 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.83073683 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.830820822 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.20765864 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.830702462 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.831314913 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.831263578 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.831199819 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.916396515 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.833525263 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.83374391 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.172397231 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.836300071 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.905266006 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.82732021 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.831205724 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.834233517 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.206663443 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.834649827 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.835016656 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.904973628 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.83282111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.172454694 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.830565902 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.83047046 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.172183844 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.925407549 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.852086231 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.846339018 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.842195282 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.91450452 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.840230533 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.91687411 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.915068454 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.931647562 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.877150327 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.835178926 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.827690383 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.838739746 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.838384198 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.833627618 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.872619865 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.837307015 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.834369674 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.173515872 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.844909267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.833239354 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.83283574 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.833271354 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.867181271 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.832412963 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.838296264 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.928523012 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.838244562 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.897762664 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.208765905 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.209067441 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.836138534 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.837133327 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.833662301 seconds)
  done (took 181.947460261 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.900495194 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.915009632 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.899490922 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.842259747 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.886977082 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.902797453 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.840555845 seconds)
  done (took 14.939980755 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.842501841 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.836090019 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.887038854 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.888847589 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.83805872 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.991187541 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836383819 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.848156075 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.834758457 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.888751795 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.83796232 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.836801988 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.84591618 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.834339074 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.887725782 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.848134863 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.953411166 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.840068289 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.838650889 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.984924821 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.833971375 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.843940735 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.870870812 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.847901354 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.838659347 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.842819439 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.432119047 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839770487 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.833690317 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.837635458 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.834923683 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.877931951 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.838312188 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.831704832 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.834230345 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950522667 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.839107294 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83496508 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.837262108 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.835735927 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.837884864 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.837861798 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.837324926 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.837602256 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.837426677 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.859573339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.837814055 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.837768868 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.839577263 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.840159475 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.872841079 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.840184848 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.836388863 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.837851601 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.89437896 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.845771546 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.84110022 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.837197443 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.839895492 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.836240171 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.990032745 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.888563826 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.838991141 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899147147 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.839937541 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.840462702 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.83838843 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.838545525 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.934219926 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.839003243 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.889664437 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.836197048 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.998951468 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.862405143 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.84000249 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.84083126 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.84488176 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.840323429 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.836497955 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.845685881 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.836440533 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.840000909 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.84645859 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.836640507 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.838300419 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.951159603 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.943823855 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.836722528 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.852319179 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.848709685 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.837065395 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.873343937 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.840716943 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.837821899 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901058695 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.956342098 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.896179086 seconds)
  done (took 202.731749086 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.846347468 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.84794592 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.840696832 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.855986032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.840067415 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.839994386 seconds)
  done (took 12.827862304 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.845217885 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.842463417 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.840606738 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.840265665 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.841249542 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.841743093 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.844516239 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.842095713 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.846352289 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.839715988 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.844382384 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.844509514 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.842627258 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.842347442 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.8426567 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.840395632 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.842802568 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.840252886 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.840489023 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.841984954 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.993146617 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.844154863 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.843542474 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.841758071 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.846457304 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.841920673 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.84823567 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.843004213 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.842167288 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.850525455 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.847109514 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.844238772 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.844285843 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.847117276 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.848669219 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.843704263 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846009678 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.84418673 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.842061053 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.844629458 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.843059085 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844672575 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.844324965 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.845501746 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.846180458 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.848227371 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.847741887 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.850623048 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.846933351 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.844034943 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.844530766 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.844107683 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.844883076 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.844134173 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.848984823 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.850956254 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.848999267 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.846699355 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.847177851 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.84652754 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.845983861 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.845834234 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.846397346 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.850740247 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.843199457 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.848814971 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.845332436 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.850763768 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845789334 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.844527402 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.847792412 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.841895315 seconds)
  done (took 135.738300641 seconds)
done (took 549.954992776 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.990951685 seconds)
  done (took 8.751875045 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.015056093 seconds)
  done (took 8.81793265 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.267840961 seconds)
  done (took 10.034493988 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.887936734 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.846109112 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.849507161 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.838995233 seconds)
  done (took 29.20793012 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.862135499 seconds)
  done (took 8.62234838 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.859925156 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.836784202 seconds)
  done (took 15.488362633 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.000053885 seconds)
  done (took 8.761035713 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.935085121 seconds)
  done (took 8.72312329 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.85968764 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.873235765 seconds)
  done (took 15.506872634 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.823097047 seconds)
  done (took 8.582941097 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.473474271 seconds)
  done (took 11.328585319 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.859373554 seconds)
  done (took 8.723573584 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.922016762 seconds)
  done (took 8.682242564 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.87207126 seconds)
  done (took 8.632781457 seconds)
done (took 161.624064402 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.84310955 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.841592809 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.839205478 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.839600645 seconds)
  done (took 29.123582451 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.877797808 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.88010739 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.881053919 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.890251349 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.880684904 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.877087666 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.870479122 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.872725265 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.8900932 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.88123761 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.882606719 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.882322464 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.878820793 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.872023796 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.881887894 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.879693467 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.889136133 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.881110272 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.871631487 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.882063503 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.845164254 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.889401036 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.881425107 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.846536297 seconds)
  done (took 46.827191668 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.041097202 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.917627823 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.998495114 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.897744005 seconds)
  done (took 9.616797276 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.896375953 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.898685914 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.912271725 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.950738826 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.973389481 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.908456075 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.872804388 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.867947034 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.854452186 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.899420223 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.97499621 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.895796484 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.995044796 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.846919396 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.032473826 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.846963575 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.84636733 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.899387582 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.950461542 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.965746501 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.847811644 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.898484799 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.902700182 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.894263233 seconds)
  done (took 47.593766632 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.845981611 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.854060752 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.852041908 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.847244116 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.849868931 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.847531484 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.853022365 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.84792711 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.869277698 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.848572979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.846734283 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.847882175 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.845734956 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.84667364 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.847509456 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.861006845 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.860187732 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.84781842 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.852463733 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.854020609 seconds)
  done (took 38.789515562 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.844357548 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.694689656 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.192305423 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.096855422 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.841770473 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.845380816 seconds)
  done (took 31.281412174 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.863377416 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.855185154 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.84686661 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.906950429 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.992289265 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.856386551 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.848714313 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.86045886 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.897145131 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.914686383 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.872810766 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.878182354 seconds)
  done (took 24.360214772 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.845529352 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.853594443 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.849281783 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.866809443 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.860770907 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.85667414 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.856611842 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.844710422 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.863944849 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.87073631 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.858147996 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.861443789 seconds)
  done (took 44.057276689 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933034496 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.735537192 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480252714 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.650988973 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382455063 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055409917 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.477236549 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.020699459 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.851193963 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118296284 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.445741278 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096741866 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098628758 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848683877 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923653583 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.310913245 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145480525 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071993663 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872732456 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540684629 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970093627 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365273995 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.636871843 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.976780927 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057185219 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.979520567 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.106177042 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.805373861 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983209166 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885939239 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857065335 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847955451 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119878824 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062634425 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977224262 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858513735 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.500280955 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.565657903 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.837066124 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.601503899 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.524854244 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.986586779 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856465119 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84717378 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.782309758 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371378176 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026508917 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.853680708 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.549699685 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.847848205 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856771431 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938285997 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.850935145 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.662441402 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800048863 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.128674182 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.846485131 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853262456 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425024911 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954902137 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.533685228 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.791965475 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.939881123 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60304467 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326539703 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.009225111 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.852103125 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851695065 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782234475 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.548841789 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976604958 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9930856 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.868310393 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499542152 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15139966 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.517806906 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936638566 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137045275 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.62704385 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.788785731 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077871627 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.79883927 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782398003 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.704670768 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.782720713 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112034033 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886805128 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.514502154 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887053432 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.018240438 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.863352237 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870936225 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859145677 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072805342 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.731594287 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851460491 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.405050365 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139339919 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872439014 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023372498 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785244029 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.855416273 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104692438 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.061015003 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.101712423 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.322031272 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014007114 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853600087 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.942246237 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.793368062 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.866811663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.130733201 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919178422 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958371512 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985792437 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.807276336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145407559 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87734438 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.029318808 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.47403734 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121230046 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.170803288 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100346097 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934560831 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857591109 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853269207 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.627753526 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480022281 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.076538142 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.85155138 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352667637 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86660893 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.85368931 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78649839 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.513231661 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.468650852 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.964085557 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.075275003 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.808900207 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131318327 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787170851 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.995810797 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.96280616 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.075457741 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.503994524 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.936392091 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110700012 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354745051 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.102060113 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867097898 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8721651 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954198634 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87545771 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.290241177 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10989888 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.857798627 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.856435381 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.610001635 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.93254682 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860627025 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.857806427 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657356972 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147282925 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888844882 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859958164 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.791926753 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.870100363 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936786755 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858927781 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863582461 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.38069019 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604969279 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.866522935 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.505342313 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08073677 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863819018 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.609815867 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045284038 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.947860714 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138715914 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924193574 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.787127849 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.557629591 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.557816301 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855902569 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788584143 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.856273885 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863955272 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865343326 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.051805119 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.14087498 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911397392 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.575242601 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.974624529 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86596241 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.859734771 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858292318 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35441861 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.971895375 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492122139 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869855989 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991336347 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.868991349 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788389649 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.861546756 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860232758 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856599392 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.810221534 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908484001 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.60704624 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195613582 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117370165 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.503582129 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876206863 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.580841157 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.989944154 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.877273428 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.446219344 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834827467 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.992737464 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926525291 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.867037983 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.612563212 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.641401952 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438231372 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170092393 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189202882 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31711087 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.233768872 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.181763769 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033723784 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093707703 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38470446 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918881836 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035859572 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802167966 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943113719 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.513774572 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21927624 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874468029 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085714906 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254397105 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.506338592 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024436174 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068839903 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893634026 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.665732478 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888449908 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.380263296 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01250056 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.437448082 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087381731 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025730086 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.445590131 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.979827212 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.857558078 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318422812 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93930597 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.569333356 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218976584 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388715599 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.48628566 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236369207 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865624488 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.303764611 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219361256 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.202312594 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.950866669 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794982086 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869931276 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871247326 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.858205523 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.835983892 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.75392596 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.129293844 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870401331 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093414681 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.122242559 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137707573 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.773440157 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.864988819 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859794149 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153714017 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.608947154 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099976082 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.182310627 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.437785335 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869895321 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793587359 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793403873 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.56380703 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.861614259 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.833327642 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087770942 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.962693378 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81370785 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.241039934 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174480651 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116573201 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.874393094 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144295454 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148097317 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.593205799 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892500085 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.959906625 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.441347919 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.609139555 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.082209828 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.094508871 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65887532 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.09095889 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494326179 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.043156242 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.859642438 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078294245 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.083338352 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.546492341 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119393911 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.585119273 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.870220571 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230386808 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929042665 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.503964567 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.083761049 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.953131694 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871289189 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942747009 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872055814 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.872031032 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872599965 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908432858 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.504083738 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.004983841 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.876759804 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953459294 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980916562 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.45450302 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.872750238 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150089699 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227487438 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210284425 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929627794 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863324534 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872960057 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795805569 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003718778 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.30806764 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135993521 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.994220397 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.052206367 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889026931 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.44739497 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.158504428 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17415425 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137414296 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.757784646 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863983439 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957186651 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.09018442 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874326363 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.073585917 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094320455 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182393615 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333764984 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.001177596 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.137739512 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140841026 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.233190405 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867765456 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458276063 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.877219176 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385967012 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.903229329 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.53807548 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157902085 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875866761 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087441511 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886023378 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.059947255 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.316831438 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576784756 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232313818 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.86109728 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929345654 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151837639 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280329498 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190519917 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947849669 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875585047 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.566110895 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002435051 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.786612801 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.123551613 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866151258 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077261187 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.581732573 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.875105512 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154148314 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185823594 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.864748514 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.819733986 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923252899 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.876089511 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089021554 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132748403 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117058969 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876331845 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873865432 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.680909077 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153080295 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935768359 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799495966 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.871587983 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965270837 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112905906 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886167983 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.383957592 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.569864689 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165862834 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.786169858 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889976229 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269985601 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326247364 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213180094 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.402696694 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099189913 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.425442311 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.716211849 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244654239 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.872448398 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270051605 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246085082 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.871803659 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368455734 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981304606 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.15263484 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195453233 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.888754548 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652656291 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.917820835 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090435542 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457419034 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813278744 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874295597 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.929384664 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.871515087 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998992124 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879989819 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.865526036 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.744902362 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.706714836 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359827113 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.873916573 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.88456339 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.438360731 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420293771 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976049779 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024574735 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876658841 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.591689122 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.16137381 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.122157106 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.372987894 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.941068704 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.872891235 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872594475 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795892705 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066923098 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.065455669 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167018225 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.199992067 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.98038702 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873509736 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.08491179 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079944508 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.496778702 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03341558 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.240454285 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982575168 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.796306528 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.582039434 seconds)
  done (took 1673.582347365 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87799199 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.940293167 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.973067895 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.93788562 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927287189 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951830598 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.930362715 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912306087 seconds)
  done (took 57.244482886 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.872331803 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.083683372 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.881052576 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.872060502 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.937267019 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.87285274 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.072910286 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.884309298 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.895283734 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.88184613 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.882545293 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.907156623 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.158937138 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.897005542 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.873317436 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.420174111 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.895920588 seconds)
  done (took 75.136626888 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.873686026 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.284691785 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.896605763 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.896913077 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.897994259 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.881493721 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.014052415 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.929698716 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.880757263 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.051561685 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.215210659 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.890049568 seconds)
  done (took 90.510432964 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.892479552 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.880501949 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.881635459 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.880310815 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.881265037 seconds)
  done (took 11.220503611 seconds)
done (took 2181.124109308 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.112083689 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061553611 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.097636238 seconds)
  done (took 5.955687414 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.022843386 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.07187094 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.18945256 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.196051058 seconds)
  done (took 10.280371012 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.15758132 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.258328213 seconds)
  done (took 6.213400125 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.203588072 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.897290846 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.255122375 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.877557628 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.879842137 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.880292275 seconds)
  done (took 22.44066329 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.879871186 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.882179477 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.880580176 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.883476731 seconds)
  done (took 9.323499764 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.859901019 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.587203864 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.861339405 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.877222385 seconds)
  done (took 20.983012228 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.628229301 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.002238992 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.633808946 seconds)
  done (took 9.061897423 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.349259367 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.00751973 seconds)
  done (took 9.154105013 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.037987678 seconds)
  done (took 3.836312416 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.908633685 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.149985471 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.374837326 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.394609086 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.466730245 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.722070741 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.217035258 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.111675986 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.325344819 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.343377617 seconds)
  done (took 24.812959425 seconds)
done (took 137.327500388 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.236000065 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.90548684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.080329161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.244547394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.120519494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.076236506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.101477265 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.237288726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.934454937 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.91921953 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.253839283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.117209098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.047065101 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.897883509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.055753935 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.899092315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.108699158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.264915029 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.93265764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.150932465 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.112830438 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.892595726 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.082825597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.909249091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.113993464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.0293192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.436194457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.904316933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.070863874 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.449098173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.032982613 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.286441902 seconds)
  done (took 168.704602815 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.880363966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.879572731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.880741285 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.87966173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.44381573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.882324373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.879204125 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.879800261 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.344911316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.340199827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.881237298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.421205036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.882590157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.880363462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880989668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.882378794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.503636973 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.881550642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.880825892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.88089982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.88178802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.259385038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.881152024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.270302811 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.496257125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.884548494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.881235503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.882655652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.881461718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.881957068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.883184364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.882122637 seconds)
  done (took 210.035383861 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.838376228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882979912 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.883893133 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.884574509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.884786082 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.882140934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.881302529 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.880803752 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.499641319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.491082886 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.881992054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.880850365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.880834424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.880253268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880412828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.879830039 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.880410488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.88000302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.881945934 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.881170884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.881021123 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.493640537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.884619344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.494843592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.881364223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.879896226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.881486432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.880606099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879992581 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.882140282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.882716213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.88123422 seconds)
  done (took 220.42345877 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.136494666 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.886593136 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.886985592 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.817921793 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.887613775 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.885948565 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.880064698 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.13915084 seconds)
  done (took 19.323513242 seconds)
done (took 620.292927294 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.344438609 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.192946254 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.062913954 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.911496675 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.147900485 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.944427438 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.904957297 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.971608547 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.526644509 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.978148393 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.550954225 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.928356543 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.642188177 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.935367334 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.031209853 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.965733517 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.451450288 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.543878614 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.08054106 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.964330636 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.079059877 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.83150045 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.993550982 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.56026964 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.663485202 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.877780897 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.9763523 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.459761981 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.91879333 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.066380706 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.673273319 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.24304444 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.927595328 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.906263864 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.961910579 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.93994889 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.181785173 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.925357381 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.031361838 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.634673419 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973499141 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.438751868 seconds)
  done (took 103.148084688 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.876584405 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.874794285 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.873973474 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.874934589 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.873887567 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.874391307 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.874253348 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.874903534 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.874530621 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.874057767 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.875225533 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.876503645 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.875678572 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.875295385 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.87499802 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.875055106 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.876516689 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.875757877 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.875439197 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.875005664 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.875294011 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.876039362 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.891800865 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.876260153 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.876693408 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.876994722 seconds)
  done (took 50.587997443 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.889452154 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.053398781 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.12881894 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.910595073 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.88931909 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.891998476 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.907603766 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.895270104 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.891520634 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.891050368 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.997539572 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.896855056 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.909317575 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.128344497 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.908243446 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.890184665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.890477079 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.889897559 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.059332204 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907581683 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.910761132 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.89602237 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.909204434 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.903447041 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.893450751 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.890698001 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.894497592 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.356604649 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.900565026 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.997017442 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.937178312 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.915291582 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.297455457 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.136990806 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.948400229 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.903492939 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.891336077 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.000008663 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.89636634 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.890725322 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.908704347 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.896200617 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.123611255 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.401133794 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.906159306 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.891594578 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.363656323 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.01099271 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.933304776 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.903332076 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.126819069 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.909470244 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.891953428 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.892338852 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.928168998 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.8995049 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.891442138 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.24558294 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.905377588 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.908817398 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.896714084 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.891586643 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062734322 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.902138417 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.05230467 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.90236497 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.897965694 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.892996986 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.128441153 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.910077804 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.402761272 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.906934006 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.892400652 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.999440336 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.058463719 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.394084959 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.905510312 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.062217929 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.315123763 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.918070225 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.900795336 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.346226313 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.922189382 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.901098958 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.894376762 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.895172396 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.893187596 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.937420659 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.91265695 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.33227627 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.40673268 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.265356611 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.920881599 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.909314368 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.8941182 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.244321885 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.902204805 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.892841575 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.122984272 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.413157942 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.90965529 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.900425604 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.388615859 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.911136637 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.913712674 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.904033573 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.131918567 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.911199293 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.937943459 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.894859539 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.899812861 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.897494235 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.912381883 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.90228432 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.893898673 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.381527888 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.021408411 seconds)
  done (took 234.955344646 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.892842682 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.89370624 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.890444083 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.895709681 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.889112066 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.89432182 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.888834985 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.88910315 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.893917849 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.889819493 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.890025489 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.889284712 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.893705046 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.898901256 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.902394952 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.898473729 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.498496507 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.893019995 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.892625294 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.89370096 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.551319448 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.900771422 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.894320176 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.8956877 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.895476634 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.892487076 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.899586353 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.89753645 seconds)
  done (took 168.109953007 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.899006812 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.013561705 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.920847983 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.929567657 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.90899126 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.897010067 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.922242341 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.915182855 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.905787927 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.896547694 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.897182523 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.961425383 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.912790709 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999514765 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.933772654 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.931365668 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.003106998 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.913510964 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.898650523 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.897625847 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.928238573 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.892432995 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.961049691 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.026743682 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.919289024 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.017028279 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.904551366 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.901466014 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.899552795 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.018506472 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.916898957 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.96000477 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.931649446 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.918810819 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.020594521 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.016188283 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00895591 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.935412964 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.906051629 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.899717562 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.899655092 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.886871236 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.017568117 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.91944172 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.901799331 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.005389977 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.920714211 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.902987833 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.910420391 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.900999212 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.915568211 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.92065118 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.968416547 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.035665322 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.935527213 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.926137048 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.926248124 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.183472363 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.911586398 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.998702868 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.89668566 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.01912859 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.924223947 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.888396363 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.900678039 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.906002899 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.93155771 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.934345378 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.008220855 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.914236388 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.000033538 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.939686179 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.90877046 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.900031902 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.905214682 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.018993042 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.019016755 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.942170898 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.938913098 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.933614044 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.896888605 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.903645069 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.887805061 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.920537526 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.904640545 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018130303 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020356858 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.91355394 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.904730288 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.903935759 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.904538638 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.927009534 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027394199 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.935915768 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.994979359 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.973210018 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.978082412 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.916632973 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.91502924 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.907686773 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.966575342 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.9178375 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.913485691 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.231322626 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.970821264 seconds)
  done (took 205.932362485 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.359716396 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.959043692 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.959407257 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.227738078 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.247671225 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.837870486 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.949400741 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.952049131 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.978268577 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.143987997 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.02441625 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.971124338 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.940894186 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.925658646 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.955151173 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.976281653 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.962073496 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.266085019 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.068022383 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.086257563 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.935213414 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.259201605 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.231187467 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.333723321 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.989657112 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.29540126 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.607725996 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.098051644 seconds)
  done (took 62.367110589 seconds)
done (took 826.903533127 seconds)
SAVING RESULT...
DONE!
