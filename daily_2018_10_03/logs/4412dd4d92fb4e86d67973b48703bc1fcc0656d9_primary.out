cset: moving following pidspec: 31529
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.315220488 seconds)
loading group "string"... done (took 0.477623571 seconds)
loading group "linalg"... done (took 7.720948321 seconds)
loading group "parallel"... done (took 0.175110588 seconds)
loading group "find"... done (took 1.273133557 seconds)
loading group "tuple"... done (took 1.972784181 seconds)
loading group "dates"... done (took 1.43197339 seconds)
loading group "micro"... done (took 0.250292145 seconds)
loading group "io"... done (took 0.67044064 seconds)
loading group "scalar"... done (took 41.16478004 seconds)
loading group "sparse"... done (took 12.71708389 seconds)
loading group "broadcast"... done (took 1.121841504 seconds)
loading group "union"... done (took 13.91829797 seconds)
loading group "simd"... done (took 4.791308541 seconds)
loading group "random"... done (took 9.995281648 seconds)
loading group "problem"... done (took 2.009757231 seconds)
loading group "array"... done (took 22.541253092 seconds)
loading group "misc"... done (took 1.445178765 seconds)
loading group "sort"... done (took 3.604110425 seconds)
loading group "collection"... done (took 19.726262362 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536845838 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144580127 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138167644 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.154033166 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.213785094 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146490386 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163606117 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.118005517 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.02578087 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.194041263 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.160317786 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.529694465 seconds)
done (took 5.259391573 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.225391174 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094772127 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105365885 seconds)
  done (took 0.876377935 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079689892 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14777754 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096786854 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080835595 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.099085138 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083386438 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098651607 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095978672 seconds)
  done (took 1.384202842 seconds)
done (took 3.251693589 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.726070658 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.288570889 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20618375 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467738787 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.200013399 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220546058 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676606551 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339201489 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254562926 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100929293 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145622859 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395175598 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137714534 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.691665889 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091345098 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128414226 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181751256 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442290975 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084846102 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113234193 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119192699 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144537682 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.133501159 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095984096 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.189456154 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085681444 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197210618 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109216341 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08151169 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.294509046 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202391715 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681076966 seconds)
  done (took 10.941870814 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113783138 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136016681 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100815635 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143807844 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137085205 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100354006 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085829216 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100443328 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126851064 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180839133 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133622733 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123177444 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096873712 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084300064 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118197893 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249327141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122817161 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106469228 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102621209 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105955737 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122920157 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114549444 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111799673 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094630995 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169727011 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22089782 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112199549 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127638972 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098694229 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117239475 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146242081 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146227351 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09724158 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081603 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176037989 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127558153 seconds)
  done (took 5.228108425 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155959343 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190213138 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122006575 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171376439 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165773156 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14363675 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162325125 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114887555 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095385264 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239559066 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.131242576 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185674251 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147580062 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119315439 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084698614 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.102556323 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0826439 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.611224766 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.167557596 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137199516 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118415595 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104390232 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086222705 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36536721 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105351678 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081428409 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099578136 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06594464 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161119011 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099658449 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.15488673 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122183146 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083744149 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138134704 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216493684 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080197275 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128780669 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138535952 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083619175 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09925141 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.184621851 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090427308 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.101107861 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123207529 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122820265 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139005582 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104134162 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100204422 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208204825 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081071219 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099067943 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11907764 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.971125028 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182526597 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093963162 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099183312 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332954962 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101656418 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101567661 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080697827 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.274892825 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139555009 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085585945 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100153831 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082953737 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.105705517 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386222197 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085756133 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.681287863 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086279925 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109607238 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086526581 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100446314 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1076686 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090750749 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119407472 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083115552 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103276506 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082587605 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099521555 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0843826 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113052822 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105945807 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083494627 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167935574 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.08317175 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118532418 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130437387 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087731427 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099341789 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136259263 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086779087 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102133961 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138158879 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084452121 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113471383 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103179206 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145539972 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08466208 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178542002 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082776141 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129027241 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102433554 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118218273 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113207091 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101751105 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08741181 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099160631 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08008186 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167860212 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084720974 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100345498 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085339757 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115896288 seconds)
  done (took 22.849118762 seconds)
done (took 39.695832678 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338277882 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10854113 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107103227 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106619189 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105350134 seconds)
  done (took 1.517097947 seconds)
done (took 2.244558107 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285194059 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175415688 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096254512 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170448652 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077613514 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195620417 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16122775 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11167135 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.185869158 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094136409 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.167471931 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077544299 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095740652 seconds)
  done (took 2.648477867 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097055727 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118659789 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085416977 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115241982 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079154823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115227263 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094857059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122183074 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112642891 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087163108 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097033077 seconds)
  done (took 1.847829779 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096150937 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114333896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083312837 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111413423 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078796471 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114156848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094260377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120051844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112620568 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087971401 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097196158 seconds)
  done (took 1.833504052 seconds)
done (took 7.048688041 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092970018 seconds)
  done (took 0.81337732 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.027776544 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.23141202 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113967063 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.154775872 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.322474234 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.198005144 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.583449401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126247184 seconds)
  done (took 15.673376253 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.147845583 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088254577 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104545582 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086429831 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.108771826 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087263871 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106910776 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106934348 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087484657 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102218469 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0895927 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106428229 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105513741 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088224908 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102996061 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089735696 seconds)
  done (took 2.393438881 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122680677 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123257663 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.112288517 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11312063 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09029035 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110482365 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110564641 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092305623 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108315538 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107415064 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09504831 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111170832 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10816828 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083309621 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110432067 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112696916 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090740089 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111087004 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111228618 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09485253 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112151719 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100127694 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091162327 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111990064 seconds)
  done (took 3.371142165 seconds)
done (took 22.976179413 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164448961 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113587727 seconds)
  done (took 1.006373477 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098011924 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115732268 seconds)
  done (took 0.946375821 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101028222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09855187 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.129440093 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114227403 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083861229 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100167581 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124504528 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08383105 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101016362 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083579291 seconds)
  done (took 1.755500532 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086221085 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111230091 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103623055 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100418984 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109884179 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098494286 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09225673 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102615471 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113315223 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081461648 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106273687 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118670778 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090022779 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121148025 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.109322101 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087190095 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107832947 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102341544 seconds)
  done (took 2.578713229 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081520043 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098753389 seconds)
  done (took 0.915908652 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084332685 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098351984 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084689127 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102192793 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098271732 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08162646 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098140367 seconds)
  done (took 1.382718363 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483051287 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140403073 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263399605 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087498675 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127153408 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.318257254 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.1019406 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087995662 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108567262 seconds)
  done (took 2.512971042 seconds)
done (took 11.832841192 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095552085 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119990016 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116851621 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.484297604 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111381357 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098123553 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161084624 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.261327319 seconds)
done (took 2.188886659 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152480707 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328578502 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119148966 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07008517 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.101882984 seconds)
  done (took 1.363932344 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082566933 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102044322 seconds)
  done (took 0.92483001 seconds)
done (took 3.183094051 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08378216 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.135705981 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083094761 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.100682121 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080772757 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103922585 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080342723 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.100937368 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099771837 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084565793 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.099860516 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.084769824 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099765593 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082009254 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097975222 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084608127 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097263796 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081623594 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098045003 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084077962 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098214008 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084617968 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.099271364 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081223502 seconds)
  done (took 3.001514185 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103056608 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10207572 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106417345 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089754135 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105493821 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089948215 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107530982 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100459709 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090345341 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10307858 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103685468 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.088014876 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102709697 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087534179 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103643586 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10487046 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090467945 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1021413 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086147792 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105956631 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10661131 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084651153 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105453884 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106732599 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088042556 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105586758 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085810769 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101819891 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106808703 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087973088 seconds)
  done (took 3.69781493 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088359217 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095959533 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082644465 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.1062055 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081905847 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.10023913 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080851802 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099213336 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082489144 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099661106 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083197813 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.100609602 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08149085 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.101636773 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.099925432 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086048058 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112074688 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082663721 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098464021 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082603461 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102461354 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081090565 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099394073 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081399338 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099985389 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08069917 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099415912 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081786046 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099979988 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081647039 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102750478 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085211479 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.10065414 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106044861 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086632753 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.098356734 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.087013468 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.098424063 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083340394 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.098282348 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08259901 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.099461347 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08202055 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107087884 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081998076 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102657089 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.082977983 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101654829 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08217651 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103762861 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098251677 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083471527 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101282068 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084041626 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102995236 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081239233 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099723617 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081748132 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100428773 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081973113 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098391767 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081605659 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101949717 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082133624 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114607831 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105179379 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083206162 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100077046 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082871828 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100979876 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.084866273 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113103617 seconds)
  done (took 7.442613693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086168405 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110972386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084535919 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101687327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07982605 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100934579 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10336469 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082589041 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101607422 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0893686 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100665003 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082451322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102280799 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111758511 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083734184 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101111815 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090098681 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098707802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081871865 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103962267 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099835494 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087781484 seconds)
  done (took 2.835547313 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216481026 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108511416 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147070908 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112262249 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08688185 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111863072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106155454 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091666136 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106594281 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087790217 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105620634 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106336756 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088221278 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105477385 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104387381 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08977844 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106403758 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088946241 seconds)
  done (took 2.724666841 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096334863 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100613766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122556193 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085993331 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103066 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088479308 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109409785 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112617889 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088424658 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102084947 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095656886 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105621325 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104410708 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086128282 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105677391 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084363993 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105832203 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102163135 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094826008 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110597928 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108285151 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095219397 seconds)
  done (took 2.964728184 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099899496 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104030004 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123341467 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089067084 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098861706 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083710896 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110583523 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084597115 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112131156 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104408819 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085668929 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101279644 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091998405 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10298318 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108752176 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085567175 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105148383 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086359338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106187234 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080932408 seconds)
  done (took 2.72344725 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106163885 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104666672 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104245077 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097368004 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105151436 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085410705 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115702789 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104786788 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086661518 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131863526 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103833537 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085572078 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115291812 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111014295 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104625883 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096628188 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114974768 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115096743 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085825396 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104546271 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130706444 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197895717 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11629025 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105311484 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086330917 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105423129 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104651459 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093682626 seconds)
  done (took 3.778993375 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083918818 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101961175 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083591711 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100131452 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.083421732 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100698926 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083469272 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099922706 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085920317 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099875298 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085080781 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103099312 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084676066 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102928792 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085366354 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103707799 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087795161 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100962955 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082463989 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101575853 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084247252 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10397095 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084155047 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101211521 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081540381 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103166331 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08199778 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101716744 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102143269 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084137932 seconds)
  done (took 3.550171477 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094150449 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109080014 seconds)
  done (took 0.965904618 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081927303 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119304245 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081890436 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107765842 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107914464 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086767324 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112371624 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090913332 seconds)
  done (took 1.550616437 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09959311 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115205147 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086957437 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118771083 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.114372131 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099757921 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167006324 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105995344 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090795984 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102550006 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117187062 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08542137 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109583994 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086611365 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109219667 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092633194 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102334609 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091795758 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108055928 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10234137 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088130213 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11568972 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088391022 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101026692 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105462139 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097847146 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114506917 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086923317 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108414701 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113950911 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09179308 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097597242 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086624832 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104990398 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084568608 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11403 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117410227 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089946575 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113152279 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087089592 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118060671 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099332618 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092582227 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110220998 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095848002 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105782762 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105232412 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082151032 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101294517 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089006252 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099539066 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08653631 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098323698 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093342576 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109688248 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117430911 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085504009 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10504039 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089480716 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108742397 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091967819 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107584594 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106003895 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086096156 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111364916 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089725598 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11230393 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081441212 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098122734 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083177573 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113024411 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12789921 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094276896 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105746973 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105468792 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084497571 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107018682 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087404885 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113180527 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112704768 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08750903 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1135777 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094422913 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10503627 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106849557 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096612308 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102824084 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08963234 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102635299 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119472847 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085196545 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102665046 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083614348 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114457464 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089608346 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105408122 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082506261 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112920154 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.10044334 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088326128 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105341064 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087087413 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113979504 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110647533 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094153975 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11344841 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093779371 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10540132 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088466619 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.102944843 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105912582 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089100014 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11088393 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080476187 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108308099 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088037448 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106976542 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11184028 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085518127 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105161258 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09510689 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112404525 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083809446 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.10227455 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10714852 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087048705 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108631722 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093479718 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104914912 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080890704 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100410923 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108135158 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087240772 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109479029 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093038134 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109806807 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07982433 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103555194 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10940979 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093930409 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106215391 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087002843 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110081005 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087060108 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105222437 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11057043 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08953326 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104319733 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091183249 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107874909 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.082127828 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110023314 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106716176 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086022357 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108735562 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092060837 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10777146 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086244542 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105056883 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110904567 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088667688 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104319014 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085823965 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104304613 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095123235 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10899858 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100228485 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.084016609 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.1136437 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084155818 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10559405 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084665049 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107929817 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087506398 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104674382 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103981568 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089252739 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119172151 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09086387 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109547461 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110755364 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096610352 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105281277 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088064007 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105741518 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105132857 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089469757 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112050704 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09211568 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111822279 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08903842 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.103186182 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111472024 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095193092 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103979668 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084352738 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105070641 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090439928 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113045061 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.109046032 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.089290259 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103676248 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086154832 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111599931 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106794491 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087644286 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103417833 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093204669 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105345613 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09326859 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108050896 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114542829 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090173371 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.101477042 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090003811 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103809349 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111079546 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082336713 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102852312 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087268472 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106266736 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086245747 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108118209 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.08028894 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113957685 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113586829 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087178754 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104373698 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08804639 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114794443 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087697106 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109877943 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089663917 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.11261109 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11900289 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085849326 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109708215 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095207428 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108452733 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098433546 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092863862 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104445802 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085364255 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104561027 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084206494 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110372119 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115832033 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092647312 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099693446 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089205608 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104527462 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085936255 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102176472 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093255205 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111360122 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107123501 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096656275 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107683461 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087520199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110513281 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105736416 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088874146 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108155046 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090344286 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107324828 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088869598 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105827063 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107396622 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087058444 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104273265 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088917007 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106933279 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087083488 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112411396 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.088199084 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107207531 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.108623069 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089120491 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106694879 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08866564 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106152793 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091449147 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107505631 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086327934 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109419796 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101281009 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095445511 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105897254 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095370297 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107311043 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083704712 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113511742 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108209219 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.094665053 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10775044 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088324268 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108055669 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086396534 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109628023 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114468354 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085086686 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115401984 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092325502 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107718579 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107776822 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087903816 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107253135 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087396378 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108625436 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088921535 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106804583 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087261675 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112456165 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108926032 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087441074 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108185643 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090067899 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105738662 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088810972 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101385513 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086179933 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106998501 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087108948 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115900112 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107416529 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091343153 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105438993 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088802998 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106653461 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083288248 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.116554869 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116729623 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087545636 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116014902 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105379452 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089455785 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116515092 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081787791 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105785037 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085528907 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.105656983 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094986624 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109889141 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114280635 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088400511 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105504129 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084377283 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107918051 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086119907 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101661958 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085271278 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110687619 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10828232 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087652905 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106939796 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090942073 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108458909 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095412369 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107064881 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08860423 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108001592 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103788296 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087544445 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105162849 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09065719 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108390852 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084631955 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104242673 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087114988 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.117931617 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087002822 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.1078372 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108493903 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094145242 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103804707 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089592408 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11114567 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080524373 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111212187 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106373415 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088307078 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106155432 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091872529 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111546519 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089095496 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115401249 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10670843 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088706401 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108222959 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086147792 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.108349274 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087432642 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109409761 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085728318 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109839877 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114754705 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086209611 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109478699 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087167376 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108424458 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091919422 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10974111 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108767791 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097199218 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110385686 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08883902 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114880469 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.111425414 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092202603 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10970368 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088765586 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113655786 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085377047 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116533168 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107222562 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089830626 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109010573 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085152526 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106651464 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088133851 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107306234 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091812233 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.1093278 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.106159745 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08746543 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104749926 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09027315 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111631944 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094914011 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111295102 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110181067 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083204738 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103421343 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090022709 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104823286 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09003494 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110616961 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093994903 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112414005 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107812251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088491449 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115166049 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0946993 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112854866 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085363216 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113757005 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108901471 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090854686 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109336393 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087881722 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109995952 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092829651 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110717379 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106189277 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095297726 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11007268 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089140617 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110138477 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087394931 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10862773 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102327162 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090967489 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109271452 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094232757 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110972926 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088008463 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118001038 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106605221 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088429049 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11276951 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087561306 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115471856 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082449536 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109025403 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109233832 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090454832 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103551882 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087571943 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105596591 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090924827 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106561583 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082884408 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118747047 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114574071 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091613659 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106473681 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087672168 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103666432 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083441459 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107643464 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088798083 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111160253 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116202452 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087763881 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106548817 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08334196 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108103584 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091757416 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112078284 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084371384 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10460216 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106065139 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091841436 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114606028 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08685153 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108082787 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090913563 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.111104848 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086189663 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114298102 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.10400924 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093053988 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119643034 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088746599 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109127331 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113791053 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097622055 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.109678607 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083730153 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110397817 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08962786 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.109087432 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108835078 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090887887 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122939836 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091928481 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.108319442 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087195491 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111861532 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107218347 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096621621 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107479066 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089428454 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110746401 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087997969 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116520914 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106867863 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090459816 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107767801 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086305548 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104892184 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104267921 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084268186 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102929073 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087582762 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106904309 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092669683 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.117929109 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107721839 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098484513 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11769682 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.09229505 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105838664 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08757948 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109091629 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103136256 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092021286 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107285905 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087263258 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.107405035 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087442098 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109217436 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094000174 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110967077 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108956413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089319228 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.10200823 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090117146 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111295543 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090351547 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105963779 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089237899 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111230832 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113999227 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098120551 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109226106 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090997247 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110169958 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088809744 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.105052837 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094256489 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108697951 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110456195 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089712167 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109094512 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090649391 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11259534 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095435095 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111542148 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111385191 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101500843 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111810995 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085094504 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.106121247 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093137431 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108516647 seconds)
  done (took 60.629604932 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149944199 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082172102 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100158705 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083262399 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120575098 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105883566 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085781969 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10533846 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08608248 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108092285 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083642588 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105440362 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114441818 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132503411 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099446031 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110229136 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1026045 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086794014 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103458655 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08533098 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116174559 seconds)
  done (took 2.98479912 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108368524 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119299229 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117631618 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121810917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091902452 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117428613 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11634874 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116799414 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102285303 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113074341 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121259408 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116796786 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093572527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112730685 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111252046 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09588696 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122429886 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112257421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121473536 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100015718 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117320835 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119584146 seconds)
  done (took 3.284862522 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086720105 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103355042 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087101116 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099098494 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085361014 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099854642 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088999198 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103389454 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090631946 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106834074 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105956063 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.087979783 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110092748 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084677633 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107823274 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086230281 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.160172546 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114059271 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086896908 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111765074 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.104306663 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091715971 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.103998936 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084765566 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107317979 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093930356 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11071263 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085635748 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108627402 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084855573 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10588835 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101891336 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087310738 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104059716 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084055987 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102880908 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085383893 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105228973 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082559866 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.107427606 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089041735 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104931135 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087668479 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111333448 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.106592525 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08801248 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109848863 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088998872 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.104151984 seconds)
  done (took 5.657410715 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.109341408 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164159312 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089289822 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150832001 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127495038 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118278126 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092719626 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150148294 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10878451 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087478801 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.131309055 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125301465 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106260903 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091766021 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110884063 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10919198 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092693387 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108798823 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093704671 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111110335 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114559845 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094253926 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126725435 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124966076 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11096315 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084784043 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105762104 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110586884 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101340162 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112890858 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111731371 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092106853 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122967017 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111594336 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085241147 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109984172 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124012135 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105317671 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090263209 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105207042 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090889929 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117744876 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117126096 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107311601 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.113040613 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115934221 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08913735 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107695002 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124420692 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.093433434 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120207247 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127136944 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114153265 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089144019 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116627495 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125575358 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087226964 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104094964 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090317355 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121116651 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104944406 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090050623 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12243447 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108642296 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113313485 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102445487 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111814015 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110300279 seconds)
  done (took 8.419632874 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097052593 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113873312 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123050061 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123186191 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095134571 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11482533 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112581375 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092949351 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112935742 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118759363 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113301869 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137810816 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087591923 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11930486 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116143222 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096833985 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118568846 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118438491 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096057516 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118919727 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118267034 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128202047 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096494934 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128135111 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147895939 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107182019 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093733486 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114029939 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125473721 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113436184 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127262766 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093389562 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114364923 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124756787 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126270281 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093508402 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106343036 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114132342 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0945613 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114477918 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108228551 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102896504 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11383423 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108609217 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092332468 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113409896 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125337 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126539166 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115838186 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100910003 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114810094 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125457928 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113293199 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094223643 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126429213 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150436733 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124245792 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124742743 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113260562 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103056949 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124461505 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13143051 seconds)
  done (took 7.889776098 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111261726 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116843055 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121040763 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101447571 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085596491 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111778179 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084358321 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104238877 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11552828 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095994113 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120632449 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111163079 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113339429 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101155402 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111196558 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115170068 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091255103 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113234335 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120653572 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114383392 seconds)
  done (took 2.989739832 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095771991 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127776368 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087062092 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116092752 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109952865 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09223126 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110160966 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108632805 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088246393 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110034302 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0977565 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119656823 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10805375 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093784354 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120323286 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11550581 seconds)
  done (took 2.530744346 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099562234 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120422722 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122505016 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085509733 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106957767 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10246845 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087616032 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102177802 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082526755 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125448222 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08740113 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114321803 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111332014 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088836062 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108433462 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094729753 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108801089 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087554732 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112989956 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.129768978 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101558732 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111327511 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112567612 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093254621 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.11270518 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095389633 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.114841804 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.109176501 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089801448 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113046087 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090515641 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.121137721 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107797234 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088666442 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108033672 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084678596 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108411194 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087474077 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111455809 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106239057 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086088564 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106925817 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086036896 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108836822 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101425091 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089134048 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103289159 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09383855 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106228084 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085930634 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109089092 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109751609 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088590658 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119246214 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109440702 seconds)
  done (took 6.484735874 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102284041 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11175614 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081260196 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105757771 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090283622 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113558902 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115387718 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095089878 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113144256 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089359298 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11518454 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095273645 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115076396 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114215837 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089957627 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110817404 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081614114 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109495633 seconds)
  done (took 2.685172024 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093754926 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106883437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095552244 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108270628 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085990921 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110978168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082359983 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106915484 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105305449 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088094355 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107003225 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088942227 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105777863 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088696168 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108197877 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086481353 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109807942 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105773394 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087214099 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102875768 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090236507 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105967862 seconds)
  done (took 3.0092688 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12097922 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127485117 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092830207 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232375304 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106188851 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135254149 seconds)
  done (took 1.654947276 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112110878 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124029406 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107702355 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10989395 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117896052 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109209862 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090339831 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110019157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121137926 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10440355 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111536111 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120690982 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119998753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098950044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117650187 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117245343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109859582 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090216118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10928191 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133583505 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091039946 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122120247 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112961435 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092301215 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116344183 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126089541 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124387123 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129589843 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093982743 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126578678 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12041387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09380999 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126781777 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130256466 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115226468 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104821771 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116395872 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136030344 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122176377 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105164656 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117052599 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123113516 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104713626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122590723 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126792353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11448877 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098002474 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115221109 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11535388 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142952747 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097292042 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12440784 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120994776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122571062 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125308237 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141759323 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104801481 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120140695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117937253 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125585506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120845382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098845932 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12171111 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127147139 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117030518 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119907499 seconds)
  done (took 8.472741826 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105905368 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128334859 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110015754 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12534855 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101382295 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111172267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110590797 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089646247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110931297 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109029259 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15641041 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090884416 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120918631 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12096329 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109052584 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090239175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110794691 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119914048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089368221 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139680793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111676516 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122387464 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120855097 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100245535 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126413182 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117516063 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109985264 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090003269 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111548266 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109966766 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09647901 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111294947 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121858389 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08869326 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121918007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111574317 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089215137 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118071496 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111981519 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117456283 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098531167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131541774 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112160361 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110474731 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105041535 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111696117 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114845011 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092640388 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117352616 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114294794 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109065729 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132018125 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130060009 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125697222 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11669061 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094496138 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117505805 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115748105 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090978621 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118910258 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12132052 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08889222 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159716984 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091470293 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111331777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120558599 seconds)
  done (took 8.259862779 seconds)
done (took 160.928853084 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100631322 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138311582 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100781323 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174929439 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107980976 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121348471 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140467573 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100028221 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109515171 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086720723 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109036187 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088152522 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173872827 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107602746 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088661089 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110064588 seconds)
  done (took 2.70458892 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203178336 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.260167503 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103967681 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108358831 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090884414 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112085695 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106087991 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093012967 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.11220842 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087722203 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112091223 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08726475 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.109871427 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087576733 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112797373 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088630194 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110282826 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109455575 seconds)
  done (took 2.946428758 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116636575 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149997836 seconds)
  done (took 1.119357048 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12207043 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184443435 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302010415 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157085308 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121013916 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129945456 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158471723 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132661231 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200886749 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12668618 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125384436 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099586968 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144822592 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119479072 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095546768 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121418775 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144984114 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093733513 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119042319 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119570906 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117716949 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109511028 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117830056 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094628971 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185437431 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122987554 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107227486 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088766825 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119158463 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096132035 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115313114 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127935315 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099949216 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183610867 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124384782 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.164605457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098805666 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115245375 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116939456 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092742727 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121888766 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121316505 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105999106 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121591321 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.109875776 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099555906 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108603876 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086011513 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118146528 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122424436 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094968505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116100775 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161785341 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121894175 seconds)
  done (took 7.680020881 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.814095653 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157130658 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091322925 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.915289751 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146715524 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10724928 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.802973227 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138657995 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24120771 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768867069 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134128835 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124079217 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235508007 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.244351741 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9590479 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318457913 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.689746555 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132126645 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123596659 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16485191 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122472901 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13976853 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130910823 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.433455596 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095039026 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115346071 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122244457 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103680925 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169760222 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115013534 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114745594 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185169576 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252724696 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211485617 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117843202 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092300578 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118813056 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.179881554 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277420518 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221696422 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184104266 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08865493 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11142671 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101108655 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132323976 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108631418 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169045133 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177998416 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.197905909 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094051178 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122374702 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122074852 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100321321 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189842046 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103925298 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326335478 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330257257 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112629127 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099596731 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129786615 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274363208 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124173778 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.21077093 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138974629 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219312273 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09099656 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830309759 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172061343 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114175372 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119153347 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097229272 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11854787 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122026147 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170842137 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395719847 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102420718 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117519744 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112000174 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216641637 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.112712995 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091593234 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166171982 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117971733 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120264224 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103298776 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123499403 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175416912 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258668476 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101478954 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121709996 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11752808 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101846176 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117254192 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21881613 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228244658 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165194196 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.240637164 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100821624 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.192764455 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17368899 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12187961 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179015181 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119837616 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104559978 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123625483 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224455469 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149566058 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126728022 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094508539 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119710263 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152615057 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115670819 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097893431 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195814682 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.467135372 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172325683 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111216667 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093294147 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120590533 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166362351 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119739847 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266586468 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098788874 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.198191001 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097831958 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111972705 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118833344 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170052762 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123825831 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09951884 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124373432 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119208319 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.241339044 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225632438 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103743448 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251854604 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188342271 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120239741 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177567651 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121116226 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172262854 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121684744 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10019454 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119204698 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824021688 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103139269 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120311865 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117277943 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19056574 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091442508 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12660241 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090579116 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110271597 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8081296 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093815216 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.124841981 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126731795 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098923721 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120955374 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118368096 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095378644 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18826295 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236002967 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101098935 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120019524 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090832964 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18564022 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095910491 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113639273 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091318771 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114977254 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119648194 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09556225 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128564116 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175101155 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166284983 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226904779 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.603370911 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090352817 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114568074 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236749964 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090491804 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298326166 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121068609 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.2326619 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169915044 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12499577 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327723836 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.171739282 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.192852072 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11576883 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.178665625 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087271759 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122311931 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16823016 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114416867 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118659842 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167923904 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126258884 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10193361 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.98485075 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113092194 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232456374 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088067675 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.20037821 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095204676 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124420316 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302453133 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090519037 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130301183 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.192683728 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095854658 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114136597 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.725734224 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114223355 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10108303 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120983821 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23087417 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168564331 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120062232 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119020918 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101744698 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.189992908 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.215874058 seconds)
  done (took 44.704223524 seconds)
done (took 60.004251139 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279845744 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216394025 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262381005 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174503555 seconds)
  done (took 1.88903558 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17464062 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152406124 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121714101 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110902561 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15260602 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085988508 seconds)
  done (took 1.67862454 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365527447 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278751772 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245560444 seconds)
  done (took 1.773450016 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.243388561 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.265170538 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.323678838 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.416958038 seconds)
  done (took 2.227688796 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.204735749 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133539045 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112367555 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106642143 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199333655 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242335472 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144041059 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.169063825 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.125446535 seconds)
  done (took 2.365070383 seconds)
done (took 10.820290524 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.205164476 seconds)
    (2/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.17129161 seconds)
    (3/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238132914 seconds)
    (4/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.262504867 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124257238 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.252833993 seconds)
    (7/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094660689 seconds)
    (8/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.185471178 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129956498 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102736213 seconds)
    (11/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.123770104 seconds)
    (12/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.257226496 seconds)
    (13/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.224777647 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09549428 seconds)
    (15/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.201615513 seconds)
    (16/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.238985569 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.208864203 seconds)
    (18/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.130802661 seconds)
    (19/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12732615 seconds)
    (20/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066671443 seconds)
    (21/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119784361 seconds)
    (22/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115124886 seconds)
    (23/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0977955 seconds)
    (24/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175587182 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.228031193 seconds)
    (26/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.199328925 seconds)
    (27/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.134534375 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122086715 seconds)
    (29/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.207482226 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.153738603 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.118375137 seconds)
    (32/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118227175 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.208907163 seconds)
    (34/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161661418 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.242250646 seconds)
    (36/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.253843205 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.12299292 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094057776 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.187575342 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121130327 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171115679 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096969954 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135024802 seconds)
    (44/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.161661261 seconds)
    (45/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.173111121 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104129578 seconds)
    (47/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090940599 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09250596 seconds)
    (49/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.143764587 seconds)
    (50/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094315015 seconds)
    (51/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.173196976 seconds)
    (52/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097404033 seconds)
    (53/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.128262162 seconds)
    (54/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125193784 seconds)
    (55/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.078986354 seconds)
    (56/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099521519 seconds)
    (57/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091865219 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093092519 seconds)
    (59/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122987759 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086548432 seconds)
    (61/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.122512361 seconds)
    (62/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068978106 seconds)
    (63/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140691698 seconds)
    (64/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.11212803 seconds)
    (65/286) benchmarking ("sort", Int64, false)...
    done (took 0.090016158 seconds)
    (66/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150307324 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199592179 seconds)
    (68/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.152463393 seconds)
    (69/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.09409171 seconds)
    (70/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069294861 seconds)
    (71/286) benchmarking ("sort", Float64, true)...
    done (took 0.235912427 seconds)
    (72/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186376451 seconds)
    (73/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149399201 seconds)
    (74/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.204952798 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137255484 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167838834 seconds)
    (77/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102284798 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186525039 seconds)
    (79/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.166081191 seconds)
    (80/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083171851 seconds)
    (81/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.187466038 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111756233 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116747461 seconds)
    (84/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093118491 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069433817 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.149876167 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069005101 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.138731224 seconds)
    (89/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124639928 seconds)
    (90/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.152653974 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.113563276 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136563696 seconds)
    (93/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095028335 seconds)
    (94/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.121661018 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141666195 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195437928 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.121821109 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117513685 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102799925 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122052098 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088364863 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.129544781 seconds)
    (103/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068882114 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.118041094 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089730149 seconds)
    (106/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.220430411 seconds)
    (107/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.122534736 seconds)
    (108/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076785727 seconds)
    (109/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090457511 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099509854 seconds)
    (111/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112433096 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.185171563 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098370231 seconds)
    (114/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.160607458 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118964093 seconds)
    (116/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068995618 seconds)
    (117/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09446442 seconds)
    (118/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112901904 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110375253 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095201162 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118449935 seconds)
    (122/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101832591 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.093414546 seconds)
    (124/286) benchmarking ("sort", Float32, false)...
    done (took 0.152696475 seconds)
    (125/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119835622 seconds)
    (126/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078722065 seconds)
    (127/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116022095 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088735638 seconds)
    (129/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.09144037 seconds)
    (130/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.143761371 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.121544574 seconds)
    (132/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067222865 seconds)
    (133/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.111546808 seconds)
    (134/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136217879 seconds)
    (135/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.150299882 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110962519 seconds)
    (137/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069714517 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117530237 seconds)
    (139/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148078588 seconds)
    (140/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100839435 seconds)
    (141/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101814897 seconds)
    (142/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197536881 seconds)
    (143/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.167356129 seconds)
    (144/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092418693 seconds)
    (145/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.154006673 seconds)
    (146/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134381265 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123047337 seconds)
    (148/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192237931 seconds)
    (149/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094084107 seconds)
    (150/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118237131 seconds)
    (151/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090440318 seconds)
    (152/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.133889875 seconds)
    (153/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068181702 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.126078167 seconds)
    (155/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.207814605 seconds)
    (156/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.071940811 seconds)
    (157/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090228094 seconds)
    (158/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.094167616 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068601735 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.131087629 seconds)
    (161/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137582406 seconds)
    (162/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.154199819 seconds)
    (163/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.109157712 seconds)
    (164/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.068733365 seconds)
    (165/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186510225 seconds)
    (166/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068837519 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117284074 seconds)
    (168/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092346423 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128005746 seconds)
    (170/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06894005 seconds)
    (171/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068850041 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.139046131 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121776257 seconds)
    (174/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08773885 seconds)
    (175/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091947473 seconds)
    (176/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100046691 seconds)
    (177/286) benchmarking ("sort", Float64, false)...
    done (took 0.174407474 seconds)
    (178/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.152486898 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080489865 seconds)
    (180/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095806921 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 0.227705037 seconds)
    (182/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.115936227 seconds)
    (183/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067670241 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11212971 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087518804 seconds)
    (186/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.092706851 seconds)
    (187/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114286341 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114349866 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097442884 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121055946 seconds)
    (191/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111572839 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090462652 seconds)
    (193/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068001523 seconds)
    (194/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.114559238 seconds)
    (195/286) benchmarking ("sort", Int8, true)...
    done (took 0.227508447 seconds)
    (196/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.237853414 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176142507 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.142097413 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.121193293 seconds)
    (200/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079095588 seconds)
    (201/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.15379477 seconds)
    (202/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086455343 seconds)
    (203/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114152837 seconds)
    (204/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.077528569 seconds)
    (205/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.093238624 seconds)
    (206/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067745373 seconds)
    (207/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124008489 seconds)
    (208/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06831978 seconds)
    (209/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190125874 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 0.225075424 seconds)
    (211/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068176685 seconds)
    (212/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.092418014 seconds)
    (213/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.133248235 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.353320269 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08675424 seconds)
    (216/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.093628448 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089084757 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113549219 seconds)
    (219/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13639019 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097043142 seconds)
    (221/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067751362 seconds)
    (222/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.12225378 seconds)
    (223/286) benchmarking ("sort", Float32, true)...
    done (took 0.234605953 seconds)
    (224/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.071444765 seconds)
    (225/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.092148705 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.102106539 seconds)
    (227/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116139955 seconds)
    (228/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.116587717 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138736915 seconds)
    (230/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116332422 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089253611 seconds)
    (232/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120401875 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.117186976 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112097063 seconds)
    (235/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067890882 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118089724 seconds)
    (237/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.068919452 seconds)
    (238/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084482768 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184563914 seconds)
    (240/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122165185 seconds)
    (241/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158451602 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121285917 seconds)
    (243/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094152288 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122247142 seconds)
    (245/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067999147 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092465109 seconds)
    (247/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068840479 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067779962 seconds)
    (249/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092740952 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111557023 seconds)
    (251/286) benchmarking ("sort", Int8, false)...
    done (took 0.216429182 seconds)
    (252/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068764262 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087512119 seconds)
    (254/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.156684174 seconds)
    (255/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110299314 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.069736658 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087428007 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120884207 seconds)
    (259/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088806075 seconds)
    (260/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113009335 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10942325 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.115792945 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110160636 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088812022 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111085936 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09673465 seconds)
    (267/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112902306 seconds)
    (268/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090973254 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.115770069 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086712832 seconds)
    (271/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.092706829 seconds)
    (272/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.11308286 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119229194 seconds)
    (274/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067422303 seconds)
    (275/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091141076 seconds)
    (276/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069209513 seconds)
    (277/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137975141 seconds)
    (278/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.06878395 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110220166 seconds)
    (280/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112907666 seconds)
    (281/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092970123 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095949269 seconds)
    (283/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119795894 seconds)
    (284/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069444995 seconds)
    (285/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111660664 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088568791 seconds)
  done (took 36.677813064 seconds)
done (took 37.564303049 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102440744 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150705863 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097106294 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138065469 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125567433 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092250691 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120790081 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099142947 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12625921 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127871887 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099834073 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095728946 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099360323 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123474677 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097166663 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14190067 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125898905 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095240256 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121588867 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086129619 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121822593 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.109465316 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.090770251 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070124839 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.125023205 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094854361 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11949981 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122772956 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088627771 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112038508 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094868299 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120266892 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087699647 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126556631 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094099978 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121409114 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122101424 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098741824 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114023478 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088493909 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.12086415 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088660701 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120030314 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096298776 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119357577 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093768662 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.12225111 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124944137 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118493406 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118931057 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097324525 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.125362482 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.098749557 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120762933 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115489371 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098122749 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118161031 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117152766 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122370995 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092940534 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.12150747 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.118704423 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094606601 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120388797 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097274759 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123875762 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09823959 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119270071 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097142311 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11931494 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.111222624 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09822188 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115242244 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088098837 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121589449 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099361403 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.11126467 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094238415 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119427135 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092709483 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113007956 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09029789 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.116029033 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093894845 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115746472 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070581703 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11670709 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093710275 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112611 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096979908 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.120178758 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094678093 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115846258 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12447161 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089446222 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118025527 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089170243 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112666288 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091092298 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116898091 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088154811 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115821287 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097746229 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.11510694 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094457822 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126157412 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087351998 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11985599 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086818272 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.113127319 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.127329258 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100170989 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112987231 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093707108 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.112090388 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095285952 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112985158 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.088668477 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.114095792 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087940145 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120324195 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088367385 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116537129 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09476088 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128007226 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111353285 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.093820847 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114866583 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090472351 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.119776294 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.0897651 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.112823272 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091116433 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.103246852 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09236344 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111267611 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096775747 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115191584 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097747215 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114983813 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097458583 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118507434 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094645585 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119881906 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087698733 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.101292443 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093653544 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116609326 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090936038 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.114430912 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.090192993 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113488921 seconds)
done (took 17.244245122 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090296972 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186963966 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154996836 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144197917 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109377218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114670626 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123496691 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120870565 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116225031 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146194616 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112094874 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134877016 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150770066 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088323211 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115717012 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092850529 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11674331 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.127071312 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124195234 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136010094 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16763647 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087365809 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149898925 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138919127 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122923943 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116163483 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114968629 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092043898 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.118329424 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128926654 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111141116 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116878042 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089778228 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136505167 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105665251 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122334407 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11263632 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.098046885 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113646115 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089898882 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143209561 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135537966 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094450581 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120694837 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092458054 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117793232 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089904267 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124340425 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124184964 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.094416192 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129129929 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160165237 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092150444 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125025932 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.112706505 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100759138 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125078797 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090611986 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.115455884 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091904311 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115007169 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092105205 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13069541 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144849759 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116911834 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.099996948 seconds)
  done (took 8.75248878 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107542821 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141706897 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106848274 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.133907501 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113869329 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090984168 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114732242 seconds)
  done (took 1.760480624 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091844464 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136107626 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11325731 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138810971 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133771512 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.114221392 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126335469 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09040554 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13664245 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090662955 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137343884 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152454049 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09088238 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123805148 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141216613 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090019633 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139938747 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089596556 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119538579 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138549259 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095014132 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.138841772 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092239924 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116563847 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103722242 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116502477 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165798133 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094980251 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117927934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.094148437 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114440597 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154593914 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105010218 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128538528 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090055861 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133306004 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129431266 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090046559 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128118385 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095798425 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130177646 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09007133 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117366385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111865943 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096733025 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125494418 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095750727 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.133905953 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094786345 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136595625 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091516665 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130414459 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090090399 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120432451 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115532641 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097298679 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125093424 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091753873 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135986132 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09197284 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133736792 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132375644 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105748347 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133201995 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09234116 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130632875 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129325466 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.094213538 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11696211 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095255733 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133186764 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088527233 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117408182 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101371237 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119590679 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.13859505 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.116115756 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117889307 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101385506 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11685066 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090797772 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11735907 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113584228 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122020281 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115341585 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095726976 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118749774 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090572961 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114218135 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094915591 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113377441 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092719298 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119221097 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091490235 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118416536 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106519128 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118112098 seconds)
  done (took 12.01991666 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09330003 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116245842 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095519887 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117330631 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093063531 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117484557 seconds)
  done (took 1.597423836 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119277775 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120628369 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105778012 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124272003 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159386718 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.131276931 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107661912 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126990349 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109753786 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12953634 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130813201 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106820707 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138865956 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123395484 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106530218 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12342414 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131167813 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102632461 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130187113 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098142944 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13977988 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123034124 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099414287 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135413897 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119563024 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09900569 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130663162 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103725073 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130772646 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126735326 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098520608 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121166983 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122333581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101213916 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132999533 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096196516 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123244545 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120228318 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103130746 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120612282 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.131829531 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099792864 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129082349 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096330818 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127378482 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123499779 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095506014 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127741786 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130346716 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095950455 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120458671 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096795727 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121890675 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120261257 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100048292 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127142865 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094932482 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135216326 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125014458 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098893415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.123495002 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120297155 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100979006 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121594739 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107239316 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122665872 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123958461 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099053937 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124570099 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097122325 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122991046 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120289523 seconds)
  done (took 9.420767474 seconds)
done (took 34.490366787 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687911666 seconds)
  done (took 1.647881091 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.827887637 seconds)
  done (took 1.789857353 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.040524606 seconds)
  done (took 18.029621245 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.501619464 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.604209969 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999918774 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17534726 seconds)
  done (took 3.243957087 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951469414 seconds)
  done (took 1.934939392 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28696049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238299806 seconds)
  done (took 1.493216329 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771391033 seconds)
  done (took 1.75096486 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.449955197 seconds)
  done (took 2.417848018 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327153961 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186369089 seconds)
  done (took 1.492856084 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56320206 seconds)
  done (took 1.539013885 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.667948195 seconds)
  done (took 11.650120216 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.27150358 seconds)
  done (took 1.262401446 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307398828 seconds)
  done (took 1.288687314 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.516692357 seconds)
  done (took 4.497366946 seconds)
done (took 55.006900588 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101149159 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128912023 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10453 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125823572 seconds)
  done (took 1.435389669 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103993126 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122810013 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102601645 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123495025 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128659237 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099370325 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125005717 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103000668 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.124199287 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098523292 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125427364 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12134717 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101322214 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12504883 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094688612 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126791456 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126880722 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098325421 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126966257 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097931778 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122283949 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100088315 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128064166 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121745434 seconds)
  done (took 3.732317435 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102950417 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121000699 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099194091 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120941602 seconds)
  done (took 1.430584512 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103136549 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133145248 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107980569 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129623987 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133682008 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109131435 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119833811 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095448403 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121675927 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102137151 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.119311399 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142781359 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.10915738 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127361365 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104599823 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116503825 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092458609 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134286081 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12748357 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104659021 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120605287 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101597753 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117996306 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.111396922 seconds)
  done (took 3.774943636 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175072427 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131156117 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140673678 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097383002 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16315066 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143499522 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091159111 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14362793 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090244769 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13371874 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11979384 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136801159 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130981156 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089083296 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117041437 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088961971 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130468344 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128853249 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092832622 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130112511 seconds)
  done (took 3.469603246 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101432324 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118958609 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090858467 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117842084 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101185302 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123321715 seconds)
  done (took 1.646567421 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09368736 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115687016 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092103956 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116252352 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096948378 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116520705 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091507001 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11688431 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093050938 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116736758 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090571425 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115815768 seconds)
  done (took 2.249059235 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.51079328 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123408643 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.123101059 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091897216 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123669619 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092023516 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131456017 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093987687 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143560139 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089798555 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118307617 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.118273401 seconds)
  done (took 2.754123441 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225670733 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127620161 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251772858 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375810703 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158718247 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167802124 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286371317 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160918894 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223476666 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154059727 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199812814 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181598092 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155720333 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19553861 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141497882 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.147920473 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193619734 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257426884 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156147708 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216596144 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19781318 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14431797 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209925408 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126726426 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140676226 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165641875 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123640608 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131901914 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190719173 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179181613 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189005304 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165196251 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14962326 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232043284 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235257344 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195875526 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284339338 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137907778 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142611646 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171487716 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262947613 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140791974 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208378241 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159310191 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133567456 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201622106 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161485889 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177325278 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15031106 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14232798 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227590685 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200469621 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19102674 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141864304 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304236482 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15340087 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164100938 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192646045 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239892665 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202757252 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222509157 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097682929 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218331101 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19757023 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188930888 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.156936554 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18084414 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152190307 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176717453 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220112337 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171863136 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17460266 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185634269 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140585131 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172761793 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174090262 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172874368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264602027 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216565155 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098573139 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170753264 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152098534 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133752544 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197795554 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102257779 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245160446 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118732179 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166786549 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241578808 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162466925 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162920492 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190476715 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179989025 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152082096 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085135409 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156758504 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157432693 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177056745 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142327079 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160804239 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154024628 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106484778 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17321828 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127081195 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187714935 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.120346759 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170294548 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189669343 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129900326 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165389636 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126414692 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155072336 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180552401 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228427451 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143012353 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109631073 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240269092 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185731607 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145394476 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181843254 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201944363 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147682844 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152560723 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203299949 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249430015 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143012556 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206231682 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150332092 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138126789 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107840093 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210832729 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131300803 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164880433 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137046456 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186974121 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23259726 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101095739 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141122542 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200613289 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136543287 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135691909 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149012834 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14921717 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.114100412 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145554352 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148036534 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180511262 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182081224 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156768352 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16690963 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150440883 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237980792 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141727355 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.128623271 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1522965 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123525118 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19204153 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202634958 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133340137 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207863211 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198636473 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203605296 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173387022 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138180362 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180691275 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105146028 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124271998 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19606316 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168580677 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163239736 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.228114529 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199343711 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179852492 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.215312612 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169810332 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176905019 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170119212 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157855645 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112431288 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165051614 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160340106 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.127126999 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144144182 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109083923 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1531239 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145487624 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136309981 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19762276 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172572075 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220283575 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164418044 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151592387 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184296848 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104784975 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204007658 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179911807 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147981905 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201451735 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197989133 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219154924 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120311549 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233988148 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095252686 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128627145 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145929722 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172241977 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109302488 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138288566 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166682003 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184845391 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205766716 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17517064 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210880179 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175790688 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223043264 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097385058 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171178024 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180038863 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181325633 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18263379 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145108716 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124809594 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18026504 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152905346 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241968523 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170420839 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179143443 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230257764 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12683123 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135059361 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153078098 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176479816 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158020993 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17716633 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148206253 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139493697 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128216825 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13380391 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16363717 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180679137 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1650391 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211120362 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150748938 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190274264 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130683718 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166636334 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164133638 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165722044 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083145256 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172420949 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196702766 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146410794 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163544327 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185015531 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134966423 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311473193 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231416358 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191485205 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140481107 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158124946 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164098652 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137275957 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16624119 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181352419 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161266751 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218842809 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160603361 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111647551 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140425062 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151468538 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155646444 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107064622 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14936942 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180804676 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14197982 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185061859 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150203233 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162018591 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175543792 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154085763 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147139671 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126861691 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248931338 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186597466 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221591754 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125447111 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178942711 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237799176 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127375813 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109018373 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135057513 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183449455 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138669602 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196567036 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191993938 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230815812 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187637096 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175584513 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141853957 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093807886 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160834231 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171379485 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234432542 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148515747 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152010594 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200386805 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139891645 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106364394 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169047515 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315520485 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122122458 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217634891 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081291855 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285475359 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128822804 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108176766 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165136612 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213432921 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112094435 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181152248 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174061053 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155030231 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166999523 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152750554 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195639666 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215426523 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23437737 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184623743 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137185507 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161176041 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17153584 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188178123 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161410807 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14112997 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190476323 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197909672 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197056712 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.146507254 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17137796 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171726056 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161347529 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222214444 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109720384 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240823445 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136458315 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196702777 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156640385 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142384648 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177469933 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192497672 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144667096 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184475505 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214408251 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110828363 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136474971 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163664184 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181607766 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152036008 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129355794 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180950108 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099217335 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227919948 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267912777 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108570432 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157908676 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148958202 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13986229 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158495007 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161585019 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112563131 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167768353 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199025173 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137697606 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18844842 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23626165 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172680398 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169250716 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147458109 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690846603 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105817073 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226079594 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121952817 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212243965 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124311763 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175143126 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162642159 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171979852 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228403363 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159348226 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233304292 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195888606 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182834113 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135525188 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16262708 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150891101 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147268067 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156614913 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170846852 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161548907 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12246751 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.211688057 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159582167 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108414363 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143234123 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202640505 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151526208 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183105294 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182871509 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142949861 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175260422 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220600161 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108551972 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178698514 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216878878 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11562826 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152585707 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138441224 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154331738 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272250658 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099187368 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21463335 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190847567 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163563303 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17153347 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149785589 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197538331 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161898177 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218733643 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119528692 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15912047 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160271561 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141026807 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132881934 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130764757 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194129571 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124766964 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162707134 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168354352 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195917756 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127324555 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147431285 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287660046 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178216278 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221158208 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138889116 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139304686 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162488317 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121358637 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.209316626 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183226172 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138301878 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110455032 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13881622 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132338273 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138178573 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160822679 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196705648 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162210009 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211285612 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141234803 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28502776 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144309394 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157762619 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091099592 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137213555 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153442311 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120494198 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153503755 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22436882 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271664311 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121444829 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13666984 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153065826 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099748611 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139916655 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168155751 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166397192 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184228805 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147232066 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082050888 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160237209 seconds)
  done (took 82.845674262 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166071464 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134878593 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149585214 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202979573 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180480936 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27302849 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212176667 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257958309 seconds)
  done (took 2.660969558 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094761443 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148679235 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160015846 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.136424252 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093444186 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12221003 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34285982 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135800334 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092594175 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.150207713 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172939042 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095172608 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.563063813 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09223005 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12183195 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107755165 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093953725 seconds)
  done (took 3.799434614 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.223362163 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486478888 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.960727063 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19864394 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.18079673 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122065314 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.693296621 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11899662 seconds)
  done (took 12.068577936 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11839342 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138812821 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.126190974 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154706306 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.144140848 seconds)
  done (took 1.772901429 seconds)
done (took 124.615611739 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099693881 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130954999 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100567976 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132051611 seconds)
  done (took 1.537539353 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096601291 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071875803 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102200947 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075961354 seconds)
  done (took 1.430999747 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.192352694 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.171115249 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394645237 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073219352 seconds)
  done (took 1.584036572 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117753688 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134419904 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106387872 seconds)
  done (took 1.453952619 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108095246 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131691837 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103680947 seconds)
  done (took 1.435476452 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10834426 seconds)
  done (took 1.200250918 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110182922 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13913908 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110393641 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13861617 seconds)
  done (took 1.590878024 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100217531 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128675572 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111170659 seconds)
  done (took 1.43087473 seconds)
done (took 13.113158217 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104937576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421621288 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414306911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112722663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723196152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382686395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032714759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148318628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165725117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095724086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140310614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676070699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.063129314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376822911 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021325125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372939615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678782156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122493557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093226084 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124180185 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016518618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093496748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123080167 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094516574 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706489922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42620818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09665853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372327486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093750686 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126168839 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382494809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12382804 seconds)
  done (took 17.010125123 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097505315 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176808611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099553299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124886943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124662187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095339605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125936307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095233999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179843132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124393795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113760149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123461042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12787532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096177147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143533369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094213931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128086586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095044706 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123049301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095480619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140609074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122898169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095263337 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123181835 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095962053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136675165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095933747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122662982 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122451101 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098051066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12761423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097243149 seconds)
  done (took 4.856152644 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1437266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18510466 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129683746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128584118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171089712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126544675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202697673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147566131 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156602125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125115446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141753928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094696237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158575841 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123708096 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116398275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122448511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097305619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124056107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094740264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12481978 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141176061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094277681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124057936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094341258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124386709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110955961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125201287 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12286619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095018405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126946396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099087724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125172184 seconds)
  done (took 5.19958652 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099082631 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127556172 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111082399 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140022278 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097187926 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126988257 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099246371 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126202177 seconds)
  done (took 2.025275384 seconds)
done (took 30.187222131 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113393154 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128809949 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108672001 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136756225 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104759077 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133447681 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.094279468 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135126389 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135561217 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104871562 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139681998 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093483333 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125272716 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09366433 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136359222 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099623099 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134993988 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104608815 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136547381 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134315531 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096524686 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134567923 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105214408 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134659983 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106388172 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.136047001 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139459773 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101144213 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124713121 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096239927 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126710024 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107558878 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127184731 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107991165 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129273901 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098608618 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125247069 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096037954 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.136153746 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13568901 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101876589 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135083807 seconds)
  done (took 6.085725265 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108897644 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141335822 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106147382 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084728978 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117560128 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082081272 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139576286 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080044542 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112164317 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108767819 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076197746 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107076867 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079182227 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103117937 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077859366 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076329901 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109758939 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076381371 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077303979 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107397375 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08074872 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073755841 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109203897 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079936037 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104413354 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082795459 seconds)
  done (took 3.605296847 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102431658 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136442616 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114898377 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186137871 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164004699 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10175513 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133361799 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142614633 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111472153 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123213236 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098273802 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151703688 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112009136 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131803302 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122651432 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11026965 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138031663 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095837804 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.131290902 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114520491 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141088693 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10509655 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142999076 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135282894 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094184729 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125837941 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098373107 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13735065 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099176677 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133538317 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128463302 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098725667 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125082979 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106910209 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128466612 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096163003 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143967726 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1345885 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103752403 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.12420022 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102183424 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.125628674 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116601551 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163994811 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123179488 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101687054 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12732165 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104947066 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123962981 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113423188 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134689682 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094333768 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127070186 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.093495397 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124329444 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137997573 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096170373 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.126103034 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.104835827 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131060068 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107581637 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12850581 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110782633 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12492143 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131942499 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.094143089 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124259364 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093586332 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147161938 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096136774 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165261011 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.130141311 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096852354 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134522065 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102812626 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131602329 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095494742 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141525097 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133717484 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098995773 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133883556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098320998 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.127228672 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112027848 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126644166 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096420185 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125295314 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101791067 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125968692 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095315929 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138634407 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123584944 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097389935 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142691904 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09410596 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125586007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100612365 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129153667 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122136312 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108220036 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.130092083 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095427009 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135376022 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094720375 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127583142 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103489835 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129807177 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.12252199 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100025287 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132248063 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.095042722 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125758169 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097723684 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.126734882 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105433809 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132339876 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10033237 seconds)
  done (took 15.080990702 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232497173 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218915203 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190394253 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300272122 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137610248 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.117186323 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.216641747 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158851684 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125730457 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.13270997 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172785626 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.185077874 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171701778 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182143655 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172527102 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125182053 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143124648 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.137646188 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218493253 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.294996413 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145776951 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103039149 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164587375 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163363864 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139093955 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105041745 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142441926 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.140175207 seconds)
  done (took 5.860255636 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111307346 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157716684 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100700317 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147407978 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1519449 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094993803 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130883571 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095743922 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137310539 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139005117 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095228556 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131247146 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.102671431 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134532997 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12558174 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105444189 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134465691 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096489649 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128119037 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099314749 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.136416196 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133340661 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098685559 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124048416 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104558326 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12450376 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088576946 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145630365 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124830999 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116781305 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123407391 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102883496 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138740018 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095713337 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125170022 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.097111711 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128540952 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.097005751 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126863933 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093805268 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124365985 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07882869 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124145916 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140213716 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101458114 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111739753 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101647554 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130426404 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096222983 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123020621 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098361516 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128712158 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098479758 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.133822136 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097855516 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126502544 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09806567 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117821319 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102032263 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.128629656 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084889207 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125898525 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.101010541 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120464454 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103154644 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.131546881 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09424637 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.128138676 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.099895688 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13196689 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126912638 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.1013324 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.12315836 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097730704 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.1288441 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099936379 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.129274101 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093868348 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125074837 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096031427 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106948933 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094945734 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075034667 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128465358 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123129912 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094383402 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.12728857 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.10126049 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.142321608 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096417972 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134939922 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124800125 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094744462 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128308499 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085302953 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127148668 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11164585 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.144456564 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095426334 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124242248 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138959224 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098994489 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124724959 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078024542 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104042197 seconds)
  done (took 13.183158949 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131968159 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156193787 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126229844 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11402554 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.160004012 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159757601 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102943837 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133773134 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097122127 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.145760453 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096276558 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133790916 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095575707 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140897355 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159230587 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105542482 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128465575 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110198221 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13016986 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17141898 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114065822 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145439128 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143987569 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096210277 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131848091 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.114009021 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.1649631 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.139629589 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109037773 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145558734 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10982304 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163216888 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145249597 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099953348 seconds)
  done (took 5.558918747 seconds)
done (took 50.471941473 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.219401293 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.442976758 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.192133994 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.137033428 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.261250606 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.223669285 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208148443 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19288603 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.299965374 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.199367025 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.428187522 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.824470902 seconds)
done (took 58.75208843 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.209369427 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.345669961 seconds)
    (2/2) benchmarking "String"...
    done (took 1.481119481 seconds)
  done (took 3.945251588 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.749400549 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.131615435 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.454760517 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.192905077 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194026982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481316324 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.883973461 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.610747511 seconds)
  done (took 28.066784544 seconds)
done (took 42.090626087 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.195774041 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.256964523 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229590968 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.173305505 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.333666962 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.218499874 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.648090237 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.249519943 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.227058028 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.180746472 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.219367658 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.199117219 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210319232 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.593569409 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195612019 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194710307 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.259277183 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.740207291 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.60091561 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.20268637 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.213926413 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.240023405 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.221192947 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.196899591 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.281759895 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.196338016 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196002724 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.194652838 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.757758753 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.196276073 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.207924167 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.79965468 seconds)
  done (took 190.950472055 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19690399 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.466852691 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.55908606 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.218498381 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.924619107 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393555843 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.345352699 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.99038748 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.215418687 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.199023738 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.459254356 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.198154427 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.537313505 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19413243 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227089829 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.240425521 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.370658019 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541391524 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.235524094 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.361786884 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.20409259 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.420027381 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.373191938 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.43804004 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.225220566 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.26495077 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.2161347 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.242057279 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.384529913 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.30949655 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.206762622 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.236795949 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.82257484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.056074845 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.202607291 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.208034697 seconds)
  done (took 150.806572445 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197239316 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197958238 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198107033 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198132721 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231126462 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198752577 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.779790083 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770659752 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.19791293 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.702461211 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.543253263 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.560618808 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461886376 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198879298 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293829037 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211380947 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19892498 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214849386 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.242299336 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203635995 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200324369 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.765080244 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211606863 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.421864368 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376649088 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216467934 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232490512 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590784374 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199256467 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232351279 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532534878 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250823723 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200523117 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.571485248 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.075764384 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200417694 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313935192 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201665848 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23309329 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20067809 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48078685 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200131578 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200844977 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204507794 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871265754 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200974895 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.784169854 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205032905 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.190262488 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204694306 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.201432222 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202261087 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.824736572 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.919784287 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.223212799 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200453911 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20386369 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201264845 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201211002 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.234479116 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.863300734 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298884354 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.220519512 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205755777 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234751525 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.20111323 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.357688392 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219566042 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.290950169 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258479951 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.325648149 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.769433378 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201946319 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301742385 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324371904 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.203696179 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.202134567 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202293295 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.202166135 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.313863047 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.203119287 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.614611508 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.381171524 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220985894 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.557578979 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302155327 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203384567 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622660077 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.208455345 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.204541709 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.966138703 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302070748 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.20325582 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204099214 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203115656 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.615892868 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.772215504 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.471784805 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20906964 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.983521645 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209355649 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.633467768 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762433846 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.875188936 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20527414 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317210926 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.381019437 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222950726 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203637484 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.55526355 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.204415413 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.2582631 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210264026 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60329072 seconds)
  done (took 367.402783241 seconds)
done (took 710.28080926 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.797520484 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.791982533 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.906023154 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.785494173 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.749204226 seconds)
  done (took 10.158450556 seconds)
done (took 11.287809463 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.392961873 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391820709 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268139325 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399519349 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238999975 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416816778 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.373109703 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226510614 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306896089 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289565308 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311150522 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264207907 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244699149 seconds)
  done (took 18.253941963 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528511732 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527098553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269321659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535861818 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245877582 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537081285 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.4159477 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422855386 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43264845 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239732329 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21980321 seconds)
  done (took 16.504587098 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535978174 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528383515 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273157688 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.574918721 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247775678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527083661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426382876 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.435821716 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.448597987 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240413268 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220916308 seconds)
  done (took 16.589870645 seconds)
done (took 52.478813745 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.21675193 seconds)
  done (took 2.347902848 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252659672 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41382746 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240373041 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.221694668 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215821009 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.218903441 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222835786 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218019184 seconds)
  done (took 11.136036794 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21629696 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.213651979 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21316628 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213198187 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.2165897 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.214246824 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.215143203 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.217064602 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214753334 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212474929 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216522775 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.216693998 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216654444 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.214419566 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213460618 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216312727 seconds)
  done (took 20.572399357 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.215847198 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.214175684 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214564921 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.214654798 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.214918797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214830222 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.215494718 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.213926918 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214579158 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214694894 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21620747 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.215104655 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.215363194 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215139894 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21545375 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216581698 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214536922 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215369054 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220750787 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.216089118 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.216379549 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.216171633 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217243605 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.215676031 seconds)
  done (took 30.308539026 seconds)
done (took 65.497047211 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.844333215 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.874585954 seconds)
  done (took 6.852394533 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218642787 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.218644709 seconds)
  done (took 3.572809324 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.218397831 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218959442 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218430459 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217319559 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217837871 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217228986 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218684552 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218150944 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.218337517 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.218336942 seconds)
  done (took 13.316563385 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218240693 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217709694 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.216664333 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21818837 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.218705605 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.217221396 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.218221937 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.218861436 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218939353 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216817925 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219895732 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.21758098 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219269881 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218097025 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21922931 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217069689 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217092289 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217014513 seconds)
  done (took 23.060160111 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.220282507 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.219241116 seconds)
  done (took 3.574739987 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.217230009 seconds)
    (2/7) benchmarking "second"...
    done (took 1.217257454 seconds)
    (3/7) benchmarking "month"...
    done (took 1.217308744 seconds)
    (4/7) benchmarking "year"...
    done (took 1.219133254 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.217177417 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.217542199 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.217760398 seconds)
  done (took 9.659426686 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.221395739 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.397203941 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.497361337 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.818499693 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22210972 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224250265 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.093239487 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224181447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227360028 seconds)
  done (took 14.062344575 seconds)
done (took 75.233073902 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.252987116 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.235468674 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.509042061 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.230841809 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.234020331 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.557241081 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.230836318 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.356163206 seconds)
done (took 37.744719475 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.22386226 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.195412152 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.404663434 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210293297 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.296082618 seconds)
  done (took 19.24353963 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.265730139 seconds)
    (2/2) benchmarking "read"...
    done (took 1.559084202 seconds)
  done (took 4.962024381 seconds)
done (took 31.567364241 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223337595 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221733298 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222387168 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219956012 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.22012974 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222644513 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.219310492 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220305006 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222811966 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222067992 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.222381365 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.222636034 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222678252 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219782922 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22006611 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221944922 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220134409 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220456367 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2201522 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.223103812 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22046989 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222797927 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21977967 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.220845717 seconds)
  done (took 30.449898863 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.223769862 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222284847 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223263448 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22224029 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22131395 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223025889 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223994056 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220073259 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223065291 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223830701 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220876331 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221323147 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224779182 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221478282 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223113084 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221564028 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.22354097 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221408785 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224360832 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221886559 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223748941 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221727857 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221731864 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22440483 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.222047154 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221777988 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224221695 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222618475 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224348943 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22244496 seconds)
  done (took 37.819518606 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229885237 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231862242 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.22411665 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225641674 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224655873 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224159056 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224962977 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224848022 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.226139767 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.225743442 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225383571 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224545073 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226150658 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225268736 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225291535 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225176392 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226099306 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226203009 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225670189 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.22618891 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225465382 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225765563 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226598132 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.226112862 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226260134 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226326452 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225554943 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226509575 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225611746 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226405791 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226946128 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225834431 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226985799 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226786436 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225970132 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.227205299 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231235747 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234015615 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.227531428 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22701101 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227018217 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226969127 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226732983 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226829465 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.227262765 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.227128631 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226987277 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226755614 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226886613 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.227155056 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227388586 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.228104712 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227278784 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22723518 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227091327 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227247601 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.228154711 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227961464 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227906634 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227889841 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22771793 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228070883 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.2279306 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228833955 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229669196 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229036434 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228229163 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.229348762 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228407228 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.230470512 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229802503 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230361084 seconds)
  done (took 89.49505511 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230261747 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227928565 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226112532 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226711282 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226886453 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229891362 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227009613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22943543 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227510466 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229860934 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229488107 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228238234 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227960407 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23026551 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229456955 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2275062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.230594727 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227271171 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231227438 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229989148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229897718 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227644195 seconds)
  done (took 28.176824014 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231144841 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232899369 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227579253 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230314103 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227270499 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230655083 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.231202942 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232588789 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231562077 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228862747 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228284626 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231101306 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227781857 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227787182 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228859284 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230353997 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231538351 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229583899 seconds)
  done (took 23.28591409 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229417775 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229659902 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232054576 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229455797 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228616837 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232151793 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229096595 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23244847 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231880248 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.230061257 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232870135 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231557606 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.233076985 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229690944 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232716968 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231031449 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232210078 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229660734 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233078624 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229959922 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231300636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233954017 seconds)
  done (took 28.233475745 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232906461 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232687896 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.231211262 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.230858832 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231870735 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233565656 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233175571 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230888522 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.23580234 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.233682417 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231032689 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234045642 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.233487914 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232606883 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231501931 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231735138 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234564046 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232511858 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233849733 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234128196 seconds)
  done (took 25.803863692 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235229492 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234606203 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234961152 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236109207 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23555557 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23499205 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235062 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236019875 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236137679 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235753541 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235254628 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235798793 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235810583 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236006544 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235545706 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235499068 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236262676 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235768483 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236611232 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235843786 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235963858 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23633956 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236124983 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236919985 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237277211 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236580979 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237252785 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237064331 seconds)
  done (took 35.757684908 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237006523 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236857837 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233490991 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.234650798 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.234762953 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235049107 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.234887106 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.235604476 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238072247 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233732657 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237252667 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23691894 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238428659 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.238177541 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236328914 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.237604647 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236858708 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.236293587 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234647751 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234099815 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237691016 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237596953 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237411048 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23523057 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235343982 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.238384257 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236372789 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235995764 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237518611 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235586869 seconds)
  done (took 38.240003492 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.257215261 seconds)
    (2/2) benchmarking "in"...
    done (took 1.25698414 seconds)
  done (took 3.666666582 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.236647773 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238919717 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238196786 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236327198 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23651163 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239084209 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238800779 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235540628 seconds)
  done (took 11.053378662 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.239466993 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.239548935 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.239655325 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239442097 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.240402183 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.240113073 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246278886 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.260188771 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.240877429 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.24169174 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.247125856 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247146014 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.242901648 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239404262 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.240269844 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241631033 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.240342244 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.241581026 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241316983 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.241161231 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240573054 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242473385 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2423463 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.238234114 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.243075071 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.252761423 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264969596 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240501573 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241686403 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.245483241 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.241208946 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.239385518 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.241661456 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.241769479 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241422822 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.241960968 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24972113 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261269056 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.249611918 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261930884 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242998607 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.239734755 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.242756959 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.242402537 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243504007 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.242442267 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.243430991 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.239645451 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.242726487 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.245103747 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248202532 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242119885 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.240318538 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24538845 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.243606872 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249063611 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263272642 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.246264692 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253144231 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.254510973 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.276623964 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.268801267 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245173855 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.243600265 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253792086 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.268416882 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249894466 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.262344215 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.241383293 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.244346181 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.251004373 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275715864 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.270935311 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24466331 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244708789 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.245482802 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244540466 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245996086 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250235351 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.266961405 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.244871882 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245195115 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254752572 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273551081 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.245458045 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.246400881 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.245398462 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.245997899 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247540066 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256046813 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264879526 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.24579015 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.245146496 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245649326 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246523357 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.24528836 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244425822 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247340042 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243489654 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.246223175 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24613429 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250169484 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.255259847 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246929853 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246309692 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.254630987 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.266851945 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246471244 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253689973 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246577403 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246111375 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.247648174 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.253583666 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.244983723 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250488346 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255255132 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247052028 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.249275284 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.246979487 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248209584 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257510341 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.274956997 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247816123 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248278012 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.252490551 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.25856204 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24822572 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.250394064 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.248889792 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.245560514 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244673682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247827753 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248583399 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.248655618 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248217799 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248917749 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245540404 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248367362 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.248654956 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.250223238 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250453472 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.250036608 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250078282 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250639117 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.249338209 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.250597121 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.256484277 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.269215812 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249837676 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249393305 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.246572555 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249669434 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25035571 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.249892305 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.250180901 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249637603 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.251232374 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24979029 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251474054 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.250178741 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251133552 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.251002307 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25449749 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.25075449 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25465355 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.250207258 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.248949749 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.251476607 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.251398139 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.250471782 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251582939 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.25012348 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.254132328 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260153523 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251703556 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.251202624 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.254063488 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251849754 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252190312 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251686941 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.25607078 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260222532 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.251048344 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.261137081 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.271463563 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251310493 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.253223817 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.252530113 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250945468 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251998352 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255280417 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260863364 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264105773 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277306147 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.253344195 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257094941 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.253074071 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.255960281 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255402219 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.252583282 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.2534452 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252088799 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252755468 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253140711 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.254342982 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.252684891 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.252528988 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253853011 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.253371678 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.252615562 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254416378 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.252999394 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254974734 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.251188312 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253719068 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253302899 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.253504719 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251115989 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.251895725 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25294788 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254354489 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.253368409 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.261393848 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.251638168 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254903721 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254834694 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253771926 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251808027 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.256008693 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255895383 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.255092468 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261486997 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275461424 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.255248393 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261094155 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273452891 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254965147 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.258017946 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256004283 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.253051791 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25845255 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265168535 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.256129777 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.255887578 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.256174394 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256435855 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256595142 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263737828 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.273371637 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.255613189 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256584689 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.256700379 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.254016873 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257364263 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.256616803 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.256231314 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258391531 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25682159 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256637301 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257705149 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256016717 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.256646031 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257075851 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2600591 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.263999913 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.262757547 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.256434915 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258598811 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.258930525 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261147857 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.258077527 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.256256075 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257587918 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268769719 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281586632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26226394 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.279993204 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257458399 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262032017 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.278792506 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.261537056 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258224504 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258900199 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.257243098 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.25775307 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255286499 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257813151 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258710731 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260262475 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.259349178 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263321451 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258587709 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.258019234 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258243129 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.259640766 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.260070596 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258193932 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259807201 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260733149 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260855843 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258094908 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.258824704 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264688131 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279550584 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25965396 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258731998 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.258998627 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.258563229 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259992735 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260197012 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.263690002 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.267102477 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.263824514 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.269184915 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.261808368 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272063219 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259622732 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.264771663 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.268478312 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.2589865 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.26053957 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260394293 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.260271998 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267322866 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.281091989 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.262331235 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.265268413 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260281849 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.260881001 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.261169342 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.261504591 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261563992 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259814981 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270054778 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.280182004 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.26604563 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263591714 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.258732708 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261479585 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263050197 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261145369 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265381109 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260921347 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.262445907 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261751557 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261336691 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.263018141 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261956504 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.263583013 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260814603 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.26304968 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268072063 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283799146 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267941784 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.265270656 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.271979267 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284759185 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270325482 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282303465 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26451874 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26352338 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.264886034 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264560039 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262667342 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.264863523 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264310322 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265234062 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268486685 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264116283 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.266240269 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264310781 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263812095 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264780065 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273368927 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286073768 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265752775 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269393459 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.263142786 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.26563961 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.268776561 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.265300462 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264310147 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267260354 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276326285 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273008125 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265437571 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263646316 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266346455 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265597917 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265077182 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265954861 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264607134 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.26652113 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26575731 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265007989 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268666463 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265450264 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.266505966 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26740005 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.26604506 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.277282229 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.28710863 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266853701 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266543799 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267924615 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267636662 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.267230965 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265874395 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267272749 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267279946 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.268991957 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274061319 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273865467 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.269635761 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266404281 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266383178 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267126299 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.267636175 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267167372 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267335083 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267527974 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.268916173 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26699422 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.267868808 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266567275 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267117331 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26849413 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268172082 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271508673 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275416422 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268930474 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265582891 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.268396207 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269016445 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266098145 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267614372 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.277272239 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293667019 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.279143168 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.277482024 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.272691013 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267576792 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272004961 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.276794199 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.2675993 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269880919 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.268577974 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.269203277 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268752226 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273153545 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268850003 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276852599 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.29006862 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.268826226 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277237748 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28948005 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268992243 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271095712 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.274628009 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.269563046 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.268006069 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269973643 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269994334 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275828826 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290615486 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269654137 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272093579 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269454957 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.272375788 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274790565 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270772487 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.271246836 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.268218728 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270917074 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270634759 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272082449 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.269086564 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.270673395 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.26995403 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274469555 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278763373 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269596392 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274445047 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.271283667 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.271298504 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271569479 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273151288 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26973897 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.269286542 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.27049051 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272440445 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272473666 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274427674 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271048268 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272800671 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273894826 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271686686 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275609364 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282817748 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.279764386 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.270090232 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271625872 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.273259488 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275179771 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270958129 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272544233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272459988 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273778678 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.272586998 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272783766 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272475075 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.275707722 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289775477 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29287847 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273843156 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273333839 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27510274 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273336376 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.271007682 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273873338 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274353366 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275193695 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.281466514 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274749079 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280173069 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293841238 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273925444 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.279678286 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277350861 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.282154772 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277537735 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274205826 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27417537 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278325726 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293142544 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274958956 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284221231 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305171059 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295402534 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27572827 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.275498624 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274703311 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275899862 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.277119778 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275352416 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275987938 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276992983 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275914146 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.276040817 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282239382 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.276370104 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277452379 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.276591848 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.274625928 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276635892 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.274698489 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.275815338 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275634005 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.27625153 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.275768523 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276114606 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277173474 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289001368 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.304728865 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277635545 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276345755 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274716644 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280941928 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.279380363 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288351127 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.285820431 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.276410748 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27735636 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.278227954 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276772549 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.276799831 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277326631 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277725352 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27751785 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274470034 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.291149663 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304636394 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.283825773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277283386 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27832796 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278765239 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278321548 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277688488 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278198555 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278114549 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.280047536 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282315694 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.278450919 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.278288425 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280711494 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287007108 seconds)
  done (took 753.485303825 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277162956 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275904661 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276782136 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275670369 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275374767 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277736438 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277254036 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276998462 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276443268 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277224393 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276544613 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277299775 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277130217 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277567534 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277221146 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276566838 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277236577 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276946637 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27703046 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277793434 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276956242 seconds)
  done (took 28.006182022 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280021033 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.278317229 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277245423 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279528365 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277928943 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279774907 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278696094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281456597 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280976706 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277924884 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280456066 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281846925 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.278609391 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.278239227 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278789869 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280301483 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281567583 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27866288 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.28106445 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279201212 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282701574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279128393 seconds)
  done (took 29.343795261 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.281427505 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280761501 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.281399003 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.277930983 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.282154907 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.279802145 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281020656 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.281155095 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.2823464 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.282081597 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.280960058 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.282564152 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.290334771 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.288240355 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.283990012 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.281733596 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.425917576 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282292529 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.282750994 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281890288 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.28032158 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.286972979 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.301371168 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.279721613 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.280859413 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282600167 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.283630683 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.283190086 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.283609541 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.283329183 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.28719062 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.283924289 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283083235 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.283630311 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.28239972 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.28388153 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.28859109 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283730849 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.281062905 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.284344145 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291638409 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.305266315 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283237024 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289635081 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.30622182 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283785774 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287120015 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291925404 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.281960214 seconds)
  done (took 64.293244245 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.284124831 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284725637 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.282310999 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284138173 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.285009982 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.285056354 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284901009 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284207836 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.282769414 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281943088 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285159174 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282766529 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282568733 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285457684 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284604936 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282590114 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283033699 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283089157 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.283329752 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282865971 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.283139559 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.286121943 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.286251818 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.283975624 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286043749 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283109317 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284028048 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.286240543 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.283908737 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.283395077 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.287107394 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28669471 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.286330024 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.284551844 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283560642 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286277827 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286404201 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.284396993 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286852117 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.28622528 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.286463563 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287157234 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28796981 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286938215 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285110277 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.283701161 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285209727 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.285329459 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.285166406 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288079531 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.288005748 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.285273689 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28803896 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.28520555 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288272644 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.288026838 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.286300397 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.285950604 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.288159654 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.285296486 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285933555 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287684682 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.285956388 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.288235401 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288440452 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.285034285 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.286511175 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288721526 seconds)
  done (took 88.602930879 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287611801 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288801301 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288445887 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287590624 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287846258 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.288486211 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287852668 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.288323816 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288411851 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289303934 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289141352 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290094689 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.288628949 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289827725 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289497965 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289403697 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288280699 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289109266 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289017008 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28886339 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.289090678 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289669158 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.289521379 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289538738 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289150618 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289579386 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2898605 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288677881 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289563079 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289752391 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29034764 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.290167429 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290466997 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289898808 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291886147 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290423089 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290439155 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290871171 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.290483144 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.290327861 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290745673 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289948769 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291119414 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.290650013 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291688772 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291343687 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290908441 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.291584176 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291875331 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291163362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.291377842 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291566836 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291190552 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290334645 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290627356 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291694234 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290910611 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291295836 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292054493 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290258741 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292067662 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.293039681 seconds)
  done (took 81.182516667 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292848408 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292724367 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.289999929 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.290086351 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293654571 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290587043 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293255823 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292671798 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293492948 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.293258955 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293419666 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290297308 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290397975 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293842428 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290733311 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290783301 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291622677 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290264556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292512766 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290748084 seconds)
  done (took 27.040311825 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.29042847 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293427389 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29014339 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29163151 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.293412823 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290055631 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293394422 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293354481 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290861833 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2941175 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293071387 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292957186 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290904984 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290788456 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293362553 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291479 seconds)
  done (took 21.875845943 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.29039516 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294876369 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292714482 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.293540595 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.290737226 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291092898 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294115544 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.292560317 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.292618402 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295523052 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295019466 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.2943484 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293933725 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.293385246 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.292217261 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294788292 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.29228899 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.292400349 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.294254149 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.294004429 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292239917 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292675545 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294418113 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.294565944 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294735115 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292582081 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292837775 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293624062 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292513328 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294575826 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.29260902 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292744886 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.293210031 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291902355 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.2943201 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292646325 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295204858 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.295848688 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.295262401 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.295750182 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296552272 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289637429 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292306881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294086618 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.289618176 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.291718862 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290712851 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.289804102 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290724616 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.290596044 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.292930397 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291983363 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.29260255 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.292984408 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.292353244 seconds)
  done (took 72.322331938 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292032133 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292376047 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289823322 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293519548 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292564095 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290653112 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294008284 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292730088 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289909973 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292084578 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291067556 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294237993 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289756804 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292388759 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291195956 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293330178 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290030977 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290512917 seconds)
  done (took 24.456350336 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.289719768 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290094935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.293070503 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289940179 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.290191302 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292911523 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289619914 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.292785049 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29260226 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290376949 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289839502 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.296017179 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292283119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.293439844 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290671136 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290310578 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.292896143 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292746192 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.290030073 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289821373 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291711554 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292282951 seconds)
  done (took 29.616609022 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.290826115 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.291192696 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.291180421 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.307550824 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.311511949 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.314645126 seconds)
  done (took 9.008589862 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300141545 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293330691 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290573339 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295155379 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293382564 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290186281 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29087315 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290320284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293097068 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292016131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290940274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293934129 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293886876 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290796513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293856059 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294159538 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290840377 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291599576 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291573952 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294455516 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29260018 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293847363 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290785187 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292224123 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291666038 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292435021 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294757568 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292560117 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293523912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295479028 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295330434 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291787326 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294996352 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292677409 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295425891 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295415257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293569324 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294995041 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29532482 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292385592 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296112797 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295999956 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295499714 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293185908 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296190045 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293539077 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293917283 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293441645 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294320435 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296747294 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296846119 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293874708 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29556001 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296090483 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29697793 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296707418 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294898088 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29514231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296988336 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295183086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294351942 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297393839 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295312435 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295609306 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297923324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296215904 seconds)
  done (took 86.638163753 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295947543 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294620466 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294537431 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296582269 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294984305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294604026 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295057363 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295308012 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296112511 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295504346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297702298 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296055425 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294788133 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295734848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295101003 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294882677 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294750823 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295291231 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295257999 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298304192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294969617 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295583204 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295809022 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296656752 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297269838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299227631 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295489366 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296140839 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296240318 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296621776 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29599786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296332107 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295860233 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297227356 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296667774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296737301 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296251023 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296415693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297737399 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300201856 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297227825 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300081911 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296871535 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296073572 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297924829 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297662086 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298500329 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298368887 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297987805 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297753843 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298695238 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298193896 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298328264 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297876449 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297100047 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297902277 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297782614 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297032552 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298451271 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300885947 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298365896 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299434435 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300761834 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298506379 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298974787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298715911 seconds)
  done (took 86.808005751 seconds)
done (took 1755.801749054 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46242865 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.41681516 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299663649 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.3222212 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298908377 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.323562921 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.300821789 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298819637 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299059618 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.300315752 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.299599975 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484722455 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.351276732 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298396177 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.299601206 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393848603 seconds)
  done (took 42.661756182 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.328407642 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304807738 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423959954 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327718013 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.328846787 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.495042679 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.366387336 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311428419 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.478779399 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.346973297 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.911503425 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327881169 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303918472 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.447231947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.32160327 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.491910466 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.558727175 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.910202873 seconds)
  done (took 30.198221694 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.767987667 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.320161003 seconds)
  done (took 9.300060855 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321643289 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.307640428 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304668435 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.301836871 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.294319939 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312612176 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.30174839 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.298800081 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.112485231 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.435892634 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311064822 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312429626 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.322779595 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302316275 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300294801 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.338620751 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.45572815 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.30130131 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299180613 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.309550205 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302726844 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.412369549 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350727506 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.308002742 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.430296587 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.093944451 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.311837864 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.310122482 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.438712382 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.301578521 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.301595194 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302253728 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.304947847 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.212416907 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.793511829 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.310141683 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.344533816 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311523845 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300124608 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.465564235 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.308221499 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.310218461 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.295676337 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.784247708 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.441854099 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.418820134 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.615000489 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.328608809 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.304498008 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.364937598 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303420067 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.304935038 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.347440163 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.085907534 seconds)
  done (took 110.579190079 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.357258333 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.68624895 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46506053 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316826154 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.969317585 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.932825062 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311102842 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.585565067 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.344065053 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294981976 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.581194121 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814400395 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321336679 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.358896086 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.402440037 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.338168526 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295157999 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.07749676 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.31724493 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.299117733 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791595549 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292993413 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300312151 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.456517095 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330908352 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761993204 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.738603317 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.783303064 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316139574 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.293976255 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764424404 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.315241846 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.307817801 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.292868771 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.558113631 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.668774777 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662145223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.321163471 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318931696 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298386672 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.311356931 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755246816 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.663894227 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.330258648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.300213924 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753945225 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.314917686 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.299197255 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.301042894 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508743134 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.223818414 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.299903325 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.662914115 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.299026232 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.590581574 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.3117716 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.358000688 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.772144485 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313417962 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.400552832 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339385481 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291466246 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29200952 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296379775 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294717483 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633791846 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.868413123 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.296762124 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.622422391 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76142224 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.313659628 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807307189 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.28674273 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.300286344 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.344463522 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.300018471 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.832117466 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.775678804 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.341154635 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289171757 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.611202771 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313642906 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.562222967 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.303018773 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.291599894 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80159199 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.301568663 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.290853325 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.288682112 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.294739761 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.935881811 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314847779 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.559131683 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.332770869 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.290343009 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.290973582 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.297078447 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288957288 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.297170032 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.291926434 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.797243803 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.318353561 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.441350527 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310269311 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294118004 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.294227632 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.288984163 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.288707845 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51771415 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.813803893 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.314081189 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.295840768 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.296831852 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.297880579 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.439147575 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.299171912 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.583074852 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.30969178 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298101607 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.294443843 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.940289842 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343963625 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292924608 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.296612298 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.169706335 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.502518372 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316881848 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.30089669 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301976151 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319409117 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.455397481 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312287696 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.393802691 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.301779164 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980613511 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.346529822 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.311434125 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.886209238 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301579555 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.130308049 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.313802939 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303285669 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588628725 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.556971332 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779937947 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.300377906 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.317349402 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.974277829 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.318376006 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436707797 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318467019 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.3668606 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498707646 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.693140283 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303909443 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.910163304 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.302412358 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523506387 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.304096804 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605823532 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767829021 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317797361 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306517161 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980226857 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.011561051 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.971673139 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.30583748 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.567490378 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.24392079 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.771641045 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.303615681 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.303585496 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.755092644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305478931 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.302829483 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.302507215 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.304256854 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.466446205 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47546688 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.916833821 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307209256 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.734300526 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323525358 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300312449 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.30497298 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.30361688 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.65069746 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.405495531 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.305494991 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.310045322 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.305454293 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.311229018 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756158999 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.337833515 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.305376253 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456100176 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.911814946 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.318700949 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309565502 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.984313807 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.681794333 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.788681333 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.389022246 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.592971389 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.322292967 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341981214 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.892066997 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357349357 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748638169 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.325038546 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.306695542 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.877719365 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.323102604 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.383474722 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.304391335 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307031938 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.827929263 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321964248 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.312186211 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.497448394 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325241543 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561788245 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.307428305 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.347606955 seconds)
  done (took 1103.66238199 seconds)
done (took 1297.613899085 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.307074187 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308146224 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.287295908 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.307550201 seconds)
  done (took 26.427024977 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.324839118 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.313584773 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.31697622 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.31554427 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317260801 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.312564802 seconds)
  done (took 9.11827018 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.35341241 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.302119749 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.309144455 seconds)
  done (took 19.182874042 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.503780669 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.512477244 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.611048621 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.328446674 seconds)
  done (took 10.173934376 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314908006 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.31601865 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.316213878 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.318519589 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.326436578 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.328785241 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.319171213 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.317194448 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327373387 seconds)
  done (took 13.103082265 seconds)
done (took 79.22252287 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.075701299 seconds)
    (2/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.412727274 seconds)
    (3/286) benchmarking ("sort", BigInt, true)...
    done (took 6.311779588 seconds)
    (4/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.292061826 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.091776589 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.870949847 seconds)
    (7/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.328548037 seconds)
    (8/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.083792878 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.548697011 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.367940122 seconds)
    (11/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.437192065 seconds)
    (12/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.279516804 seconds)
    (13/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.317479324 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.351991923 seconds)
    (15/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.297832724 seconds)
    (16/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.772020215 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.729964442 seconds)
    (18/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.646621176 seconds)
    (19/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.32549123 seconds)
    (20/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.809761395 seconds)
    (21/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.33802434 seconds)
    (22/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.395560171 seconds)
    (23/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.392571099 seconds)
    (24/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.527955872 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 6.310674411 seconds)
    (26/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.283378784 seconds)
    (27/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.659080747 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.426978289 seconds)
    (29/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.294178563 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.874423471 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.758791442 seconds)
    (32/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414663203 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.424508637 seconds)
    (34/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.477918596 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.662363424 seconds)
    (36/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.788486601 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.33077599 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.336281144 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.300571673 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.334352483 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.480804024 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.423772739 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.571133121 seconds)
    (44/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.584807428 seconds)
    (45/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.328958199 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.415166769 seconds)
    (47/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.088067421 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.386747084 seconds)
    (49/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.65889246 seconds)
    (50/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.343548527 seconds)
    (51/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.336436172 seconds)
    (52/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.35497542 seconds)
    (53/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.420572897 seconds)
    (54/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.46793295 seconds)
    (55/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.044537907 seconds)
    (56/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.338767924 seconds)
    (57/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.294436819 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.360993312 seconds)
    (59/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.313839661 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.738254231 seconds)
    (61/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.373564741 seconds)
    (62/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.297129756 seconds)
    (63/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.329832619 seconds)
    (64/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.489763325 seconds)
    (65/286) benchmarking ("sort", Int64, false)...
    done (took 5.469077292 seconds)
    (66/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.64557356 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.308279445 seconds)
    (68/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.249973438 seconds)
    (69/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.294782426 seconds)
    (70/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.860305829 seconds)
    (71/286) benchmarking ("sort", Float64, true)...
    done (took 6.326527267 seconds)
    (72/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.407925511 seconds)
    (73/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.292543065 seconds)
    (74/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.290953676 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.656193792 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.311724922 seconds)
    (77/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.371692394 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.403725905 seconds)
    (79/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.315668939 seconds)
    (80/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.32439405 seconds)
    (81/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.311337613 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.709510548 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.332162155 seconds)
    (84/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.299222389 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.307617664 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.185220049 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.312261491 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.649419089 seconds)
    (89/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.314465242 seconds)
    (90/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.295356768 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.34897098 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.5251003 seconds)
    (93/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.400970972 seconds)
    (94/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.322709693 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.317927166 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.812494777 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.419768469 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.648153681 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.429754528 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.873884188 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.902523524 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.005075398 seconds)
    (103/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.308163625 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.552147458 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.455639378 seconds)
    (106/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.295026918 seconds)
    (107/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.40105734 seconds)
    (108/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.66969786 seconds)
    (109/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.315469275 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.718477814 seconds)
    (111/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.382289855 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.818173795 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.352873053 seconds)
    (114/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.488716783 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.572933692 seconds)
    (116/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.649619557 seconds)
    (117/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.343906527 seconds)
    (118/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.314789645 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.319251133 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.024644187 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.592818846 seconds)
    (122/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.411706562 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.507969643 seconds)
    (124/286) benchmarking ("sort", Float32, false)...
    done (took 5.324181547 seconds)
    (125/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.359331958 seconds)
    (126/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.309578132 seconds)
    (127/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.384400359 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.31943995 seconds)
    (129/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.672159426 seconds)
    (130/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.339550041 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.429548966 seconds)
    (132/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.547521983 seconds)
    (133/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.415624871 seconds)
    (134/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.345095662 seconds)
    (135/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.645522805 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.075619662 seconds)
    (137/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.300162046 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.343436414 seconds)
    (139/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.085432586 seconds)
    (140/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.030628859 seconds)
    (141/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.328384882 seconds)
    (142/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.287473119 seconds)
    (143/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.564021195 seconds)
    (144/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38218565 seconds)
    (145/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.677670111 seconds)
    (146/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.303932667 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.35299116 seconds)
    (148/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.414165534 seconds)
    (149/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382706437 seconds)
    (150/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344303728 seconds)
    (151/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.418056506 seconds)
    (152/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.072078933 seconds)
    (153/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.29977027 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.404808576 seconds)
    (155/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.135980016 seconds)
    (156/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.314576131 seconds)
    (157/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.458513786 seconds)
    (158/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.297970476 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.106143984 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.01029917 seconds)
    (161/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.713745924 seconds)
    (162/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.110875111 seconds)
    (163/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.939206238 seconds)
    (164/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.539529454 seconds)
    (165/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.13686638 seconds)
    (166/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.329478017 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.341636976 seconds)
    (168/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.42709712 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.624704589 seconds)
    (170/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.574298722 seconds)
    (171/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.33508386 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.217553196 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.355912939 seconds)
    (174/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.651307428 seconds)
    (175/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.299700757 seconds)
    (176/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.406553259 seconds)
    (177/286) benchmarking ("sort", Float64, false)...
    done (took 5.592123864 seconds)
    (178/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.668617518 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.046222831 seconds)
    (180/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.365326311 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 5.460692984 seconds)
    (182/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.433208699 seconds)
    (183/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.300321208 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.39385398 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.204397961 seconds)
    (186/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.119261432 seconds)
    (187/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.312701734 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.191022354 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.955837125 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.538700989 seconds)
    (191/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.323810031 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.445370567 seconds)
    (193/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.969552535 seconds)
    (194/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.338570592 seconds)
    (195/286) benchmarking ("sort", Int8, true)...
    done (took 6.331443893 seconds)
    (196/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.338157214 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.295448124 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.302755543 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.350717001 seconds)
    (200/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.305563763 seconds)
    (201/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.65844209 seconds)
    (202/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.362903915 seconds)
    (203/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.331696961 seconds)
    (204/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.529564944 seconds)
    (205/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.303113677 seconds)
    (206/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.472751995 seconds)
    (207/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.325607232 seconds)
    (208/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.268981786 seconds)
    (209/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.303891039 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 6.315216249 seconds)
    (211/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.315614376 seconds)
    (212/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.419104065 seconds)
    (213/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.545204003 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.592039063 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.022596908 seconds)
    (216/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.37965258 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.340302468 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.957678324 seconds)
    (219/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.153459851 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.367600501 seconds)
    (221/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.783675778 seconds)
    (222/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.345792627 seconds)
    (223/286) benchmarking ("sort", Float32, true)...
    done (took 6.323941051 seconds)
    (224/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.303911833 seconds)
    (225/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.909076993 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.446286545 seconds)
    (227/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.387764128 seconds)
    (228/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.223510354 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.754146917 seconds)
    (230/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.032932323 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.519507404 seconds)
    (232/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.349157294 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.575622644 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.140475668 seconds)
    (235/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.296718556 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.369202224 seconds)
    (237/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.499943357 seconds)
    (238/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.786801115 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.335054597 seconds)
    (240/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.330530644 seconds)
    (241/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.985487496 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.099863211 seconds)
    (243/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.409009524 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.716281301 seconds)
    (245/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.30444304 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.298585135 seconds)
    (247/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.305666838 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.303309499 seconds)
    (249/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.819113332 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341459973 seconds)
    (251/286) benchmarking ("sort", Int8, false)...
    done (took 4.374344616 seconds)
    (252/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.915627689 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.938438244 seconds)
    (254/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.533813821 seconds)
    (255/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.407195668 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.304376161 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.880982894 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.410257143 seconds)
    (259/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.349309674 seconds)
    (260/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.531263194 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.424779333 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.581049503 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.437710396 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.719474872 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.14426876 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.120679356 seconds)
    (267/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.319190875 seconds)
    (268/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.322248699 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.77484616 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.753753792 seconds)
    (271/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.912101349 seconds)
    (272/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.154570748 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.389634404 seconds)
    (274/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.304631378 seconds)
    (275/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.721338548 seconds)
    (276/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.3078227 seconds)
    (277/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.426382319 seconds)
    (278/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.504825696 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.058891182 seconds)
    (280/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.343758549 seconds)
    (281/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.831388176 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.351134099 seconds)
    (283/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336340876 seconds)
    (284/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.306944489 seconds)
    (285/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.334814845 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.211374732 seconds)
  done (took 928.188174729 seconds)
done (took 929.409346186 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360172869 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363451343 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.338196039 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.359746536 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.456898213 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.362409525 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.347719175 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.340166277 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.387447094 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.388559612 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.344454908 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.361374532 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.345753196 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.345426631 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.338894869 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361053518 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.355314265 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346235158 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.362335075 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.350501669 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.36159003 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.345493518 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.389494968 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.361028169 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.343435572 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.341276697 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.3494919 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.365573723 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.457691218 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.350708848 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342337513 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.357050025 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.356301649 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.33954501 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.333570534 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.364904644 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.360424841 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.3501193 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343862709 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.379009904 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.743527147 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.362537095 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.350408184 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.343578447 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.342450816 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.344956445 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.350473289 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.348860556 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363496816 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364676444 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.742841832 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.380328923 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.353813084 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.34395344 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.353956773 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.348449913 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.345036575 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367983506 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.368368991 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368294865 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.342193502 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.349655393 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.343017124 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.364693947 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357222816 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.786786024 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.353683706 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.347499418 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.740521418 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.364113803 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.755496001 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.366542112 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.345769554 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.364607214 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.383596042 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.35307588 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.338066025 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.344999796 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358578157 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.350428753 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.355098256 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369249944 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349793116 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.346274955 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370254094 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.368936992 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.35555006 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.352872827 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.354452621 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.374500126 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.362351291 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.365683064 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.349233139 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.342486769 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.356635838 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.349204798 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.355956401 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.357334378 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.351527898 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.35514392 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.741453964 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389268693 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.343210361 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.343885241 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.345890733 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.368081533 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.742292675 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.372476421 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.367567623 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.392829692 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.347285668 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.346001032 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.358283602 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371888701 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.355826619 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.350304541 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.345847985 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.351478809 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.75003699 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.385353455 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.348964258 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.353607227 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373154913 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.350101204 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.344502133 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.363615183 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.34992316 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371731757 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.476937013 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.359635524 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.388956508 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.353835063 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.35206415 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369859122 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374061994 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.388217069 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.351407601 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377064244 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.370725753 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.346361422 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365878796 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.360665542 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.350583921 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.353924109 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.342082309 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.371206029 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36859994 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369465416 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.370018657 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.477712883 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.346697655 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.352070268 seconds)
done (took 227.155278894 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409194789 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.338267226 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.432104496 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346175327 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.443302705 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.448252652 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344185459 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344598063 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.340767889 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.766961515 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.34593882 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.342381615 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.343108387 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344878354 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.42575138 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.344611411 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.342805931 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.688907471 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.345869483 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417324217 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.338141321 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.343688304 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.344386702 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.757848854 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.342095461 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.342388197 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419701899 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347328637 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.732129671 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.34100429 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.34546723 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.694891868 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.438696921 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.366794591 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.359163347 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.35426116 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.449216874 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.3686688 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431482168 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.432155349 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.434658213 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386993552 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.347095363 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.344935992 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.351110005 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.348143406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346290883 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376287599 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.345793698 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34557371 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.727398377 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358855594 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346291162 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.346723783 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.349440581 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.377130889 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347483679 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.349185505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.439959219 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349091871 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.414144287 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.775277739 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.729023065 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.352127212 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.349833662 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.347303378 seconds)
  done (took 149.536270523 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417692238 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.424571457 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.457961862 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.369288068 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.40025116 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463019631 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.368270401 seconds)
  done (took 11.148453285 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356847767 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351671659 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.399738102 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400687217 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.351530114 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528187292 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350141949 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.360875871 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.346820905 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.401523265 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.351932863 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350427899 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.35675172 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.341071092 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.400003593 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.360842221 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465109557 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350875251 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352681567 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.512441848 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348403181 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.357560427 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.402492065 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.361428851 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.354299868 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.354840773 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.175334642 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351203718 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347739135 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.351969758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349013136 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.426452113 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351713396 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.348340011 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349371775 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.466398657 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352882391 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349030884 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351477204 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.351330174 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.350810778 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351485951 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.352808991 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349001856 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352072192 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374691675 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352958077 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.352608053 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.352231059 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352937434 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.401745233 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351863544 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.349895574 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351578745 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.407566707 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359545774 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353844811 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350813205 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353705352 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350731157 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.513546016 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400174195 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.352578559 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408664096 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353367453 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.354381045 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.3535288 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.352925143 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406391596 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353644787 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401928737 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352127361 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.538066198 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.375424924 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356606517 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356452532 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.356592922 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353525888 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.34889942 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361161861 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.35329006 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.353366157 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.359856183 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353455477 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35199462 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521112932 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462725478 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.35300892 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.36641994 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.361193127 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.352272851 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.406399917 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354919606 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353277235 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405184964 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.46851428 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.408661129 seconds)
  done (took 155.449882749 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.35945283 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.363055955 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357453495 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.377438465 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372512558 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.354563161 seconds)
  done (took 9.437593703 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.356429614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358381397 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.355396765 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.356009562 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355735556 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357302028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.356646709 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356505038 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.360778652 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.356244825 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358345704 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.361124705 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358045531 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.356304434 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.356219037 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357383351 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.358025299 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353791303 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.35636891 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357417194 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.459939829 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.356674801 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358240171 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.359790622 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.362619017 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357493378 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365038224 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.357389366 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.358427038 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.362196393 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.376486149 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358286966 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.358741104 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362432553 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363345535 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359799711 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362048194 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.362299278 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355816168 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.358826905 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.364339223 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35783621 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.358742036 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.364007521 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36058991 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36459045 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.367229434 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366975682 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358802196 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.364302198 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.364303929 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.35994941 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.360956417 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.36312172 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.361748093 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379501634 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368047667 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.359633895 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.36083782 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.362186011 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362648655 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.361417386 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360862852 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363730833 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.358631755 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363699226 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361651853 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365608773 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361564193 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362456764 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364522792 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358454895 seconds)
  done (took 100.327651708 seconds)
done (took 427.145598491 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.663318754 seconds)
  done (took 7.920885125 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.420636548 seconds)
  done (took 7.681291923 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.473569086 seconds)
  done (took 21.741076629 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.432497371 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.480100404 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.360788137 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.366749863 seconds)
  done (took 26.902038199 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.580319598 seconds)
  done (took 7.842148903 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.357681082 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.349761035 seconds)
  done (took 13.968709283 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.957134039 seconds)
  done (took 8.217150642 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.449702286 seconds)
  done (took 7.716658976 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.361585039 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.390160983 seconds)
  done (took 14.026267132 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.337812045 seconds)
  done (took 7.598513668 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.30161084 seconds)
  done (took 11.564564092 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.368241848 seconds)
  done (took 7.631624589 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.382048654 seconds)
  done (took 7.643427757 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.17799482 seconds)
  done (took 9.439546203 seconds)
done (took 161.152738334 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.35806184 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.353385579 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.353296695 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.352330906 seconds)
  done (took 26.678549857 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.39982253 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.40084859 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403913255 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.412467252 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401338832 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399465631 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391550162 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.392355669 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410597239 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.401293523 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400803998 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401202624 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.400120046 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.393044255 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.40349921 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402382677 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41105487 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.40040099 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.393028196 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.40224176 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368183948 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411349285 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.403443547 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.3674137 seconds)
  done (took 34.834787188 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.89246841 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.437608009 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521220143 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.419941126 seconds)
  done (took 7.535250143 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418904173 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420880013 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.430548833 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.471317209 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50732235 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430181491 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.394898354 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.389807076 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.373451322 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420569356 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.498084312 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.436550749 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.5115042 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367996682 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.556656014 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.36677451 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368832764 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.419267244 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.471885616 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.486211505 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.368406187 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.418839626 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.422940663 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.4378616 seconds)
  done (took 35.655019875 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.368797657 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386026188 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.368174894 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.366344705 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.3759623 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.368947274 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.368087218 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.369377237 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.366678499 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.375531674 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.367298353 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.380658233 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.36753354 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368836428 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.374674808 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371506963 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374819953 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.366546203 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.368850967 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.37540777 seconds)
  done (took 28.695175383 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.361661908 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.215583022 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.7144096 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.619428445 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.365429524 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.364024262 seconds)
  done (took 27.905165623 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.435569476 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.583590477 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.37069699 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.706985749 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.799850626 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.385417804 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.370483129 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.603938497 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.900293763 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.890928526 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426718656 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.436963296 seconds)
  done (took 20.177669446 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.375596353 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.363543385 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.371246541 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.38083627 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420936118 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.391104825 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.37676984 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.363619155 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421980007 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.440842898 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.388176962 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.423953641 seconds)
  done (took 37.986165636 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45321366 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411139647 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.25896807 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382178101 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08532513 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571805952 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414351337 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080358486 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386683076 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639456034 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365293494 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474710418 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622919623 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369980731 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367186504 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.294803974 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607503277 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820518061 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370298123 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.26357684 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394122636 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367283761 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.342262801 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590641729 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596628766 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345352624 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.628387102 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143765038 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642275579 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382245223 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379825035 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368103655 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643521309 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009115569 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481652219 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571105132 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390094131 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.914160694 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.353308235 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.269454238 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371909871 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388472247 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380187373 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366909547 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302207621 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36886067 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109321071 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.390552862 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.079307438 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368459733 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614666361 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465825374 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373239779 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939236502 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398057886 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.375492173 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.373287461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460278638 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960603342 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.524925173 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371774459 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.30551722 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372231141 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294194679 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971976934 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.389018988 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373571176 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372916151 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304522255 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.271073063 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387555123 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51735788 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.389359809 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021498148 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058240942 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390956049 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.299463596 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885002999 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371958456 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.30647136 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599533914 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148747386 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3081706 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.317778921 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304117148 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025826183 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380235378 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.727609729 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393790904 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107262236 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593286356 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405196316 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394434873 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594441577 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.25112874 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372204304 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.386256485 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500171851 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387452606 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093207628 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323260114 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.369494958 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629645756 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.583995116 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372764895 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.298912345 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861267661 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389231973 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.386754268 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375339166 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579275244 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.942084282 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402355809 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.536997351 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390200322 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148422419 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065658525 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387276199 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.37755614 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383027698 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640186211 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.083100015 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256215785 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441566446 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375206755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374349506 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.314253935 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223133891 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.277927976 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.562773477 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391269708 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.401155175 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.373675132 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319589746 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.366967212 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377692906 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.152307929 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598785056 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379724465 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649946173 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308738713 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523043765 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378242604 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.591955716 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.542378712 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.394764335 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635058603 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376427305 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390322053 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400264436 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394413989 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475085087 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397580877 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.384799758 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632727204 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.380437649 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.379160447 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.311170167 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.157106563 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380615879 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.383306968 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378613226 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95536866 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369000294 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379595811 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267008347 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391451576 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442573217 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382206202 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583157522 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.561492014 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393395657 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.382543837 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.380212903 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59994761 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38589156 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.292288942 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457051299 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.848002121 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951039874 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406713625 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311026597 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.089559309 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.068845042 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377382909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567455185 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379085123 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584080013 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407734034 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391328419 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.936139752 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393879856 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.300645962 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383143532 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39054963 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.381411649 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377890806 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.521458516 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.577724871 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389097189 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.391305109 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521734726 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.392101263 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313568228 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.898088093 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384134361 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379621744 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.157032073 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41517489 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.31849949 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172489998 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647364638 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38183479 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625496122 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.398870009 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.413551404 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.378318056 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378111125 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39205015 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.398530166 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399733516 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.391612353 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.301432495 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.820773545 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943362631 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090127122 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904450318 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655872303 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.399778085 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.265077214 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10568308 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326847166 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.040146055 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609495713 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111911082 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335176206 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851124064 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.568098429 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134054292 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629693531 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611149157 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.634469335 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.391930795 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631422088 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592220799 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417636608 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382197173 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311234955 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.892625229 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929475821 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392063947 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460189446 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110278056 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403589281 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.160339179 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.420484086 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.037397479 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77563795 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.943345784 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.771229684 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379572888 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383236604 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177986154 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405018528 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909695298 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985712001 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403692226 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.858236396 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336853458 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592540162 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412055501 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.379944611 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.877823459 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.39833903 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638596481 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63219833 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318283179 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394409086 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893085125 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.254344787 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.392471536 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38478676 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081019773 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386331017 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659231449 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.391864431 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.551701129 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407416481 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.3204365 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320550978 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.07810156 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387845724 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363812411 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835716528 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.399520548 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397349145 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398024121 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233837747 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642952505 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.40062982 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.947260537 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627749504 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38492344 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40969043 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.391586207 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386407122 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.386391154 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.270432058 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.051148256 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405998351 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629806305 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.311940357 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.286621116 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.425940513 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613216735 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.284381164 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387839027 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637919143 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.1157051 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.404533491 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06522995 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428202325 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388980002 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402060841 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386522768 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407768372 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474114483 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597313824 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.416852352 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399258143 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783421528 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405972101 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392098346 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.402582791 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483527582 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.60404722 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.558051893 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.177919197 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950138574 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113839427 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.966493219 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656183907 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392048668 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390941295 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323795085 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531136413 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915399973 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66301433 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521008075 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.400014941 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412442437 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400153043 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403320482 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600511379 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665306922 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.261332065 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403061148 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047403128 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.549147188 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399758656 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601332598 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852112658 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921463848 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509096753 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390103649 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098838505 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673214215 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.482328213 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393325418 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98056511 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.399341368 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.04604153 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.398221602 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400824267 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538371364 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63903467 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041858452 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.410356616 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.551692 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.164321138 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356120039 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648558046 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.853017666 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603389543 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973140677 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083387521 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654924458 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464352784 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604015145 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.512882128 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54166044 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.396203634 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.294220076 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392803832 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236626112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.104555961 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.403376453 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961066273 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673899244 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.397912899 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.396543978 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416360295 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.403805734 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615633393 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063326968 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618682804 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404149807 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394846498 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.96376987 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960325118 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659365436 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330036469 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.391362415 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631593708 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647799812 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419838603 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.84729614 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.105549286 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922859074 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.367999897 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416386599 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395903293 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.073044022 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962514967 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.597151874 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871106553 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.054625779 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405448885 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669223755 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.401244959 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405029946 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672450263 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.399780784 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396416584 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60847165 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.979105115 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155193434 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.40415066 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421351624 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.332441996 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.623873119 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.493623643 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333779363 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389625352 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.795745483 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416255702 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526958312 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403091708 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.400364913 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400452659 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.130092341 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683139095 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.395761775 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.386071008 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.400048782 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403982499 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48894098 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951439307 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411832507 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.07407172 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.74992533 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653845743 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.398594208 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.376137784 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.401378877 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395663577 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11636021 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364168384 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395814712 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938932354 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.400359213 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.423762522 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401394406 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.613624822 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61178192 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398405596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608988169 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416929892 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428622389 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.297800258 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167445838 seconds)
  done (took 1676.491661126 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408371004 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.4063005 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.422874195 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.407639241 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445411143 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496927136 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.468756794 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.492705102 seconds)
  done (took 52.847743476 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.405201574 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.553480919 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.428968042 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.411762407 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.409375999 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.408526765 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.850780911 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.42400365 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.40744845 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.409875574 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.411358595 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.407778613 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.051348122 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.408058085 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.40636019 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.379536143 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.409119377 seconds)
  done (took 66.487598106 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.418332076 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.716910827 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.082238001 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.476872953 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.423989346 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.408154664 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.871151868 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.407303722 seconds)
  done (took 59.105126911 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417009777 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417341074 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.417898264 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418489199 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.41829268 seconds)
  done (took 8.388292884 seconds)
done (took 2084.053028814 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.402865547 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407668787 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405232248 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.408428964 seconds)
  done (took 6.922289931 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.378482711 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.127969708 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.373425497 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.386979099 seconds)
  done (took 18.566945306 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.421027674 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.429719133 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063386695 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026341944 seconds)
  done (took 5.392405501 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.148292321 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.16239373 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.148425021 seconds)
  done (took 7.758978121 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.399412803 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.399347913 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.401139004 seconds)
  done (took 20.498853097 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.696926103 seconds)
  done (took 2.996982561 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.548744481 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.597795991 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.718152401 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.72159773 seconds)
  done (took 7.888030688 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.790711882 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.772852399 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.592358736 seconds)
  done (took 6.454722958 seconds)
done (took 90.631340186 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.208733464 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403475334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.603718954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.086982919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.622696286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.605163154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.60595552 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.21245256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.641385229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.719476171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.273489697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.631289216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.765974712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.404707266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.763991171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.64970133 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.631706849 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.268836462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.846018687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.029767126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.600789497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.728474909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.061112142 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.794223991 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.632463695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.55813938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.320538523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.643284131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.943053925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.380960298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557649323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.180383905 seconds)
  done (took 193.677330145 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.402722544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416135875 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404198795 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.401615399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.394153223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.405111234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.401317921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420038277 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.401780546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.402035754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.422879285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.395714634 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.410585729 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.410461462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.40870389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407657077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.395240229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404013476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.422032701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.400049174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.396365872 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.410677937 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.393852121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410023371 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403440035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.397877488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.395832377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.422168424 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.399799055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410386876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.418618308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.402349851 seconds)
  done (took 206.288598933 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.401145391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.414278839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.40935669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.405134661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.410050126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.405349809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.399189075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.405438483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.40158963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416308536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.39658086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.413870357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411794071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.414762156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.397515741 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.41386049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39753781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405641308 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.405746989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.403648637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40200168 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.402521882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.398072965 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.417046629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407043855 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.398572088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.408498106 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400376093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.397600697 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.396559014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.40605792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.404394243 seconds)
  done (took 206.272539437 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.601976008 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.414658101 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.414834711 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.350871959 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.413863479 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411258287 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409033164 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.611446214 seconds)
  done (took 14.933117341 seconds)
done (took 622.487989142 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.679061869 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.412051107 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.610811771 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.434560662 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.173542208 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.451899791 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43508304 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.599359216 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.330173329 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.6046057 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.695300017 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.450636793 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.834695924 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.43417774 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.681947737 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.533588895 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.333339276 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.45967239 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.74477996 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.93829928 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.689669874 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.87110294 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.617765621 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.341877263 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.850644465 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.880069371 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.139394016 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.32126496 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.447058176 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.750438136 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.082459563 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.398338926 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.491799255 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.489619228 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.545912938 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.528312073 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.367606644 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.487905365 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.627100723 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.641005832 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.93845507 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.149319032 seconds)
  done (took 94.800386892 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.39815638 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.398150375 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.398383111 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.398354804 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.398653018 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.398955421 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.399266449 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.396296241 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.398799715 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.398322581 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.396302821 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.39802974 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.397437655 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.398521634 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.397823153 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.397693253 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.398043802 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.400332225 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.396374193 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.398565139 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.398510298 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.400727349 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.399238248 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.397559173 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.397058531 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.399504687 seconds)
  done (took 37.665524819 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.418245748 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.668971105 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.818440863 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.42349628 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.41725042 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.422195171 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.492155667 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.419009284 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.422180172 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.422600161 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.570556283 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.421694328 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.454693886 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.847896031 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.423971208 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.420157409 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.419902045 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.419589204 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.677113877 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42904743 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.514750096 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.420683997 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.493903814 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.428886408 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.441715762 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420477439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.422121464 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.998913674 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.439526941 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.570226079 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.182933441 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.49110826 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.939621984 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.848279598 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.182027665 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.421948813 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.42162411 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.575968484 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.424153949 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.421173647 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.491407569 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.422504825 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.833622746 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.084231234 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.437831113 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420864239 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020775431 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.590053643 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.654331587 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428809478 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.856407468 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.42703773 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.424292016 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.422653408 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.654553093 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.429717053 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.422389172 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.022549329 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444152374 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.498063646 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.423342331 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.423364153 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.67698395 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.42416295 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.667296549 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.425901662 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.430031598 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.440499921 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.8373688 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.425511257 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.113603667 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.440617564 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.423477445 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.573829627 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.668026444 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.053629464 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.443664076 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.682573927 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955539999 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.513168948 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.427242203 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.989649145 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.516408604 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.427857772 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.426551227 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.42754527 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.425526524 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.471643909 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.496593853 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.044634553 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.118559722 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.049031787 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.518175305 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.438097443 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.424458791 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.026812898 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.444315028 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.425910905 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.82874937 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.110414927 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.442209552 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.432233158 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.111734818 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.444742108 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.500642522 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.430983105 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.846206734 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426090162 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.471007108 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.42670223 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.434174248 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.447234047 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.498713967 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.430021683 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.42796048 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.084606905 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.60124851 seconds)
  done (took 186.906452442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.435115965 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.411328247 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.431790155 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.410805103 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.420111757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.428073198 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.420342698 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.418342222 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425948262 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.419580983 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418742202 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.418014835 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.421972359 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.42324998 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.421037322 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.426036364 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.032913281 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.420289368 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.419604999 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.411628395 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.209081934 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.42319437 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.430893421 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.414829727 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.423556631 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.420673681 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.424703813 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.434479323 seconds)
  done (took 154.535453561 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.427987659 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.970671514 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.436213561 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.552868801 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.449719199 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.426447455 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.552292774 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.483365046 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.442478789 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.426917369 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425522946 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.721770221 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.428685529 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.926868158 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.612302544 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.568640546 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.92738719 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.444718166 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.426541844 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.427536585 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.555698735 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.429822663 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.723297315 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.977547181 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444865995 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.979768118 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.414603124 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.430303973 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.430454658 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.979608038 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.443645823 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.724037927 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.505080327 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.486939089 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.993508733 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.945075518 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.945274069 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.572436354 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.431651812 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.427558405 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.428420549 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.41363807 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.980053904 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.447292071 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.432414866 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.968262162 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449740695 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.432766069 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.436956441 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.430783038 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.486176093 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.502629383 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.743823214 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.987574772 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.518648228 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.444221354 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.554903498 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.808029734 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.433671256 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.930135963 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412615693 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.983965279 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.447581108 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.41497763 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.432790824 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.435515084 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.571510762 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.55802903 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.93320006 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446813096 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.931922403 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.589241385 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.429937421 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.43101002 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.433503392 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983961946 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.947851885 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.589319282 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.560915223 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.615210672 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.415537792 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.431101686 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.416365543 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.506950949 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.431963848 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.986687375 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.948928999 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.446848643 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.435081382 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.434292182 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.432036909 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.601861681 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.002196831 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.524349471 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.920803169 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.745588777 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.730297231 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.435190096 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.490395595 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.44637609 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.733778052 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.434597734 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.489714647 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.875823988 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.732520651 seconds)
  done (took 169.271496189 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.662740168 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.644425356 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.522124853 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.573705756 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.027678154 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.000882045 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.72054254 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.567751827 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.536160395 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.682454499 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.555654184 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.523170267 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.640903727 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.510080806 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.157526801 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.517589242 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.537995274 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.588570928 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.590295716 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.463321795 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.082955544 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.708455555 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.622491315 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.329079777 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.524960153 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.173186476 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.985982356 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.00604306 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.600227468 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.737298833 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.972394676 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.567129241 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.368745377 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.112526321 seconds)
  done (took 68.141704099 seconds)
done (took 712.627635956 seconds)
SAVING RESULT...
DONE!
