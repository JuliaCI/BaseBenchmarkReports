cset: moving following pidspec: 30475
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.252782946 seconds)
loading group "string"... done (took 0.465925246 seconds)
loading group "linalg"... done (took 7.618539862 seconds)
loading group "parallel"... done (took 0.172985315 seconds)
loading group "find"... done (took 1.186924015 seconds)
loading group "tuple"... done (took 2.122345972 seconds)
loading group "dates"... done (took 1.336898912 seconds)
loading group "micro"... done (took 0.246713046 seconds)
loading group "io"... done (took 0.651599615 seconds)
loading group "scalar"... done (took 41.949251842 seconds)
loading group "sparse"... done (took 12.89041861 seconds)
loading group "broadcast"... done (took 1.111509566 seconds)
loading group "union"... done (took 13.982902772 seconds)
loading group "simd"... done (took 4.758292652 seconds)
loading group "random"... done (took 9.841479479 seconds)
loading group "problem"... done (took 1.966779553 seconds)
loading group "array"... done (took 22.584855004 seconds)
loading group "misc"... done (took 1.434933723 seconds)
loading group "sort"... done (took 3.594577877 seconds)
loading group "collection"... done (took 19.455359059 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539502684 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142052791 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132076877 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148486334 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206373188 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144724008 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158826056 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.115855394 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.002924928 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178625365 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154303592 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513689184 seconds)
done (took 5.165203036 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221639554 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09451065 seconds)
    (2/2) benchmarking "String"...
    done (took 0.1038745 seconds)
  done (took 0.866917874 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078946364 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145597053 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09413433 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078519434 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094455091 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078476666 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094770974 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077346733 seconds)
  done (took 1.340833085 seconds)
done (took 3.187246575 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733253483 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278031945 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202888742 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461371527 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197876386 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214599436 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683072974 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.352751061 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.257035785 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099335469 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142598637 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388607835 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135628877 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684326302 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092609437 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125528563 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180714987 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.458077456 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084264004 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112297053 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117654848 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142851834 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127824215 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090572735 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184521668 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081681434 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192507284 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108032244 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079957438 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290602729 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201132347 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692549097 seconds)
  done (took 10.903000354 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110012993 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13253466 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097674386 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139183091 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13391868 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098634866 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087362875 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095945207 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120832091 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174260056 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113288489 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136010019 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094359127 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081584822 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11530529 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243280552 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12045076 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10322264 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100364038 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103166325 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121012246 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111810665 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108003587 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092852045 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165961751 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220665156 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113197601 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127071112 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0986645 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113640769 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146157444 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144877707 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095273412 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079145861 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173094953 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123980962 seconds)
  done (took 5.124756684 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186946758 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120032066 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167701527 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161895458 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139042912 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159702297 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112697869 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244944988 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.105574434 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129899723 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164084819 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143066913 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117157695 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081131937 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098167322 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121509727 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080861853 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.666690822 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166669177 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136649455 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11664812 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090274287 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102759101 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366940582 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104385315 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081852682 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099201534 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066958996 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160663972 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099495455 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.14897361 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120023083 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081748349 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139202564 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207188224 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109953452 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135433987 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095737038 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079559806 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179575786 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104464777 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079952316 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12252828 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135720712 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13578262 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097577558 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080599127 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205979317 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098558348 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076252724 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116255087 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937849895 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18157241 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104512292 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097409609 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322365109 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097759074 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096568136 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078524841 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.265641208 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.181983857 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097844967 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080475464 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097876246 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082203152 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403697255 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082496589 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.647249578 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088908822 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108684926 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084587964 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099102551 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105715146 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088971099 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115724477 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080368933 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100733171 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081244587 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098704555 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083968536 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095911115 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109151519 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086039764 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097812438 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148353057 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095789413 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100184963 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130008893 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102727276 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08020306 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134169372 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100744605 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082195964 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135776459 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100091496 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093512917 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101533587 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144833865 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098762996 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.163127711 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095168177 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127867489 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098601308 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11374469 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112987103 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099063841 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084146038 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095477243 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077171576 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163975982 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079256699 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097663785 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08075013 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110468037 seconds)
  done (took 22.591502579 seconds)
done (took 39.291214496 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.330380223 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105247225 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103660802 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103221361 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100356651 seconds)
  done (took 1.488421221 seconds)
done (took 2.211199212 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287807474 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172966213 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094722409 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167440554 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093481648 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173453238 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158993228 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112200055 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219114533 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077593162 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163351439 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093928549 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076473467 seconds)
  done (took 2.639046494 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095189799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114586543 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083127732 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111475942 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077027211 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113105012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09387275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119949968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11212944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086181601 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095696533 seconds)
  done (took 1.82169073 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094777263 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115395756 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083675971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11198675 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077491922 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111855542 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093625613 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118449712 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111001339 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086673196 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095654348 seconds)
  done (took 1.822063317 seconds)
done (took 6.995650318 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090957491 seconds)
  done (took 0.807098939 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.923860935 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.848531825 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113178997 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149745635 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.30339554 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193375287 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.472957016 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12494939 seconds)
  done (took 11.057775497 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.146917103 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085279991 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101494677 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08276915 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103792484 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082635373 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09856482 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102124811 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086637269 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102033712 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085042083 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097681826 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099425268 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084597299 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100098796 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085545274 seconds)
  done (took 2.32768166 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119885708 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117933082 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1057777 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107831448 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085981218 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104175457 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10491018 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08972134 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101844869 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102648374 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089876346 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104384183 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103307482 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079526035 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104407153 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106540085 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08590025 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105029783 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105489107 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089914462 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105346392 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095061616 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086076751 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.1058733 seconds)
  done (took 3.235721439 seconds)
done (took 18.15055547 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159457775 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107727582 seconds)
  done (took 0.991357855 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094670494 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111698567 seconds)
  done (took 0.934999407 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096864598 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094805983 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120457313 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109240501 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080228706 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095646472 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119412447 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080603001 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096565695 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080389925 seconds)
  done (took 1.705890775 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083012639 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108989062 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100254823 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095145181 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104489237 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09425206 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087318841 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098988916 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109069894 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077416155 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101710655 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113249597 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084940712 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116821475 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103921898 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083085329 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101611324 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098104753 seconds)
  done (took 2.493824025 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079333557 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096533644 seconds)
  done (took 0.905790583 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081677696 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093530815 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081284663 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097437628 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094579265 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078137288 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095365501 seconds)
  done (took 1.351761564 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.474916001 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135476865 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255975014 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086230099 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120083815 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.312966377 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097352301 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083990471 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102784053 seconds)
  done (took 2.456947063 seconds)
done (took 11.570744054 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092629304 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117083953 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111938951 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466116305 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106963557 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096660987 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158821159 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249129293 seconds)
done (took 2.132507258 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148568374 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323832827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113386014 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066891387 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096505837 seconds)
  done (took 1.337095622 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079716855 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10004478 seconds)
  done (took 0.915011235 seconds)
done (took 3.13709135 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080882021 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131710474 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081480144 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097565693 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081974698 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09756006 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079029787 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099910681 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098458723 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.08075098 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098976948 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081674197 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096260466 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079199798 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098248294 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081285227 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095991741 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07951401 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095491767 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079272659 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099129964 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078964443 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096051104 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07917385 seconds)
  done (took 2.937863616 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098527444 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097408887 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103102843 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085893669 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102709184 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087409848 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104156916 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099749672 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087232695 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10096934 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101737408 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086194022 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101523519 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086234735 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10076215 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102662124 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08765267 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099593116 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083974658 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102849837 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10486975 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082680783 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102212262 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104170012 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085206889 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102867038 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083991474 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099771895 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104258573 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085680857 seconds)
  done (took 3.617472118 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084947704 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093382146 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078845557 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100918055 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077517282 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0971807 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078585997 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098374242 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079864927 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097036761 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081448514 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096054802 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078896937 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096532549 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079791154 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098710929 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106534773 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078330436 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095794896 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078787272 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097700331 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078248595 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094992947 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07730774 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093720133 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077118771 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095253581 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077989079 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095626614 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077544854 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098306247 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081579086 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094539839 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085851327 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098348198 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077980745 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097854927 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077897986 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09515002 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094475743 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076973709 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094420846 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078127675 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101868225 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078070417 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097331185 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077767181 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096570683 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078381239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.0987082 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077438041 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094249027 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079600162 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095208522 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099082896 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077313056 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096655403 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077419433 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096846418 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07860025 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094267108 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077137543 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09637577 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078779944 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110086037 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085003041 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09442353 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079392331 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096194319 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081045771 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096306717 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108384919 seconds)
  done (took 7.136734675 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082765897 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106042569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081020657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096068801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077160274 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097895977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100738734 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079692242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098633389 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08558831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097631958 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082148874 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099305684 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109322962 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080353058 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098964068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085871948 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09492487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080221854 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10163559 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08093932 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101152535 seconds)
  done (took 2.762144418 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208447419 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104425267 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141066266 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106914119 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083812996 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105690113 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102171242 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086940117 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103588244 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084888104 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101525747 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102653202 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084322931 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102619399 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103685344 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086081009 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104282471 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087009654 seconds)
  done (took 2.651012289 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092868985 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097928692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10247107 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098361815 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09925375 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082871844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103137174 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108894686 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083412183 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099038878 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090328796 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100194952 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100483172 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081085435 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10067253 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080286803 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100230017 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082120371 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107209112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104501614 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104375059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090030794 seconds)
  done (took 2.862873726 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096585119 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10051358 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116732813 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083826751 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094067705 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079661098 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105556154 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081621054 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107765953 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100758941 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081786453 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096848202 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088815751 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09739349 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103742453 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080717867 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10259539 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083378518 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102194349 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078902262 seconds)
  done (took 2.634992117 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101536678 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100475846 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100058985 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092073369 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099902778 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082451906 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108709132 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099727238 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082947406 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123389194 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099805232 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083952419 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11048566 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106029675 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100512148 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093496085 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110967045 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112462236 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08469583 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102014756 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128360877 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196506516 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111273032 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102475851 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08491235 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1023512 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102826322 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090790898 seconds)
  done (took 3.670774512 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08126119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100622801 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080595256 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098379588 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080228147 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099393022 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08022345 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09844477 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083579771 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098786834 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082962299 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100362877 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083090555 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101269125 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085493406 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100637541 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083088685 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098426141 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080251449 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098352317 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083026731 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101693634 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083436872 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098476681 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080079686 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101293512 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080866201 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099244566 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083180498 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097987633 seconds)
  done (took 3.482025169 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090406665 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106770424 seconds)
  done (took 0.955382251 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078499656 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115373179 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080157649 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104895028 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088929016 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103130941 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110314312 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088634188 seconds)
  done (took 1.525724304 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096549893 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112843193 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085486071 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114932902 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112966556 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097252429 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163638419 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101997165 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087908007 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098277601 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095916342 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.09989352 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107507852 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083534074 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107892537 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089943432 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.10022532 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089585453 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105145876 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100147925 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085444988 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112815536 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086287261 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098126664 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085814714 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113313628 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111477514 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085325964 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104616394 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111257106 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090389117 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096154488 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084287944 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103429177 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08230797 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11161525 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115207337 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087223677 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110815316 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0860057 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113974057 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096921015 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088897544 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107689092 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094554149 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103429959 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084855846 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097721914 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099807966 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086774301 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096597458 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081795441 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095392718 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090234656 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105821794 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115669141 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082135573 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10406736 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08674404 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105275103 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090483574 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104532252 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087256333 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101388789 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108876425 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088048126 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110059642 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078939411 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096524731 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081891707 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111296804 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124648876 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091303797 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102967515 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085279912 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099971276 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106133349 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085945899 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109445148 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092623437 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101541933 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107262199 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089842228 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099928421 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084279874 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10811462 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097461721 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084370223 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097305511 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096992732 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099323475 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080457945 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09705736 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108169591 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085237761 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101190265 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082864251 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110394994 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081255269 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10425346 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085850884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10214246 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110539851 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089777393 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10812946 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108788787 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090416892 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10121156 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086929054 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099255555 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086233767 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105485218 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090310251 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096706193 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105519408 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086600077 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104392791 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091608774 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101039216 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085149467 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110425608 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108029036 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082459565 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099620793 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087685533 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103083081 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089024094 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10994686 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100365623 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077048216 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096234048 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086291966 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100945775 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088641218 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10772422 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101859462 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076436809 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098789639 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088482143 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109302467 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100245325 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082448208 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104097305 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082721529 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099959213 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088545828 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103258623 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082475639 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10603853 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103768805 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079745824 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107809636 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088379283 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102106265 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08856631 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107029164 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105046777 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084535916 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099953604 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088397088 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101690037 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082733563 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101712327 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082496047 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109805334 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103691876 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079205713 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100516144 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09267983 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101031123 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08491903 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102084342 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104528819 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083410059 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099834829 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082277416 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103942697 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095116748 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105320202 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101473955 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088497388 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110587607 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082068825 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103119378 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099740242 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083780185 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101338068 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089482628 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105566756 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105962074 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084896681 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097277144 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088441102 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107186266 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082001488 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098560624 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081492004 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104024065 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106867557 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086001707 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101461038 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080876628 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100953922 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104259984 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085604589 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100246431 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081693205 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10547261 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081997374 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109567879 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102664745 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091887462 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104402579 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078040044 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107094813 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100309776 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090442449 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098710092 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082608543 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102272114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086427744 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102581255 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088302577 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097574482 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092086378 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111959264 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103705757 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084424352 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10394362 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094356737 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104968478 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088938542 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107224989 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108043627 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09789673 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101279464 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088424403 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112895599 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103721095 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078964258 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10833398 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082834099 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102671394 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084010856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102562707 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087853396 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111824261 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10690802 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078532734 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106441096 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084263165 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102611649 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080402816 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110103299 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107148586 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085274454 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111249988 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085610289 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103897774 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08885075 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101835609 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104151956 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083949948 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10579114 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086629955 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106296781 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083539365 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105882212 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10310183 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083067409 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104712149 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087107098 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102563884 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09039816 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102734575 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084910022 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105804957 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102890222 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083808312 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101124701 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082174613 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103770737 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083547409 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101450237 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084891051 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098374361 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109275621 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08268319 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107787385 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082445782 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097573739 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088057513 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105962943 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106715761 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083963879 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103300265 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087797727 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103333386 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088912535 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11359148 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101837626 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095038011 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109299228 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085675027 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107654805 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085464724 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104725882 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084088246 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104666702 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103880535 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082626526 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102389408 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089089281 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105886489 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084246891 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10544869 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104025617 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084256897 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104958534 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079137757 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103703253 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084899016 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104337655 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092835751 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104023245 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103899642 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081743628 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102476585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082204408 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098113933 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091863129 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110048404 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103055959 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091471375 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100736328 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085098276 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111150719 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095840001 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082489956 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099429428 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08081063 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110194715 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085937411 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111495387 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083018194 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102003998 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098341382 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084009172 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101337244 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077386821 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099545017 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085336662 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104411503 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081525685 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10357254 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086198021 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104568825 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108039312 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082355762 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104652158 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084459069 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100115185 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083126397 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102458021 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088850677 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104422582 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101798181 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080388328 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102127828 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084956474 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101647301 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08438494 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104234611 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098770236 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102153403 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103777901 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087030592 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095861526 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086272709 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101420311 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08263369 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100737371 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08720853 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105633873 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103105234 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090254723 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101250645 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084918954 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103845969 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082816996 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102848321 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101769082 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083410849 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100187662 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084931537 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110371907 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081532332 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104856104 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082540619 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103346004 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10660419 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084129346 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103675078 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090983113 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104513635 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102047406 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089984398 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107182603 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088098554 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106899887 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087219958 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11090877 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103452538 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094116391 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104386315 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086212334 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105196964 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080801891 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102628977 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082065273 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100183505 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106810482 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084241218 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100709084 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082505073 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10078527 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085238746 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108880411 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109891454 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085715302 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106831569 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.08063019 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102251046 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087187894 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102301902 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088006825 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106397354 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108070298 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08563344 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102594543 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082260846 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11053622 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089847377 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10722045 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100128727 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088659182 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103169362 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086074957 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103769071 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084333074 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104451012 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107227274 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085251344 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.1026057 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091133172 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106628328 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084963636 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104745581 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083350173 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10270098 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097029225 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084484201 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105212785 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090751159 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104572176 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083394595 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11180101 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101076684 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083955138 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106166025 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082869053 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110235818 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07889084 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104400071 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103631276 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084502985 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097298675 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082190124 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098917865 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086711587 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102578085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079380367 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112457907 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109681645 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085819718 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101232155 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082182616 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097973568 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079322955 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101019294 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084986358 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104460724 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11049626 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083003761 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101001706 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079586109 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10213296 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086548613 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104967634 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080832794 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097631295 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082244808 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104883446 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109389448 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082440641 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102662464 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086911867 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105170427 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081327275 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107351036 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098863138 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086912066 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112575653 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085133713 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102944963 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088708076 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110952703 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102565202 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078352627 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103023452 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0856227 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104443544 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084383857 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103905315 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116519495 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086635389 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10296941 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082657862 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107108128 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082572612 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111200806 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10415985 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085338542 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107141726 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085539721 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114466806 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105348678 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089714762 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10479742 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086091857 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102839977 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084009762 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103860554 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081769237 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104792238 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102926068 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088302797 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111049347 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082655061 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112395267 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110206426 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.0896183 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100539811 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084033086 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104940638 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080945721 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106264736 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082002157 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100709521 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101069572 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083222963 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103225674 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089140197 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104539628 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085576498 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102538504 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077294614 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106396721 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106623072 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088506669 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100687979 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084290368 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105190424 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089976868 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108029943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084757652 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104926973 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103849576 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085701562 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098344987 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090707753 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102509628 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086661015 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103542368 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085423608 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107429597 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106581645 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090577106 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105384972 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087182713 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117660774 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107270667 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082273136 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101053168 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09023422 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102957627 seconds)
  done (took 58.27628268 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145652738 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080863628 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098930354 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07975361 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112680689 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09989081 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079787841 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099119539 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080432938 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102650381 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079713556 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100896023 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110112542 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124285641 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093552553 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104991293 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079685661 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100472117 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098279056 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080934315 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10928367 seconds)
  done (took 2.867406802 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104090199 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117316503 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115148187 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119792128 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089555196 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116148 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114328541 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115199078 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101220527 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111470706 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118125959 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116158075 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092724216 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111594151 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111018629 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094067824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12088131 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109615393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116675943 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095661652 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113979788 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11492743 seconds)
  done (took 3.225979947 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085184981 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104342542 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085485984 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099983137 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084184067 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098684302 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088127043 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104318336 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088834364 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104801098 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085139613 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.106000765 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108968049 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082303483 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.105392455 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084523974 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156637486 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110658414 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086826732 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108053815 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.102418544 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090143374 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102024503 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083160319 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105069284 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089129038 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107172644 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083877436 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10632027 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085858559 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10645466 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084491572 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108071626 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107029954 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083386953 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103138646 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084708468 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102134747 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079861876 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101346747 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085111746 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098749363 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084933353 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10546782 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082382329 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101450282 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085404688 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104641997 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098573885 seconds)
  done (took 5.549083586 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104535919 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163077419 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085955291 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144099948 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122230797 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112645196 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087607936 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142853364 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105008228 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084914597 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126135814 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120161429 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103273822 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090003831 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113342154 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103919704 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085895735 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103971642 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110432366 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083791089 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109876065 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091013125 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119701341 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118159998 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108019316 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083977876 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105880669 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109520611 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097340174 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110352288 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11004445 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090308368 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121108802 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108647079 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103207531 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088112693 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122354544 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104084142 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088243926 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102000012 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087716882 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109911518 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110699413 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122949033 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085975412 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109152757 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085326002 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101641033 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117279306 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086863882 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11291198 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119760233 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108304205 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085689176 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109637717 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120796778 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085000947 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102802898 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088366977 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118910424 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101556827 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089119342 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118733238 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106545046 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112222028 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098788736 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109847074 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107994355 seconds)
  done (took 8.148615653 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094166859 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111980095 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121237152 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120672711 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091280145 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111618197 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110653481 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091219088 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110636331 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116772088 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111141848 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134545603 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086733145 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11410017 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110999783 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092624526 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112074189 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111212681 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091842548 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111240813 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110491791 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121003649 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091611828 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12137365 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141665579 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106804801 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091212948 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111332315 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120824544 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111305002 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12358977 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091839899 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111182324 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121210209 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124018779 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090968169 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103764089 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110011425 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091934009 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111336641 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10518644 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100911253 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111606953 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106498243 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092396444 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11221226 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121507392 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123648471 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114095702 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0970329 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112013094 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12202535 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111231002 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091501761 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119691187 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147640162 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120914493 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120781134 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111467718 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101347863 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120487643 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129693763 seconds)
  done (took 7.67561513 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108103887 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116291949 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118436784 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100182422 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083965045 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109120071 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082586037 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102757127 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114737533 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095110173 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117421831 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1088617 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112038185 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097341371 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109570331 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112716689 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088111856 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10934949 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114081848 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109942165 seconds)
  done (took 2.930528923 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093368035 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12473863 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08483278 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112821447 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108127886 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09157445 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107261311 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107752788 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085854563 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107406663 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097207326 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116899144 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105801269 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092423595 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116924281 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111859156 seconds)
  done (took 2.485590576 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096345343 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116949346 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120609707 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084392479 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105942417 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101492014 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085974283 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102116592 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081475699 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122921105 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085085123 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109637369 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105358683 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086005423 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103918858 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088924295 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10437079 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083720794 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106650475 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120842345 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097082581 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106365978 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105955964 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087928459 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105721974 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090464654 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106487093 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103716054 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083561144 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108412357 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085592317 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113855488 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102108153 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085171916 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103779797 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082605923 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106569093 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085671798 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11125709 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105328479 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083681215 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105026144 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085208056 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107498776 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081532563 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105901356 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100120915 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091023992 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104186885 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085365734 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107023384 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107735434 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086286278 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117751584 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08896468 seconds)
  done (took 6.272585602 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099739721 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109116411 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081391509 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104055104 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088019852 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108298776 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108232136 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08860924 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107787876 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083557074 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109078365 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089320048 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107545634 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10804444 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087116452 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109323465 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081211884 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107428995 seconds)
  done (took 2.611468701 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090809044 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105305946 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093982249 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106465396 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0852152 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108652245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080468524 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104623688 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103428835 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085567219 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105316736 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087797594 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104589098 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087483435 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105514757 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085618638 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108491084 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103852852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086413384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101408919 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087960064 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104351915 seconds)
  done (took 2.965439598 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118235511 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128658754 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094478093 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231691452 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104048108 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132873011 seconds)
  done (took 1.643576364 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109703639 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122024894 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105903899 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10846984 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115585676 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107511975 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088006685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108008258 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11813541 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102117657 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107921246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117157699 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117593437 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097231408 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114500548 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114817587 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107155865 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088617716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107043307 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128854606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088677551 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118430854 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108282281 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087627828 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108244339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117003225 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118181518 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122516522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088142116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118301934 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114669401 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088337497 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120546284 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124120331 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108762757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097904135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108711379 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127901543 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113505155 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097211812 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109192637 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114938578 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097693099 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113867738 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118266013 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108582201 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093477811 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108393444 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107603377 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136476611 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094041228 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117552447 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115636644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118974923 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118362005 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135946968 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10274226 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117774313 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115319402 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121814924 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117953021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094673391 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11755615 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123429897 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115654462 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117593381 seconds)
  done (took 8.151071757 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101760325 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126791496 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108565378 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122530325 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096723038 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108269098 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108078989 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08779666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109395346 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107070321 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152611384 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088817372 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118302392 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117616011 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109491511 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088191839 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108173991 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117771112 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087174411 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135015937 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10814127 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119580379 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118257564 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097230986 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123108081 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114999407 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107744757 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088278197 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109114708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108365317 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093457852 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10904975 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117895013 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08699444 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117710149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109607669 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087523109 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114446376 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109208617 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115839223 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096620608 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128012748 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108491182 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108546718 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122130319 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088457611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109117591 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086983705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108783179 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107689673 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10243119 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123089944 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122504659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118125362 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108879356 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088216478 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111136442 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107443595 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088125858 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115931661 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117359746 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108589048 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135010643 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088276125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109060499 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11855804 seconds)
  done (took 8.021748208 seconds)
done (took 155.79643752 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099046982 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136885455 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098242236 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170717568 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106679054 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118908472 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138003996 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097512952 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106321826 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085865097 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106609087 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087382691 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17154578 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085874795 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107042377 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107735693 seconds)
  done (took 2.661092194 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200643127 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254822635 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102460301 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106961688 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089093608 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111169871 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105321961 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091419477 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110688541 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085845737 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109395129 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087374601 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105507146 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086872844 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109842876 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088219054 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106629486 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087957803 seconds)
  done (took 2.885605284 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113346282 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146409086 seconds)
  done (took 1.110200502 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119288256 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18137466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319876355 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156299029 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108049198 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.1274633 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157026186 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131415292 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198073588 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122966043 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12197781 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098104736 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140832206 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116264261 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094567693 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118674226 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143262955 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093270582 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115993909 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115628202 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117434006 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106275861 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115961624 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093026893 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181804409 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120361447 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085542162 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107138917 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115441853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095700391 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113502595 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125639002 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098231892 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175710908 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10273949 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176147395 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098198744 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115059427 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114644322 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090914707 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118187679 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11898122 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10492326 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118091256 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084289403 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119526402 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105967169 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085630993 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115229488 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097836986 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115414068 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11277178 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154975698 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119381875 seconds)
  done (took 7.545695814 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795280587 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163493259 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090540191 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885771487 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139548856 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104171281 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782300029 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134378814 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234358409 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763972684 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13423131 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122433194 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228755115 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23704137 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927829453 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30760172 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.67441541 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103026982 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150338968 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154731402 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119782758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138260699 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130327239 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.458268953 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096278002 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113021754 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117797945 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099725277 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159805791 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126207984 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114787189 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179602414 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266917386 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185087472 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116473884 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090217017 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111665497 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169306486 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2693369 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215696671 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181171829 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087599243 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111233986 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123546705 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11124323 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108885895 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163548292 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195389859 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173619002 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093443431 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120923065 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121116761 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12023319 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165515955 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121106313 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289112875 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324455029 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112140829 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120829116 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105721343 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264274287 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123837772 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225960552 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118342606 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212540514 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111951057 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78236648 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19167781 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090165954 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11824879 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120284985 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09529406 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122787437 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171103355 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391854759 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124411697 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094151909 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112774058 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205366264 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125092375 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11123566 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16223923 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116974339 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099745897 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125208464 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123288869 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172153784 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230614275 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124882201 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120394139 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094076747 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126797604 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116782509 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212422766 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220510162 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162550149 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208747746 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123509316 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163392186 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191010217 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098428534 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194108879 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098061185 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125999063 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123163588 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217893553 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146485781 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102359387 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116965548 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11910479 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148618199 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127652067 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098102187 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192088997 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487604927 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167764219 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109103664 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128039917 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098635814 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182578988 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096743677 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258869022 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122346072 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170737488 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120054892 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08758981 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12135655 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165486937 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123272714 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121319163 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101844805 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119433436 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235001161 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22050668 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124379847 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22144027 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184841924 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11963186 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172026226 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122739795 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1681482 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120795311 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121335879 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096230455 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794503049 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123993631 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098117769 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116560588 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201904569 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111730844 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102049897 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125391764 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108786774 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754739886 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127558512 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121205902 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102018524 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119808629 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120826879 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096078381 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115963479 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163196881 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230796118 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122034804 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120466389 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103389669 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183590256 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096223539 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125677194 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12495795 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125531426 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100962738 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115528375 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125769254 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1707723 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164087737 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222592997 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597447979 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091019076 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125787718 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230156557 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090553349 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288518838 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121024882 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22725459 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165978015 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122235506 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318227602 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167688416 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.200603891 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127725394 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1760705 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087388407 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119419621 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163671977 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113531039 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116936854 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164748757 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125421629 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102789689 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.965085994 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112338811 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227543614 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109530819 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173389314 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095045504 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121874467 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28870473 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112889491 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108842744 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186222072 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095295718 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125798356 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722187231 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105581579 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122477331 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118491055 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223430164 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165948658 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097916971 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121087108 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121853591 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164338353 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208691134 seconds)
  done (took 44.205275937 seconds)
done (took 59.251055457 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275384219 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213393095 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258499755 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169239754 seconds)
  done (took 1.860995336 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170753193 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147901928 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121510992 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108315549 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149835825 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085478172 seconds)
  done (took 1.653968262 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352908937 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270652768 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238222433 seconds)
  done (took 1.740705594 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290184888 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252514937 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.3553413 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418467811 seconds)
  done (took 2.310043996 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208762722 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131899341 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111485145 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104405816 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196797638 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249833806 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141445357 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202790127 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122202823 seconds)
  done (took 2.391078093 seconds)
done (took 10.832179773 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.302280042 seconds)
    (2/286) benchmarking ("sort", Int8, true)...
    done (took 0.258312469 seconds)
    (3/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.230082851 seconds)
    (4/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.15757124 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.219771681 seconds)
    (6/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.229428182 seconds)
    (7/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.125870859 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13561247 seconds)
    (9/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101097423 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139979424 seconds)
    (11/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.173765755 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091999514 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139665738 seconds)
    (14/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119764032 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098975153 seconds)
    (16/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116845348 seconds)
    (17/286) benchmarking ("sort", Float32, true)...
    done (took 0.232595083 seconds)
    (18/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.136208993 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094260655 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.146611962 seconds)
    (21/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.254596517 seconds)
    (22/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.227046412 seconds)
    (23/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112267528 seconds)
    (24/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.222109586 seconds)
    (25/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.123827666 seconds)
    (26/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117834999 seconds)
    (27/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094745984 seconds)
    (28/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.185357581 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.225626487 seconds)
    (30/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.192624823 seconds)
    (31/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.114035941 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12628573 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.21914513 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097063532 seconds)
    (35/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175487818 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.147191924 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.23661244 seconds)
    (38/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.123921527 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086524825 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.201812702 seconds)
    (41/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.152484289 seconds)
    (42/286) benchmarking ("sort", Float32, false)...
    done (took 0.173884934 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07681551 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139489337 seconds)
    (45/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.077333695 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117397214 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.109668575 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.178026552 seconds)
    (49/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180125635 seconds)
    (50/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067333224 seconds)
    (51/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117807028 seconds)
    (52/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.13622628 seconds)
    (53/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124642147 seconds)
    (54/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092166362 seconds)
    (55/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108360931 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.212944226 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088807404 seconds)
    (58/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128822173 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.154117534 seconds)
    (60/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.150572438 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109377626 seconds)
    (62/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066681396 seconds)
    (63/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.208094457 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138551765 seconds)
    (65/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088595237 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119560792 seconds)
    (67/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098096186 seconds)
    (68/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117844141 seconds)
    (69/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119617142 seconds)
    (70/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.162742428 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.089940527 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.183451295 seconds)
    (73/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160242813 seconds)
    (74/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220297526 seconds)
    (75/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138121652 seconds)
    (76/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.089817946 seconds)
    (77/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182380627 seconds)
    (78/286) benchmarking ("sort", Float64, false)...
    done (took 0.171164066 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.110760987 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097605663 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.185240351 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075743887 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.209470499 seconds)
    (84/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.144486464 seconds)
    (85/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.188415903 seconds)
    (86/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.096879742 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110178441 seconds)
    (88/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067213423 seconds)
    (89/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.18587323 seconds)
    (90/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.194794129 seconds)
    (91/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.111476026 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110796313 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066551644 seconds)
    (94/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115668636 seconds)
    (95/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.197239688 seconds)
    (96/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066858787 seconds)
    (97/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086779437 seconds)
    (98/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.147687139 seconds)
    (99/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168219208 seconds)
    (100/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172299745 seconds)
    (101/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094718734 seconds)
    (102/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.154533292 seconds)
    (103/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098805363 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133560518 seconds)
    (105/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121662623 seconds)
    (106/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090531446 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110574094 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067505489 seconds)
    (109/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233398453 seconds)
    (110/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117933524 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09657214 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111583057 seconds)
    (113/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092983268 seconds)
    (114/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114623943 seconds)
    (115/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.168041657 seconds)
    (116/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.098371638 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101673017 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126169632 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116098431 seconds)
    (120/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091487538 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.181604211 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118376487 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094603952 seconds)
    (124/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11084074 seconds)
    (125/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068651639 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117697065 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069395817 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117143391 seconds)
    (129/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.121852822 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118605458 seconds)
    (131/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094985786 seconds)
    (132/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115364358 seconds)
    (133/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13559337 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.07070037 seconds)
    (135/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169548113 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098333082 seconds)
    (137/286) benchmarking ("sort", Float64, true)...
    done (took 0.235641386 seconds)
    (138/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.149296013 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087382192 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118840712 seconds)
    (141/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096006038 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121392988 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169654908 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087665598 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118608311 seconds)
    (146/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069032797 seconds)
    (147/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090716096 seconds)
    (148/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110384587 seconds)
    (149/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090017882 seconds)
    (150/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067288039 seconds)
    (151/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183713044 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.132776023 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117248188 seconds)
    (154/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092212465 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135946133 seconds)
    (156/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.14363615 seconds)
    (157/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068012486 seconds)
    (158/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068241797 seconds)
    (159/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.141668567 seconds)
    (160/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120887135 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.163610522 seconds)
    (162/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118636829 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.113161754 seconds)
    (164/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089892471 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067408389 seconds)
    (166/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109562291 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086726344 seconds)
    (168/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124025815 seconds)
    (169/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.158325493 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090522183 seconds)
    (171/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.168482717 seconds)
    (172/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112821898 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116768638 seconds)
    (174/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067550326 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109525222 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096703158 seconds)
    (177/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071470429 seconds)
    (178/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100154874 seconds)
    (179/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136429991 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.112306705 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116707012 seconds)
    (182/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08529649 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10899702 seconds)
    (184/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08802376 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.223060881 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173305652 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086105729 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.103338263 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087248495 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092107686 seconds)
    (191/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093529613 seconds)
    (192/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.090037113 seconds)
    (193/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094390626 seconds)
    (194/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076809103 seconds)
    (195/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185224902 seconds)
    (196/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.15522073 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09612963 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118768423 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086492329 seconds)
    (200/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112273882 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136982917 seconds)
    (202/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.090027221 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109866762 seconds)
    (204/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096353993 seconds)
    (205/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.152104096 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09227828 seconds)
    (207/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173176932 seconds)
    (208/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068924272 seconds)
    (209/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121893988 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087059996 seconds)
    (211/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116994447 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108789406 seconds)
    (213/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.300209787 seconds)
    (214/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068141511 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110832083 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067320265 seconds)
    (217/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067158114 seconds)
    (218/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.174883167 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109842194 seconds)
    (220/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068612455 seconds)
    (221/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068106951 seconds)
    (222/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110720035 seconds)
    (223/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066988423 seconds)
    (224/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.090013008 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088633646 seconds)
    (226/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068118253 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110734982 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066758514 seconds)
    (229/286) benchmarking ("sort", Int8, false)...
    done (took 0.188266585 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109450937 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128493456 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110141399 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116232826 seconds)
    (234/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075407207 seconds)
    (235/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112633735 seconds)
    (236/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.150276157 seconds)
    (237/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119227822 seconds)
    (238/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186574764 seconds)
    (239/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093228049 seconds)
    (240/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111915571 seconds)
    (241/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067229114 seconds)
    (242/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067132223 seconds)
    (243/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109791608 seconds)
    (244/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067911659 seconds)
    (245/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234266593 seconds)
    (246/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11146144 seconds)
    (247/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089722364 seconds)
    (248/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092438051 seconds)
    (249/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06752087 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066989817 seconds)
    (251/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.091081793 seconds)
    (252/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.12046386 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113329686 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087060602 seconds)
    (255/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089885983 seconds)
    (256/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066730395 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094459773 seconds)
    (258/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.091109991 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086247763 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111431465 seconds)
    (261/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067656162 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.09006939 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084877233 seconds)
    (264/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117498455 seconds)
    (265/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.117898426 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118207081 seconds)
    (267/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.07701668 seconds)
    (268/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078668932 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11435297 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09182419 seconds)
    (271/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116922885 seconds)
    (272/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090527748 seconds)
    (273/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115231225 seconds)
    (274/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111682577 seconds)
    (275/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.07750428 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134583194 seconds)
    (277/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078585579 seconds)
    (278/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088539551 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110649805 seconds)
    (280/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094793261 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115756022 seconds)
    (282/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067746139 seconds)
    (283/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091078816 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089012845 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090710549 seconds)
    (286/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077426197 seconds)
  done (took 36.118836641 seconds)
done (took 36.998244141 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100205862 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14854754 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096344632 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136360964 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.1244656 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091626413 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118449757 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098716343 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123859397 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125263711 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098722153 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093617168 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097171996 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121051939 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097355316 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138916952 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123175325 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094123756 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118388013 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086280482 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118574643 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089433255 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112726065 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.0701115 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121735217 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09459779 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116812432 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119618876 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086597625 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110595162 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091197175 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117982094 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08763428 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123912451 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093914113 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119034669 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096941176 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120443671 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11306093 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086726185 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11869721 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087115855 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117341687 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093987995 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115763269 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093481933 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118967495 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100163031 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139838231 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115629379 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094800827 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122474216 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096605757 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117899234 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090854541 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11954777 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091524376 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139625641 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119008404 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092513476 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118758597 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095572506 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116559252 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095908785 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118576794 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121443936 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097779196 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115375813 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097433593 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116489493 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086995248 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119416932 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090918764 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110769847 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096026347 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121033222 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085332419 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115973213 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117822439 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092040461 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110633904 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089452993 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112613006 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093176456 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112129553 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069844822 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114414529 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09345622 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110472802 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09593835 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116720912 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093929281 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113167023 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098545455 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111353199 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092752579 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111423409 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087118449 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114132936 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091539872 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111669704 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09001044 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120146825 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089050141 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117302816 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123441739 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08729501 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118487841 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08721942 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110389868 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102629233 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121927373 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088243739 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116309833 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086346747 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11854267 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08691987 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111477485 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086718451 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111429199 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093074564 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110330422 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113225662 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094134605 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124817575 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087514287 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114961795 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089904862 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110904773 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093708171 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11122495 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087630779 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113511064 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077900739 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114164163 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087696639 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118627547 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090651785 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120933607 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089462809 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120260059 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091646944 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117361577 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093058804 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109916593 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074775484 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116451425 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090317665 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114226519 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087585928 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113137811 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088413419 seconds)
done (took 16.954817889 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087545247 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183594844 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151637669 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142074635 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107685827 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112330119 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122421134 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118465521 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113927851 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143142334 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110382169 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131931934 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148614858 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086954055 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113669456 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091474526 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113129195 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103105662 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145486856 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133650865 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165379424 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086559418 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147152815 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135316409 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121124698 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115076974 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11335452 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091886094 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115560044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103697144 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131918684 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116184488 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08840344 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134628247 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105059689 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119872856 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087476041 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119107357 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087811106 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111947473 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141444698 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133781811 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093533037 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118315519 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091711205 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114720207 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090542282 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.1211954 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098679727 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116620074 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127427668 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157131504 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091903853 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122519699 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086980933 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123264889 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122001564 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090657992 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112463334 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090572584 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111314577 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091330689 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127042309 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1416377 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09240608 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121834431 seconds)
  done (took 8.618065566 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104818492 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140214526 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106285907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131690556 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112398776 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088879042 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112930398 seconds)
  done (took 1.738640951 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088687295 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135010703 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112234607 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136232123 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133709245 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112810366 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124125907 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089813361 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1330592 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089763205 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134797478 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151388705 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090235577 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121302031 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139112591 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089177136 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139097466 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089367972 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117118718 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112275809 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117053237 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135472722 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091184553 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113843633 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103370964 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114068062 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16373866 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094623457 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114974679 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09194887 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112518788 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151782989 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103072481 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125571645 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089355578 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130490336 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12921881 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086868877 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126464505 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094570024 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128567926 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089937013 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1166482 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0877074 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11872042 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10026755 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118866814 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090300124 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116926469 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134291525 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.107055505 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128938377 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089746145 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118042928 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091135191 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119739014 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09868045 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115073877 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134458335 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090753607 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130933861 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1055768 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129042255 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131618344 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092063456 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128497388 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103694226 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11739439 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091579583 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11772747 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131010129 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087253059 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11672144 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100366074 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116093676 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113335843 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137617593 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116233825 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100409742 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11527247 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089822916 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114733309 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113707538 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117745436 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089747041 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118470115 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092432735 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112347329 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087944741 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117021062 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087328688 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115066406 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120151476 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090837434 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117563938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106918324 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115779438 seconds)
  done (took 11.859997103 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091094547 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115125142 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09137171 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115154112 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090740729 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116534258 seconds)
  done (took 1.573767138 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115207722 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11848326 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1046399 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120978024 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155749578 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104038981 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130885679 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124701456 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109059334 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127260316 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129609934 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106273837 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135720088 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122449563 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104406052 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121238274 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.12978699 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100433788 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128453739 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097233484 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13815658 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120836883 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09749063 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132076887 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118947258 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096031421 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125929239 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103135038 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12770507 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124591036 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096610895 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118884822 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096939204 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124447806 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13018716 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096843351 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12121838 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119425043 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099985145 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118398972 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105235886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121453497 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127632124 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094357312 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124458635 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122036595 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093933242 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126283462 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103600956 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119682882 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120004261 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095441711 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121502394 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094140223 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123306491 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126195154 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093957602 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130674042 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122173288 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096771955 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119354302 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094918175 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124194275 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118195367 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104629147 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120243384 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12103611 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096330244 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123318962 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096096722 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120576673 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093071506 seconds)
  done (took 9.244109469 seconds)
done (took 33.973239126 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686690973 seconds)
  done (took 1.638892775 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.811913595 seconds)
  done (took 1.765809717 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.175202595 seconds)
  done (took 18.157247798 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492339199 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.575866398 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.995110503 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177596133 seconds)
  done (took 3.194633571 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947237 seconds)
  done (took 1.919001986 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283946639 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235027329 seconds)
  done (took 1.476182299 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771836465 seconds)
  done (took 1.741777235 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.357412985 seconds)
  done (took 2.316348801 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324987375 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184530547 seconds)
  done (took 1.476965551 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54721055 seconds)
  done (took 1.514511414 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.252515466 seconds)
  done (took 11.225074434 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265202335 seconds)
  done (took 1.246459933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303701038 seconds)
  done (took 1.275079726 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.521329888 seconds)
  done (took 4.494904267 seconds)
done (took 54.408513107 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099399246 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127599925 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102000041 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125064399 seconds)
  done (took 1.42051464 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101148725 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121272932 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100812249 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121467653 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12673492 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09669301 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123668976 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101829352 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120897404 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097247733 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12125457 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.1203411 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099056708 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123393445 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093723809 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124495488 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100917506 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122452462 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12434337 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097154081 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118716113 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09848556 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125127959 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095441716 seconds)
  done (took 3.652093878 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100586987 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119750063 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096980177 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118491389 seconds)
  done (took 1.416023686 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101416377 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131523477 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106421492 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126356282 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131779263 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105964618 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117494143 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092419983 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.12029285 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099170728 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116364361 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139928763 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106795616 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125611601 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102588306 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114263139 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092077424 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131401419 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125195745 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100930767 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118414465 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100501888 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116397358 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109376184 seconds)
  done (took 3.709109932 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170654915 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127554966 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138755923 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095327543 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161426552 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141255938 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088962116 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141977482 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089246468 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131335476 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117884448 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134857653 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129745384 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088118794 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114577518 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088498265 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128785399 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12915845 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09144591 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127828895 seconds)
  done (took 3.421809102 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09794129 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117610623 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089622681 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116509397 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099650144 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121034308 seconds)
  done (took 1.62391434 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091182148 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115451231 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09042564 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114839292 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094352568 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115974393 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089026756 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115406753 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09028299 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115412815 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089137681 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114030548 seconds)
  done (took 2.217291365 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505762819 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120298804 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122015748 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088958878 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124827942 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089330123 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130770128 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093256365 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142382442 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088696727 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116458633 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091124891 seconds)
  done (took 2.695370109 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236181588 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125910882 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284470432 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366686234 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155363595 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164405241 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277525971 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161217697 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198745436 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149470391 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230619204 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196387437 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151983502 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190921135 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139583114 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145505363 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189178779 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25049473 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153319459 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211967946 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20710696 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167589851 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179522583 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152281072 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112022023 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19405352 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095772809 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130401002 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233004219 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179707898 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190217797 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161217974 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146740539 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237022821 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248831329 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196745151 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279569729 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135092766 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166311718 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143271014 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263946609 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139473491 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235623672 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155783803 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104705414 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220852542 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166534116 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178190239 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145444594 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140080036 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198798555 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240369878 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193249063 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139498011 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299893471 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148292462 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157999485 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190352177 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251234431 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226699764 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189559632 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120958476 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187858191 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191365683 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211634513 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152338618 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183478226 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147995172 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183283677 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188881584 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167544205 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204528781 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180555919 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139359259 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171495456 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173742693 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172590222 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26062946 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186316918 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122813811 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169455395 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150151238 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10501288 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195609866 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12575559 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215220197 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144449404 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164247698 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209383698 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159284585 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161678144 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221050982 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18533336 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148784285 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084261378 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154027496 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156714245 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177242839 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139612178 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158416793 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157249604 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131303125 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168519071 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098323844 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21108747 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092092288 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173691407 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184485317 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127568195 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161944971 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154269635 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151228864 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178996961 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200875528 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141082293 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133846321 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209057296 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177901768 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141589861 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17777799 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230297204 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117623885 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149734642 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228151254 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217179808 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140378449 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228776947 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154592365 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109343653 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133704611 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182623383 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15621956 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162422309 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13299967 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184118326 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233628035 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100210008 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139335326 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19722747 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134761942 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132245635 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155523246 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121064647 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137810048 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143918913 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146664556 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175328242 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179912779 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155102697 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16775481 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150493862 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250483785 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140665679 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151440745 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121589426 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12212199 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194910303 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226297804 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104506517 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23316629 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171381062 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200116147 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195827355 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108071719 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177858825 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131002864 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093974767 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220943325 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168604045 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162456366 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196525872 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223481157 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181500419 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182895772 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165296787 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202511255 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165840131 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157565017 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111109956 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161988698 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158726654 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124012511 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.112637505 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133865807 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149658633 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143328865 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133533117 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198658041 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170308082 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215561894 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158323024 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121005846 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208443918 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102932557 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176693098 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20487068 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118005821 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225369466 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194217226 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213348112 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118074598 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22917651 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093541279 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126512695 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143569212 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170256482 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13459871 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107983941 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162658188 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180667103 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208488213 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170933308 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206606697 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200562722 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192436195 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095286379 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168802859 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183910954 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204659907 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153628413 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139772889 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151539359 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177931395 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155389369 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255343747 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170693423 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176877837 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232181159 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123823048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132905375 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150368972 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179381579 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154571032 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175789394 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146727085 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140244283 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162251138 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104603547 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160829635 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213625582 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163073991 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188653647 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15076982 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185626805 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129071282 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162365958 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161601512 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16582615 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08107224 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202816825 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203215677 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147943874 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16680778 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216510402 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104680103 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30816643 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236223666 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196679488 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13806274 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15599677 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161400439 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162951974 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171926795 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179708119 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159369372 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18816832 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160607706 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136698775 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112234515 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151682893 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153732636 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133457407 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14997075 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178584905 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138868936 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190995797 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155358203 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159560826 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174164034 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151296286 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116274869 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150351591 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243645521 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184006747 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240695429 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151814569 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179529875 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207297863 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127397717 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104094652 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134215664 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178929341 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136711458 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191685975 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213822539 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199607675 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181142939 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206470161 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112117887 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120780159 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159163056 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169184611 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204008163 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1502681 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147180688 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231630768 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110251562 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133446592 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167022983 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288729457 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145884539 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195906701 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108393995 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280039309 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10057227 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132716021 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164938796 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23759663 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108558153 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178751041 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171571332 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16202257 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163814011 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150136899 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192315914 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23805966 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199166046 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211754411 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106095852 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156966226 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174816181 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222626391 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157415802 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110702776 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232622522 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196524869 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194905244 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141936554 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169476039 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16904323 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15890664 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215031203 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107642231 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236334389 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134724601 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192228487 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153781357 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138670355 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177111026 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188840971 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141417183 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187157428 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21120093 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108267599 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134607711 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16758537 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179291716 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153715196 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129254211 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181030214 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126198519 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196296525 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260700789 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133594157 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155593616 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120767447 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13777877 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156149413 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159233329 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140563647 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141143425 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228977424 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134854874 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191821571 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229103208 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17242943 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174686013 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144880158 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693855747 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103002128 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222099515 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120519702 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235649499 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151414365 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173723352 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159754903 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168600797 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193929634 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161685598 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231386193 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220141946 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180394946 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132324025 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159063893 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15652083 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145191926 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124979136 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167844794 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159596556 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145234433 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.206022479 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164076439 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107593064 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141203735 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198898242 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149874802 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185927166 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179732777 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140371927 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173771396 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21557761 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105554501 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.206875622 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208752885 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144267581 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150168217 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134393399 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149979478 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233458739 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125949893 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18925023 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211426632 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131884767 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196867403 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119155627 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222026046 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15863538 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186213294 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142404026 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160392993 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157468472 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137883713 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10277958 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157509452 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168633411 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151067468 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160537131 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164517888 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195497898 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123986152 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117006971 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308699751 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177419772 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215723871 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137483132 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134677712 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162666246 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121648114 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.20502525 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179486163 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136254446 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108793669 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13708386 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129739113 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135660813 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156761635 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194042795 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165658058 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23560707 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110618264 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281375411 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140574353 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155764794 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089931263 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133318828 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150674756 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146517769 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156376327 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193848148 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263627911 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149227593 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107719722 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149921664 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12574662 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108675233 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164851833 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164947373 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178898427 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145755935 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109387026 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156936455 seconds)
  done (took 82.594653173 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164546955 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131929885 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147422619 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201468063 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17602134 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269928393 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209438602 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253340918 seconds)
  done (took 2.62539845 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093776119 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146190555 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157157137 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132870496 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09231709 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119708747 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343129841 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132656596 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116352561 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121368121 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174256937 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093940211 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548470774 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091282188 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119667262 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108041246 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09257192 seconds)
  done (took 3.749856326 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.2355876 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.49997972 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.061278983 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194719747 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159893725 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118349637 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708624886 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09499726 seconds)
  done (took 12.148062251 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116307652 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137069874 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123809305 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152876755 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140740479 seconds)
  done (took 1.756384744 seconds)
done (took 123.998898895 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097626841 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128012612 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09761451 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129940102 seconds)
  done (took 1.518031502 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095318485 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071202471 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100524366 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075109011 seconds)
  done (took 1.41590737 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189803348 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169496042 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401034219 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071613148 seconds)
  done (took 1.580719647 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114535443 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132383139 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10413667 seconds)
  done (took 1.438941292 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106614612 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129278991 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103675475 seconds)
  done (took 1.423848298 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105955019 seconds)
  done (took 1.190366629 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10739375 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137497708 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109675073 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136719352 seconds)
  done (took 1.575154913 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098628295 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126958727 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109712536 seconds)
  done (took 1.419060134 seconds)
done (took 12.997720413 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103042313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423386604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385334132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14552392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722326071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380209173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.078462595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146518662 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165296308 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092842801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14020292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674046847 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034085249 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.379198286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.990166654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377459934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678071486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121239521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119826995 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093870527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.062219839 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092149729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121980891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093500874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703300892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425581736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095096102 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376654318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09247782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126345103 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38346526 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12237789 seconds)
  done (took 17.01813671 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095796327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173155823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097695088 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136985342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124341187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094674577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127386075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09413987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179212411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123139375 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1111225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121666932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126843379 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096204376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141545947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09225107 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125862363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093409535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121171179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122073256 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112473009 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12022476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094999403 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121267478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093544732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135168353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12280228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093494651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121425749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099357234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127466684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094438206 seconds)
  done (took 4.816279458 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140986517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183412181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128701746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126512049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16811938 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124149229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199042584 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117485959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182933832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122510761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139712949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093671017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157702904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122271142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114277777 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121412413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09713796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121721828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092759175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123720459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139453713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09320017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121829916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093159635 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122964977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108576268 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123644922 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120417735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094283772 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126113825 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100412223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124039765 seconds)
  done (took 5.1331425 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097344063 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126557121 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109219984 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137961484 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096019709 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125554916 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097407193 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125108128 seconds)
  done (took 2.001868746 seconds)
done (took 30.055278462 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111047922 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128075291 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106741395 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134271226 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103307065 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132427478 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091107692 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134043822 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133782162 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10237692 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136531282 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092122534 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122935892 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092623585 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135948973 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097342511 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132916777 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102790154 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134142828 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131965514 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094869458 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13330275 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10348518 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133234612 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104671739 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133743132 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137079338 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100116068 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122587709 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094865151 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123715673 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103311693 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124361224 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105391991 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126925425 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096868904 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124051026 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094424494 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132905596 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133479686 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099925914 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133447688 seconds)
  done (took 5.99256182 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107495132 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13966153 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10565112 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080773212 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116939999 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080134389 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137237838 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079397876 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11027387 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107591322 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074352944 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106117389 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078012757 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101404014 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077044833 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075723417 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108172639 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075707932 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075995989 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105649552 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0798329 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072542617 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10825611 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078269163 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074619323 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109695495 seconds)
  done (took 3.56140247 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100302365 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134334366 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113254043 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18374504 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161678864 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100525147 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131606441 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139670725 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108672731 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120610762 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095853726 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149122635 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109733075 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129331456 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091642787 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13675175 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134564479 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094500924 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128188491 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112631373 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138104927 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102429009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140375645 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133175788 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092544216 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123046485 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097532336 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134283618 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097718642 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132416056 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097206317 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125295011 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122686231 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104639897 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125932702 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094579136 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14205973 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102887791 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131086922 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093202381 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130114016 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121408935 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113871024 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162347264 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091737218 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129944761 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096233016 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13312649 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121594898 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110888936 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131683919 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092491665 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125462759 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09132137 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122044447 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107061627 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124383993 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094809709 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131483359 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126878894 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106575141 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125097377 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108933981 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121156627 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099597963 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121470798 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092590347 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12142676 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143066558 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095259956 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161235689 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093409051 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124721539 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101592747 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130672177 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128376281 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093367913 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137967456 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103382208 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125591406 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102067225 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125818258 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096060028 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139702309 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123961765 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095718215 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123585669 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10072612 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124778273 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09486701 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136810754 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09193955 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126046965 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110941263 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122535984 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123686255 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100213455 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12695173 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093263043 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135256705 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098248682 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123974648 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102794927 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12288803 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124213612 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103941332 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126568106 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092304159 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127337388 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100233507 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123615722 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09476778 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125928637 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094353005 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132177972 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128730147 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098040312 seconds)
  done (took 14.820231445 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228549223 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21490483 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205276406 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293256778 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135471558 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114211367 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.244515704 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125891459 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124561755 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160216783 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172021335 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181731034 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170543373 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181404423 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169748781 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092991609 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143343782 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165751179 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214054725 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259270341 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143623182 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100807772 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161046519 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160145327 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136692592 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133456701 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.1115698 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134551383 seconds)
  done (took 5.793005906 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108453866 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156211253 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099015297 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144950705 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148675714 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092870076 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128488483 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094629654 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13522547 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136000984 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093589155 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129631294 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100122942 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131639427 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123530572 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103297769 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132677674 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095196215 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126393944 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097461052 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134249799 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101640524 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128254673 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121743423 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102809739 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121620263 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086700673 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143584487 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122311605 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115612163 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121367713 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102406413 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137250587 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094196425 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123828337 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095345249 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125875325 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095280794 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126468392 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092278757 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122850338 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077955205 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122695963 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136793212 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100098257 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080207916 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13007786 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129466375 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095766388 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120579236 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096896794 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125432099 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097316119 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130240375 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096187673 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124804067 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0965638 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116026205 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100071251 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124749647 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084357729 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122106498 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098566365 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117776112 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102384046 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127713442 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091832609 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125299509 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098046572 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129327528 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096445614 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129773552 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090854482 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126313723 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096246685 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129474723 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126370377 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093134141 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122920072 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094401808 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075201085 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124128681 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074015344 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126297474 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092054344 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123761444 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096015539 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12980152 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139139002 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095453095 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132392478 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094572903 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123369742 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096299041 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113967013 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095773917 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139868428 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140792213 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09455424 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122118524 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108047374 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125782796 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092514645 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105898828 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102972603 seconds)
  done (took 12.978228443 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130409526 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153191652 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125166227 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112302061 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15670548 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158070521 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101384159 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130730574 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095586549 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142352531 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094363708 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131984269 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093871399 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138141705 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156490173 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103510563 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125594681 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108235768 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127936247 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168928899 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112060128 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142342872 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110427938 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124013875 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129121547 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111082614 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161110827 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107371401 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137267701 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141998117 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108056971 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160366592 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143585415 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098725516 seconds)
  done (took 5.470938452 seconds)
done (took 49.70349304 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.216644152 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.429959294 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.18919127 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.14141079 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.218878331 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.221744298 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.198499383 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192150447 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.19540967 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.187155868 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.452124822 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.789868987 seconds)
done (took 58.548332961 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.255321564 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.349507375 seconds)
    (2/2) benchmarking "String"...
    done (took 1.477585454 seconds)
  done (took 3.9423849 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.749105659 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.141680977 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457802756 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.189004101 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.195853204 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.491191703 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.869533839 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.550588699 seconds)
  done (took 28.01033113 seconds)
done (took 42.075095961 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.199666762 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.221125253 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.226253034 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.16995629 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.324293776 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.236933678 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.547505569 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.20208106 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.209209887 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.172018897 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.216311026 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.196009478 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.195597586 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.566158201 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20342635 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.205241576 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.248850926 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.724904007 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.609371093 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.200526787 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.201338406 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.208965904 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.20959495 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.192936684 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.280542352 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.196224415 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.216601639 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.196080732 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.785411838 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.200971058 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.20505165 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.773185785 seconds)
  done (took 190.658372483 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191931673 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.205726755 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.302005865 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.244106423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.646514018 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39442816 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340280902 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.719363247 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.215361037 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.201468539 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.439176087 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197318793 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.521274241 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.20686505 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221258838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.256763328 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.491370448 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.517387115 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236202291 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.354760868 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.202484189 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.468050784 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.395476802 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.390823977 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.225539206 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.215835122 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.196056583 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.199943991 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386062009 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.407742951 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.203292898 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.219472142 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.815995002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050077718 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.204535049 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.221562978 seconds)
  done (took 149.823922688 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193793583 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193076647 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192963553 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.226269838 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.195168921 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761006353 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780093567 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.706852329 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.540241529 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199057071 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.608375015 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514381225 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198453058 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288972051 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206779452 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194058837 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194624259 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210023427 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238325988 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194130199 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195210393 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777384387 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212234216 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.32796793 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376983214 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210977142 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227809918 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584649214 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194481797 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226527566 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.528686649 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.244729868 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196926126 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.563200843 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.630421949 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308754508 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197786477 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228192942 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197376022 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.476252394 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195940667 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196519857 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.197951478 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898326864 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201550061 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.761983203 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196365064 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151343616 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19645849 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195066799 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196564831 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.532734629 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.902086903 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.217846775 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195816375 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199742816 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197054248 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198224967 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.229393298 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.467536617 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296164959 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215724503 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200289032 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230027926 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198979052 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.347065495 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197199227 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.184047456 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.257070683 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.306303613 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782189167 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202250231 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298065892 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319931879 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197181922 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198964595 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198186999 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198151184 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309935899 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197336135 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197505097 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.604665473 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.374654856 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214751283 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.618426552 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.300423261 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199318885 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613810977 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203607074 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197895215 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.962296072 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296285975 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197372201 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198833235 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198567456 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.604011049 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786522022 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.493472206 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205177745 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.511728153 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205571596 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.622133437 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.760464215 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.899566938 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.204298342 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313464476 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.376494501 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.216699503 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200971791 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.621073623 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205073468 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.25727467 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200509395 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597620677 seconds)
  done (took 365.39240384 seconds)
done (took 706.99199653 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.791606505 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.790902305 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.902160475 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.784033212 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.744935808 seconds)
  done (took 10.137458973 seconds)
done (took 11.263777373 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390414373 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.395316355 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267232815 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.398366788 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239412907 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.410213639 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376362575 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226037087 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.301766528 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.288362762 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301092262 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257715984 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235946464 seconds)
  done (took 18.212535349 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522738532 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.513742048 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266994584 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508827073 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243638223 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518704169 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401121172 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.410254375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41397901 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234422407 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214841845 seconds)
  done (took 16.375316255 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.558519977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536087236 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270684259 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519788373 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243107555 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518171254 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400869611 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416283476 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416171709 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235270304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214770654 seconds)
  done (took 16.455137321 seconds)
done (took 52.169266262 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211033766 seconds)
  done (took 2.33887658 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244508576 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410641952 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.232067164 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214969717 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212589749 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213758967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217208878 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.211586301 seconds)
  done (took 11.085108749 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211024506 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209419866 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207000043 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20801649 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211877211 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208640416 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208522102 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211549161 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210541595 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211327826 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212272286 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208171173 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208133758 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212051631 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20916627 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211929396 seconds)
  done (took 20.488188785 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210963531 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209294945 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20832934 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209833811 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209755388 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211817233 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.211249271 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210157649 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210080499 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211597211 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211352218 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208561531 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211521157 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210641976 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210007175 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210864581 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210144783 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210661487 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214703459 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210674986 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.212845532 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209631569 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211239276 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211595971 seconds)
  done (took 30.18815405 seconds)
done (took 65.227118492 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.830566891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.883737761 seconds)
  done (took 6.843702422 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213165217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212539065 seconds)
  done (took 3.556296528 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212802326 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212859793 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213397077 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212402136 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.214434573 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.2136954 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214051872 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212790634 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213553002 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212770012 seconds)
  done (took 13.263901572 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213318863 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213712708 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211506506 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213170999 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213524509 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.213179954 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21330578 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213966132 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213254114 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211147834 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214795632 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.21153543 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.214833509 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212604465 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213981767 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.211699708 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211357247 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212272169 seconds)
  done (took 22.964827446 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.215003591 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21374614 seconds)
  done (took 3.560387333 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.213169928 seconds)
    (2/7) benchmarking "second"...
    done (took 1.212113575 seconds)
    (3/7) benchmarking "month"...
    done (took 1.213021377 seconds)
    (4/7) benchmarking "year"...
    done (took 1.211710917 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.214184726 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.213115035 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213254184 seconds)
  done (took 9.622730166 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.217368456 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.392172319 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.47419182 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.8271344 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216712255 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219086103 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088323153 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.21994749 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221568445 seconds)
  done (took 14.009723007 seconds)
done (took 74.953292203 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.218630474 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.228880488 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.458159255 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219803121 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.227334837 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.54960672 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.227186603 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.338913467 seconds)
done (took 37.602268376 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.227157943 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.199770226 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.998562421 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200624656 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.327768535 seconds)
  done (took 18.85935377 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.260401627 seconds)
    (2/2) benchmarking "read"...
    done (took 1.549797707 seconds)
  done (took 4.943612839 seconds)
done (took 31.163971883 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218339602 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.217178121 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216446333 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.215975372 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218039795 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.213384941 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.215484011 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.216559178 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.218712026 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.216985319 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.216807054 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217935467 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214967203 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216738656 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.218536297 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218127237 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215844091 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215097752 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216469671 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215196994 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217387824 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215847198 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216057867 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.21615681 seconds)
  done (took 30.333379364 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21950438 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.217471243 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21951159 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218848854 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21585455 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21965042 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217606528 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216680213 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218648103 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.219326634 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217319614 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216636121 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.218987971 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.216638174 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219048894 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.2177884 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.219066158 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218000881 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219391481 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.216746914 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219813057 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21648916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.217994809 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219415793 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218269941 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217579711 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219049154 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218047281 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219985931 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216667972 seconds)
  done (took 37.681909427 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.225589613 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.22734807 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.221055807 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22052929 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.220698718 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219988878 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.219776389 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220845113 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.220801746 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.221002009 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220170886 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220129268 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220293598 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.220748819 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220843942 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222201094 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221601271 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221633596 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.221399824 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.221222765 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221480369 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.223133977 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221066707 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22027332 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.222073338 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221184551 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.222338992 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22169888 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22186893 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.222648109 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.221494468 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.222512821 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222245307 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222502836 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.221592474 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.223678236 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.22655508 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229425586 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222810634 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223359539 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222393321 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221607281 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.223529858 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222379212 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223700578 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222872382 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222324435 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223176251 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22306842 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.224195177 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.222898778 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223479348 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.2240215 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.223807572 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22315309 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223974961 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.222440056 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222139191 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.225585106 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.22339839 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22424427 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223614691 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.222847223 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223112274 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223765804 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223616313 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223876295 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224808958 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22464034 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224352026 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.223755236 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224154124 seconds)
  done (took 89.172074977 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.224125992 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222195033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222462265 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222276502 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221671665 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224790958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222808896 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224608481 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222687225 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225482245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225115809 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22376053 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2233945 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226270536 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225056714 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222058363 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225301988 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223682904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225819816 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.224415439 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224875952 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223191037 seconds)
  done (took 28.067459743 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226345915 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228504635 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.223923422 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225719442 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22453289 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225816392 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226364875 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227589617 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226043438 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222385827 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223789338 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226807637 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224340648 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225854932 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222618002 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225931585 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226734908 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226697473 seconds)
  done (took 23.202967214 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.224510122 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225129269 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227622967 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223833911 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.225429632 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228217825 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224185445 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227382578 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227257421 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22562942 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.227556415 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22842907 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228431095 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223953259 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227792499 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226109158 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.227924365 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225656807 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22866578 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225257763 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226111971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228034225 seconds)
  done (took 28.126977052 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227363158 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22769719 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226825911 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225890735 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224875765 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228147703 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228389033 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.22631452 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.22899598 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229329972 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22595111 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229116235 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228285971 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226513217 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227778214 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227383064 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227995463 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228400291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229206354 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226857785 seconds)
  done (took 25.696374216 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231161848 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232183208 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230799964 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231997075 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231442827 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230563681 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231247499 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231517341 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230979143 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231554866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231084384 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2311868 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23199935 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231716316 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230863114 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232336725 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232230515 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232495396 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232189537 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23211503 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.233857035 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232682779 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232333421 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233548688 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233067744 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232614116 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232998449 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233419023 seconds)
  done (took 35.642540614 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233070637 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230766849 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229884306 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.23022464 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230823133 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229558375 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22953439 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229859971 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233670704 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22947738 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.232903157 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.232819438 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232402169 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233862407 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233677744 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.232486032 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232939914 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231715251 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230452227 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231430633 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23202721 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233547891 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233211279 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231165194 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230712945 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233816713 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230869461 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231653772 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23420271 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232025855 seconds)
  done (took 38.1032121 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251343642 seconds)
    (2/2) benchmarking "in"...
    done (took 1.253082793 seconds)
  done (took 3.653345173 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231814668 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233987816 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233359734 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230197004 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231796851 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235737595 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234388691 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232555606 seconds)
  done (took 11.011602434 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234674405 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235476867 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233416523 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234455185 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235022704 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235269283 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24304934 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256936097 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235295293 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236686643 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242106886 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242464252 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.237948826 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236099763 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235050798 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236960383 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235414963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236315119 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.2366395 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238966818 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238517335 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241362062 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240034813 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.233846854 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237981635 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247399498 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.26100812 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237643204 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236098371 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240782983 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236264016 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.233416678 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236956268 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237384199 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237155558 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237332713 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244767212 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255981942 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242979574 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259028493 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237168098 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235986325 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237820677 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.23974466 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239243614 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237789296 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.238856175 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.235030541 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.23785743 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241363016 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242660905 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238457834 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.236066006 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242312077 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.238938486 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246063139 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258569992 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.241322603 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.249090743 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249146623 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.272323983 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.264329041 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239987499 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239595389 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249161706 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263669806 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247232293 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258216177 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.236303861 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23820264 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245964738 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271736172 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.26601874 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.23999326 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242055768 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.239877804 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24023881 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239726211 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246786786 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.262399314 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239591159 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246671887 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252255148 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26297085 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24066048 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241651044 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24139107 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240734195 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242867152 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252383044 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259701669 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241039624 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240605857 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.240343927 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242316184 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242430824 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239600232 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241661426 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238468181 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.240911675 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241993623 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243937837 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250914468 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241518388 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24127211 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247473636 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260884942 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241986951 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248363028 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242191827 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241431117 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243955233 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247937441 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240020882 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245052395 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250205293 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242816324 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243613229 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243353293 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242065377 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253043832 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268146005 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.242900879 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244462547 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246634796 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.255782274 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245377428 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.24629412 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24318432 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240826773 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240632208 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24383184 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244000015 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244827187 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242380807 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247724293 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.241956121 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243395118 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244841237 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246212281 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.24531403 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245134646 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.245223877 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245594401 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.244840294 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244873613 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250116046 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264487067 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.245912105 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245514005 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242120093 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244543622 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245933495 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245641515 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.247089982 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244398277 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.244104272 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245915402 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246358432 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245898453 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246144631 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24583087 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248910822 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246730199 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251172958 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244560326 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.242110949 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245104621 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246522056 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243377965 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244659963 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.244976456 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249002014 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.254222556 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245830008 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245957557 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.248652464 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246759477 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248759152 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247086903 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.251563641 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.255098145 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.247208644 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25517 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.268250084 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246625881 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.250424537 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248336624 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246190409 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248397215 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251170953 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.253763512 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259650644 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276082857 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249293448 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251997461 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.249108979 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251450381 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.25224737 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247096881 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247572631 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247611685 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248826304 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248441725 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249528429 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248222872 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249253514 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.249169751 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248289352 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248900875 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249334208 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247982597 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250361243 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245350411 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247699411 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248749876 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250784956 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246226014 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247649855 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248121585 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249226493 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249647503 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257686284 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.24513989 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250256721 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250376624 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.250010408 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.249572098 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.249444629 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252129805 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249742871 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256692116 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271705037 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252030942 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256266542 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27169841 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.248994688 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.254330195 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.251839439 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249546716 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25292791 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.259506746 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.250212346 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251080849 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251592435 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252842074 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252360221 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259021024 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26797907 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249999912 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.251694609 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251729792 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.249953803 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254383172 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251650783 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251512559 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253331006 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25193501 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.25172191 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252541781 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.252093053 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251923612 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.252881566 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25524692 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.260400213 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257852263 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251301094 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254196662 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255528309 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.257417106 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.252049765 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.252280436 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253228616 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26548307 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28180497 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259346677 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277212709 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.254665933 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258764112 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.277535319 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259313553 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256775124 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257286721 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.256174326 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.256941205 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254118014 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257670987 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.25679374 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258065262 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256579741 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.260745307 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257623575 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254789537 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.255597933 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258064572 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258097355 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.253531086 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.2552583 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.258129922 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25718996 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254262987 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257326882 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263292973 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278872871 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.257186091 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256094813 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255268026 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256004626 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.258053968 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.255711944 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.262670887 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.264533386 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.261511678 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265443308 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259534911 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268784878 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256898533 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262379892 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266685287 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255872802 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.255604787 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257630235 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.260167538 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265257306 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.279641167 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.261151997 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26357702 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259743749 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258031872 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.258644746 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.256919281 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258487662 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260802546 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265999179 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277229292 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.263853253 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260928928 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256966021 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.258888955 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.259181114 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.259363495 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261976054 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.259162581 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.259861541 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.256885989 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257770733 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260824011 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.2582714 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260143922 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.256739828 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259449977 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266562828 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283003102 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265703918 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.260550378 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268631528 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28059858 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267888232 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281655192 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.260899324 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.261285928 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.261742668 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.260633141 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260103919 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.262622206 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261285495 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261144751 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265134091 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261647114 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264427597 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.26292914 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263113991 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261054011 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272199392 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286364946 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264103545 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266652339 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256764158 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.260258756 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.265153043 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.26460567 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259293741 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.264695821 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271326246 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270288719 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.263524413 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260864194 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261100261 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262647862 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261286426 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.261735728 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261812718 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262153109 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263853693 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264754047 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265510542 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263093843 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.264791179 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262440204 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.264851785 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274858208 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284607819 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.26461372 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264234751 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264825417 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262767898 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.261794824 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.263515781 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264565373 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263567428 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265529553 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271533921 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.267412247 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266496776 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.263184313 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263655036 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.264701919 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264896275 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264746102 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264949956 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265274799 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266092386 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.263774998 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.263435033 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265310439 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263865015 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26648235 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265711542 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266997466 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.27122045 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264620167 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261208905 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.265197247 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265685616 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264259291 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267349778 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.27323422 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288726042 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275254834 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.274227702 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270336427 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.265585271 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267550853 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274326453 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.265280967 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267410389 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267890208 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.267788516 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268544196 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.269911963 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268589209 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271733515 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.288090811 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.26777266 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276468456 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.288496439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267608679 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269280367 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272041993 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267850787 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266083803 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267665704 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267678716 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275621116 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290057421 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26759766 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268648996 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267905898 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269806686 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273338481 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26808389 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269676609 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265956546 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26878427 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267406427 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267538628 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267106716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267979312 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268016625 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273611973 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27577306 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.266850987 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269943068 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.268481019 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26964842 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268805622 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270203545 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.264116573 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266058993 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267406143 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27007697 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.27007981 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.271641454 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269290508 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271014622 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270837852 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270488757 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271443234 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.279691756 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.276838254 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.26711727 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267998405 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270492211 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.273071741 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269762649 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269907998 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271158416 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271723164 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.270823806 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270541173 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271830064 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.274191598 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284858924 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.289798773 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270899083 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269171277 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271932839 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271921725 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267802381 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272336788 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272768801 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273718073 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.278825278 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272519054 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278380583 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290680682 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.272623153 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276829747 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274687856 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279544386 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275208306 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273545703 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272856274 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277981928 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290413573 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273021598 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283564727 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302974981 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.296251756 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27405848 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.274925499 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272856743 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274344151 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274436347 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271418266 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.273492053 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274049094 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273521108 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.272771587 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278909204 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274452708 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.27489656 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273083927 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.272216397 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276053869 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271794737 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27473962 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273747596 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274470349 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.273419927 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.275148771 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274159151 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286665767 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301435058 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.272857868 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273178648 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271603163 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.275242123 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.278916784 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282833184 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282492781 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.273819614 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275439143 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276876562 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273532375 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270948976 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272383078 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275014089 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276235324 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272085516 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285485452 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30198493 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280307983 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.273205462 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276161419 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275001376 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27307166 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276642897 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277104522 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.276284532 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278765017 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280622403 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276249254 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276611252 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279918966 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.283783965 seconds)
  done (took 751.392726919 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274483187 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273626687 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274384867 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27477691 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274195405 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273960997 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272184973 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272947865 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273840498 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274557824 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273897491 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274400384 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274211227 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27609114 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27465616 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274727952 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274504453 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272252624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274098253 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272822887 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275347719 seconds)
  done (took 27.943307954 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.277331422 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.272561403 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273994093 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278420009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275109791 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.277243124 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275318573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280390196 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279011194 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276354798 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278524572 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275410092 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.276087293 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276165934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274380918 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276946377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276274279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275653319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276278625 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275821165 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276742926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275881526 seconds)
  done (took 29.267746903 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.280484915 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279652522 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277537441 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.276295175 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278695406 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.274762776 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279141927 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.279104721 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.277128765 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.277094339 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.277835565 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280163879 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287368167 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.285751803 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.282224406 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.27804177 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.42291162 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278414343 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.278724141 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278348774 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.273752765 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283840568 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298386812 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.276046147 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.277689715 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28162554 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.277840165 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.278441743 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280753001 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281237513 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.284523819 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.280842202 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280214526 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.281176027 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.279486848 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.282265327 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.285748038 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282814776 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.278119621 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.279662719 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.289739619 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.301467924 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.281385442 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285678948 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.30448356 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281506836 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.284009727 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.289305946 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.278613922 seconds)
  done (took 64.141574964 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.283170253 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28007395 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.277422697 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279864299 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.280877133 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.281094685 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.280581681 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280176507 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.278308001 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.278108498 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281830789 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.278672167 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280693509 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.280961856 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280997504 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278386115 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278149921 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279109906 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.278763418 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278032895 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.279153586 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282189008 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282283788 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.28064044 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283866926 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281214618 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280171274 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283773094 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280451726 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279141287 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.281987046 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281526519 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.283190752 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.28004851 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279879926 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.283221267 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283226377 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28086467 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282786758 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280503546 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282549823 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282355222 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.282672844 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283116136 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281119171 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.280221217 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279988499 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282771904 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.281627013 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284537026 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283394299 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.280606403 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285062075 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.281493571 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285918459 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.285014586 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283466039 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282844564 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285060165 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283132767 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283488128 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284171025 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283973269 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286472682 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285838683 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284356849 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28385468 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285572991 seconds)
  done (took 88.353679217 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287135619 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287260167 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286267689 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286662829 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28436706 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284161307 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28438632 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.285581474 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285997239 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287307961 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288540304 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28607326 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.285711808 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285668844 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287182234 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285590993 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286908554 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286313979 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286729807 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28814171 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287124949 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287823889 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284991854 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289119822 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288691222 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287838376 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286418052 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288784777 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288320558 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289237188 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288964755 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.288063443 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286166824 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286105533 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288362892 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.286362542 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285237196 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287180099 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286650198 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285968867 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285901294 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286130736 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285770259 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287761623 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289741775 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287393981 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286548935 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.286534367 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286653662 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289392659 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288813021 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289045543 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287108048 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289380258 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289473776 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291098308 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286984704 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288744688 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289611774 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287999966 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289635622 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.287067854 seconds)
  done (took 81.007162501 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288716601 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.287993653 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.285261736 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.285951058 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287589194 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285917553 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288190311 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.288843074 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28817875 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289031515 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288967145 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287298095 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286173637 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287257944 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285168333 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286325083 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286445864 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286478183 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288671625 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287374698 seconds)
  done (took 26.94511109 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286700747 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289889188 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.286798377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287479233 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.289249649 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28683562 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290675912 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29033039 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286202595 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289588139 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291229545 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29049292 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288344547 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287849809 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290103872 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287121071 seconds)
  done (took 21.81890501 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288922434 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29108976 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290253696 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.289161444 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287307656 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286959932 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291754163 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.28765967 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287789617 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.290862019 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.290058745 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290626746 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291573328 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.2904991 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28893233 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.29058249 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.287566245 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.28889535 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.290853761 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292277859 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.288991553 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.289551881 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.290814207 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.291504409 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.288612369 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290899948 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.289521789 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290156212 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290091236 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293245781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.288615513 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.289616744 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.290703103 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289323675 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293079486 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.288651958 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.29183155 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293258376 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291667192 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293295212 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292914016 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.290231065 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292909285 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.292650668 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.289758466 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.291559769 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.29103575 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290178924 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290305334 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291522603 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294107619 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294218399 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294497924 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295320201 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294241725 seconds)
  done (took 72.19506321 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2951064 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295234473 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.291693547 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295422975 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294092525 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292614619 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295240301 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293889551 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291979894 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293691567 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29327068 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295990601 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292655225 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295439523 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293268691 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294879066 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.292425514 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29280463 seconds)
  done (took 24.494143553 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296274761 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293262145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.296688623 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292973962 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.292504815 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295918584 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292916837 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296125814 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297763538 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294737358 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292779152 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298536787 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299002527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299525585 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29605819 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295262156 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.299317015 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29844396 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293631228 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292869465 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297335966 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296659554 seconds)
  done (took 29.714586602 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296525526 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.296352248 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.294559756 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.315551973 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.314664059 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.321518369 seconds)
  done (took 9.046335027 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306544003 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294954915 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295531132 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298964233 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299122768 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295634848 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295485078 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293206603 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297322016 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291808038 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290312256 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294202614 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294096392 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292303666 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296595276 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294222282 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293968563 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290661082 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292074277 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293844801 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291918427 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293666672 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292463838 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292301067 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291762115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291998161 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297718343 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293526409 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292023788 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294893985 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295051568 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291306177 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294021572 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294792909 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298361204 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297319036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29496927 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29766366 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297195157 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293106015 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296180086 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294778683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293311898 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294161438 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295022956 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291389855 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292988447 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292212464 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29212258 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293709008 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295732467 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291453833 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294365562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295396822 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29686319 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29402279 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29314659 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294841442 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295026113 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292060473 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293053308 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29601608 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293209891 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294186179 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297901275 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294341526 seconds)
  done (took 86.666120199 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294350332 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294652359 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291918495 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29665653 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295871944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295288876 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295175286 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296390976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295192917 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295209587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29910552 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295527059 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296376249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29534208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295797822 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295120581 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296478363 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294945948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296894808 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299356956 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296647993 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295632629 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294202575 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295318299 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295388816 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298428629 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295552189 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294461736 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293381836 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293562789 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296798958 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294470729 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293818162 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294308955 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293767962 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293818345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294467319 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294572561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295097163 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297503464 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294938482 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297046529 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295763072 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297795686 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298736142 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296335995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297452132 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296898626 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295863413 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297538124 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298182544 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298063103 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298999765 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29877107 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297564313 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299520882 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298349136 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298531142 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298085366 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298893974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29547099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296469805 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298084328 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295417593 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295665107 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296010307 seconds)
  done (took 86.755749511 seconds)
done (took 1751.569428525 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464507522 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.414465225 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.297295553 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.301140748 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296600567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.314051934 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.305235672 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.29774138 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29733724 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.297496598 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.298808754 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.483471424 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.352064825 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298083936 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298294242 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391717491 seconds)
  done (took 42.619190645 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.329531628 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.3061007 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424422234 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.329331468 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329650269 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497325908 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.364745394 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307583538 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.490947669 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.352922575 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.999056595 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333422019 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.308892649 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.526246465 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326950624 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.498865763 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.57140878 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.026994195 seconds)
  done (took 30.535208157 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.784899681 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.308804961 seconds)
  done (took 9.305609178 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.325140587 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31178788 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308860629 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.30520071 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.293382763 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.296092848 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303720089 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.299390136 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.179831615 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.434710061 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.308065913 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.313688552 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.327377217 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.305332855 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.304543928 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345132421 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.477561572 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307462533 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301539949 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.311958194 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.301843303 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.391061599 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.348801931 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307729046 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438111797 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.15953655 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.305935612 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.31495612 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.4572279 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306934683 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308065533 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308984439 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.309313591 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.922434161 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.849610431 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.315542331 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.328114495 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316926929 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.304103313 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.456850689 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.31316446 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314266534 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.29604597 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.831748565 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.441822578 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.430075572 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.567081939 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320866747 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305979337 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.366403217 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304053561 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.308063662 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.337084684 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.078175508 seconds)
  done (took 110.540702685 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.309781813 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.690968607 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466032053 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323162537 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.933290019 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997760754 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314285402 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.600052705 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.353095337 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297135918 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.594766277 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.809766407 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321324217 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.320333902 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.949489292 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383166697 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301181752 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.042119635 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322306397 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.301071008 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814306318 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312036262 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.294697484 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.306010984 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.332855383 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758845838 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.767780962 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.594016243 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319821584 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.296602335 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774812963 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325015449 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.333724783 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.296761393 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.559313633 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.667714901 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.669332805 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.322646877 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.307956965 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297631329 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.322506783 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760759884 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.673248502 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319100075 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.295500635 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785731006 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318405855 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.300924718 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.305262954 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498486893 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.979109665 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303663024 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.718970549 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302883633 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.59619894 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.331760065 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36590159 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794443266 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320466436 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.277985459 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.368584296 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297545319 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303256379 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302128661 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303281791 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.655387675 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.674253599 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.296225053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658190407 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.781985703 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319577817 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818382578 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.106659308 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.329290564 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.342421334 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.300364989 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.884825017 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809910509 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.326370218 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296790096 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.647745203 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323066026 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.576703823 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.313005624 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321856397 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814518059 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.306524616 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.320361293 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.299620529 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.298138927 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.914181277 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30916606 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.566287826 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.334441076 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.29688218 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.296716688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.300845148 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297984129 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.299186673 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.304454332 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.825118533 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.323828585 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.413849394 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324409992 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304868354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.321429815 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.299977297 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.298876513 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517056524 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.774607338 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.326448952 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302197496 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.299156021 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.321172821 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.307167452 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.301785114 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.616033915 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324085398 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299840151 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.325907 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.037244653 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.365314291 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300504762 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.321352665 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.187813943 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.511880103 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.324774107 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.30173298 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302740432 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.333243358 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.546145571 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321119331 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.353067597 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.301694615 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005505435 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.347451951 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.318377609 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.642586753 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.316795912 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.240432552 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.328973607 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.299806313 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608657305 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.573202049 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.599850435 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.304033176 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.318478645 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.001344997 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.324304921 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.438571747 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324135412 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.346160447 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500190042 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.442237984 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304320318 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.907129883 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.302492675 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.515500846 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.307691437 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600690214 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.799701425 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325056123 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311076792 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004891203 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.033375642 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.982077306 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.309834506 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.577518588 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.24109751 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.778371991 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.300963171 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.303989103 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.745103713 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.312712619 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308187012 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.302138374 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.304586449 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.446765749 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475968058 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.656709154 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309988452 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751155554 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347873972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304298075 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327811249 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302416544 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.65153723 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.392774087 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.309338082 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.331377231 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.30475416 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.303366223 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773428894 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.145502654 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.309758442 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454314863 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938067701 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.326557359 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.305669324 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.911041383 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.610576315 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824528191 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.36346319 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.616329146 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.333614322 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341452769 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.884820978 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.361875591 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.78464836 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328638617 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.311564669 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896676027 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328223542 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.365422542 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.305297854 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307828991 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.837241536 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.328367404 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.30988711 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.601245547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331525718 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553016285 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.31192486 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.348240232 seconds)
  done (took 1103.553159903 seconds)
done (took 1297.76391683 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.309080219 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312665305 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.292200926 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.30983615 seconds)
  done (took 26.444864657 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.317034743 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.314009685 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.316638099 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.313027244 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.31432791 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.312770967 seconds)
  done (took 9.110794163 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.415515428 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312385787 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311402681 seconds)
  done (took 19.261913446 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.515868753 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.583040791 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.644212966 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.472139133 seconds)
  done (took 10.438155836 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314105348 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.316954928 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.316225578 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.317859571 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319161434 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.319994004 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.316062084 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.318142875 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319689297 seconds)
  done (took 13.078649003 seconds)
done (took 79.556371 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.291701758 seconds)
    (2/286) benchmarking ("sort", Int8, true)...
    done (took 6.308159183 seconds)
    (3/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.163727815 seconds)
    (4/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.599044196 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.352080879 seconds)
    (6/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.900845097 seconds)
    (7/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.341486292 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.221159703 seconds)
    (9/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.394948793 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.715466577 seconds)
    (11/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.317052391 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.56212725 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.684072475 seconds)
    (14/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.3250694 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.375474519 seconds)
    (16/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.391397511 seconds)
    (17/286) benchmarking ("sort", Float32, true)...
    done (took 6.309520086 seconds)
    (18/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.025055464 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.354049069 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.173065671 seconds)
    (21/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.340911355 seconds)
    (22/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.822669086 seconds)
    (23/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.319306448 seconds)
    (24/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.681616438 seconds)
    (25/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.394530704 seconds)
    (26/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.435610694 seconds)
    (27/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.335530368 seconds)
    (28/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.30304262 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.3123736 seconds)
    (30/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.298205368 seconds)
    (31/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.044409389 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.719780596 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.297734094 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.447751861 seconds)
    (35/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.292333737 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.349153359 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.290495575 seconds)
    (38/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.376762479 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.715546735 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.804143178 seconds)
    (41/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.552451566 seconds)
    (42/286) benchmarking ("sort", Float32, false)...
    done (took 5.342157819 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.385287507 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.336604631 seconds)
    (45/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.51915863 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.443055824 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.566811769 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.331360477 seconds)
    (49/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.289859346 seconds)
    (50/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.854858498 seconds)
    (51/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.337966731 seconds)
    (52/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.426163138 seconds)
    (53/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.438562074 seconds)
    (54/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.829907452 seconds)
    (55/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.415753514 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.303402394 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.36782674 seconds)
    (58/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.378819911 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.143760621 seconds)
    (60/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.291482639 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.781992924 seconds)
    (62/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.305946647 seconds)
    (63/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.641340779 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.913506259 seconds)
    (65/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.423421789 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434436971 seconds)
    (67/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.321700068 seconds)
    (68/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.429884355 seconds)
    (69/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.32226641 seconds)
    (70/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.298902792 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.299055109 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.310572441 seconds)
    (73/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.4170107 seconds)
    (74/286) benchmarking ("sort", BigInt, false)...
    done (took 6.31323033 seconds)
    (75/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.329585484 seconds)
    (76/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.17242708 seconds)
    (77/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.133784372 seconds)
    (78/286) benchmarking ("sort", Float64, false)...
    done (took 5.62777906 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.551978534 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.734171916 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.309957195 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.827908742 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.843058086 seconds)
    (84/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.711021923 seconds)
    (85/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.835182944 seconds)
    (86/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.313220895 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.339899728 seconds)
    (88/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.294380603 seconds)
    (89/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.315501286 seconds)
    (90/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.29565229 seconds)
    (91/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.189039568 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.245212689 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.39910103 seconds)
    (94/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.449438426 seconds)
    (95/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.297335296 seconds)
    (96/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.316455738 seconds)
    (97/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.334042743 seconds)
    (98/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.304062452 seconds)
    (99/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.302284113 seconds)
    (100/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.547366701 seconds)
    (101/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.348413777 seconds)
    (102/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.495472926 seconds)
    (103/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.363115586 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.538295418 seconds)
    (105/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.37390078 seconds)
    (106/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.388555847 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.047806396 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.314853048 seconds)
    (109/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.316364656 seconds)
    (110/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.345811258 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.42745484 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.321448817 seconds)
    (113/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.121991217 seconds)
    (114/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.406143561 seconds)
    (115/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.91930862 seconds)
    (116/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.674348242 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.627528316 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.834615647 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.108233282 seconds)
    (120/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.386223072 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.830476732 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.356304741 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.57372146 seconds)
    (124/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.315982693 seconds)
    (125/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.313028592 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.136717014 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.319306493 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.580418776 seconds)
    (129/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.299871799 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.455798153 seconds)
    (131/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.325797334 seconds)
    (132/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.442454723 seconds)
    (133/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.315728446 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.32303252 seconds)
    (135/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.094295575 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.002439466 seconds)
    (137/286) benchmarking ("sort", Float64, true)...
    done (took 6.323290558 seconds)
    (138/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.493926207 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.156461287 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.349710117 seconds)
    (141/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.341869798 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.33008705 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.306286384 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.32894478 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.346902253 seconds)
    (146/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.322133376 seconds)
    (147/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.7468035 seconds)
    (148/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.340437694 seconds)
    (149/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.553236917 seconds)
    (150/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.29930857 seconds)
    (151/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.415702689 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.138221616 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.349997493 seconds)
    (154/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.345475818 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.163400791 seconds)
    (156/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.958133134 seconds)
    (157/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.580291374 seconds)
    (158/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.837825473 seconds)
    (159/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.498091599 seconds)
    (160/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.336020186 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.794139851 seconds)
    (162/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.349973594 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.83887988 seconds)
    (164/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.577310054 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.283079592 seconds)
    (166/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.161102549 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.930122671 seconds)
    (168/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.41084312 seconds)
    (169/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.33649314 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.313464841 seconds)
    (171/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.171681082 seconds)
    (172/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.352977605 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.345571565 seconds)
    (174/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.300387715 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.988596483 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.36686551 seconds)
    (177/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.299221195 seconds)
    (178/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.831268614 seconds)
    (179/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.429063082 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.915454085 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.103818741 seconds)
    (182/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.266270641 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.215704905 seconds)
    (184/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.338303026 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.426976041 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.32058874 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.395565002 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.312890966 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.283525303 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.308145561 seconds)
    (191/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.739669065 seconds)
    (192/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.938206193 seconds)
    (193/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.352812255 seconds)
    (194/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.656325801 seconds)
    (195/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.322647614 seconds)
    (196/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.685937185 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.953017718 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.540261253 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.997437232 seconds)
    (200/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.343956733 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.768015348 seconds)
    (202/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.493853297 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.289321375 seconds)
    (204/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.340182516 seconds)
    (205/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.676201618 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.344275901 seconds)
    (207/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.302364746 seconds)
    (208/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.319701781 seconds)
    (209/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.411330564 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.731545552 seconds)
    (211/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.364437831 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.363058402 seconds)
    (213/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.927131797 seconds)
    (214/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.339566355 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.410247177 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.302633936 seconds)
    (217/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.096195801 seconds)
    (218/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.319866835 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.220660583 seconds)
    (220/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.31712026 seconds)
    (221/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.30271532 seconds)
    (222/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.824868135 seconds)
    (223/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.535665916 seconds)
    (224/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.511782709 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.340667288 seconds)
    (226/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.334696109 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.67979846 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.153746275 seconds)
    (229/286) benchmarking ("sort", Int8, false)...
    done (took 4.430418615 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.535277844 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.861842657 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.893636802 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.35663878 seconds)
    (234/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.679770937 seconds)
    (235/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.43260873 seconds)
    (236/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.734656492 seconds)
    (237/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.713359446 seconds)
    (238/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.430645971 seconds)
    (239/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.584641654 seconds)
    (240/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.42547985 seconds)
    (241/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.799680265 seconds)
    (242/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.567530544 seconds)
    (243/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.542673663 seconds)
    (244/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.954476978 seconds)
    (245/286) benchmarking ("sort", BigInt, true)...
    done (took 6.330724067 seconds)
    (246/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.388430649 seconds)
    (247/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.396502179 seconds)
    (248/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.26011299 seconds)
    (249/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.328385632 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.320585956 seconds)
    (251/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.973719922 seconds)
    (252/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.709024867 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.36644555 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.730443566 seconds)
    (255/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.120398488 seconds)
    (256/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.589519604 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.412829669 seconds)
    (258/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.305422753 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.428878568 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.430379562 seconds)
    (261/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.183864134 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.553207451 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.458749148 seconds)
    (264/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351422301 seconds)
    (265/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.944771915 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.175706792 seconds)
    (267/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.111380073 seconds)
    (268/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.364578681 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.416472679 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.368131482 seconds)
    (271/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.445031007 seconds)
    (272/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.437800674 seconds)
    (273/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.337718273 seconds)
    (274/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.416051987 seconds)
    (275/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.652220741 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342272925 seconds)
    (277/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.307178256 seconds)
    (278/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.393022768 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.264233068 seconds)
    (280/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336683837 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.349566213 seconds)
    (282/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.912374927 seconds)
    (283/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.360301806 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.325633399 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.308684743 seconds)
    (286/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.140901884 seconds)
  done (took 938.144943533 seconds)
done (took 939.370213083 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.3590487 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354540504 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.338591874 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360016367 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.447003217 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.359615629 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.348251187 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.339184438 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.383855666 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387051755 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.33655674 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.362885287 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.337804162 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.339659538 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.340208717 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356208903 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.394501078 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.338105867 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.357107671 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.349908449 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.35385498 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.339537221 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.390116267 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.360427196 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.340892214 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.340293586 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.341129158 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.360236727 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.451421095 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.344070547 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.341975052 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.350917796 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.399286858 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.336773479 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.333984437 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.357939877 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.352135984 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.352280937 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.342982075 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.370040027 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.808164874 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.354469359 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.339976637 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.340460145 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.339980411 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.3440634 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.341662398 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.34541018 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354433147 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354760748 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.797230689 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.371150449 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.345569249 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.344461042 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.35246343 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.340640386 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.345895298 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356674661 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.363278698 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358002334 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.385706923 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344653754 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.343563858 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.357201358 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.34980874 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.834483615 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.352933126 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.345313703 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.805537101 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36328348 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.829694876 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.367289354 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.346871927 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.356807504 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.376344585 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.398992053 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.336485204 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342315141 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.348806028 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.342999085 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.354753857 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356388792 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349496176 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.34190545 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357267689 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.368371748 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.35185816 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.345943901 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.354955355 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.362956468 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.351976176 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353817752 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.348836091 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.338279408 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.351599337 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.348432662 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346929405 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345526817 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.350521872 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.354433537 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.806326217 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378493331 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.339845232 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.340389738 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.343231993 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.357345292 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.80843587 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.361546644 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.366664628 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.391261501 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.345601471 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.387093997 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.347668498 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362239898 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.355285899 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.348325031 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.341904488 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.389396471 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.802247058 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376650886 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.347344334 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.344698577 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362579832 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.347509709 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.344436477 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.401941873 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.347972876 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361415875 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.46923732 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.357839428 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.377147503 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.344122944 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.351107643 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.368965676 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362411376 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.378788012 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.348344131 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364495822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.361706222 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.344929857 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.356640413 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.357099697 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.348427817 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.353113135 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.340556246 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.371393592 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359555526 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360059561 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.370839468 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.467813765 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.344740993 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.393033561 seconds)
done (took 227.321965798 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405193141 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.342483464 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.428496714 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.343608979 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.445450386 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.445089542 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.342153813 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.342251757 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.342252629 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.720173831 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.343079265 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.342290264 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.34614991 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.342889254 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.428287209 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345406616 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.343167945 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.684539218 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.346134483 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.415185275 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.346389867 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.342775989 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.345766273 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.72520623 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.345334177 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.338945134 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.415501311 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.346610143 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.689635432 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.340736339 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.343866124 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.692257798 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.434350279 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364427969 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.355984498 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.353277266 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.446908371 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.364444652 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.426818766 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.427485404 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.430879328 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.385152074 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.347827492 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.343176366 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.347214646 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.347668892 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.344614039 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373822495 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.340662596 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.345478169 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.686074521 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.356473661 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.354762351 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.344917374 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.345798706 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.368433343 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345028399 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.34891369 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.437566485 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349008175 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.408656265 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.727277404 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.72437657 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.347292081 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.342980667 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.347412339 seconds)
  done (took 149.23471936 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413802136 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.421364929 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.461350615 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.366050008 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.401086474 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.467126208 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366113705 seconds)
  done (took 11.15083011 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.354337667 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349601492 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397745261 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.398569816 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.349028154 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528110747 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348688745 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359384052 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.347549921 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.402417661 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.351245198 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350405883 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.356600664 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.343437187 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398188194 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36133548 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464869754 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.35154956 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351297728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501908999 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348275002 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.356936573 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.402880193 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362179327 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.351980107 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.356388626 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.158085928 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351282027 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348438064 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.35071873 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349676379 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.428792171 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351165354 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.352410571 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348430362 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467748825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.351418619 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349494792 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351762012 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.345313925 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.351333909 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.352557788 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.352288117 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350112237 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352044426 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374817534 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353822387 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.352673985 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.352453488 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.351670022 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.402865078 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352996708 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.349540297 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351638622 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.408122933 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360012522 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353673995 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350509068 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354318683 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350783961 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504718295 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.403065564 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.35398169 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.401530002 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355170916 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.35441765 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.352458096 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.352835787 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.410117132 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353434239 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401173188 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.350179755 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.542577557 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.376354392 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356553388 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.355988407 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357459318 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354638317 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.347669009 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.35953388 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352076874 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.353978966 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.359915582 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352186129 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351833241 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.531161315 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462606202 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.35196709 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.367555088 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.361501456 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.351622159 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408155109 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354352815 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.352205198 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406764308 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470353352 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.407895253 seconds)
  done (took 155.424596739 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359975228 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362395527 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.355154702 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.370976798 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356126958 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.357684823 seconds)
  done (took 9.421857237 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.357188352 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.357726332 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356802222 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.356088252 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356943736 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357061472 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.356870887 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359051217 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.360237497 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.356872929 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.356789876 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.357600973 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.357762136 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.357922189 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.355969868 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.35663078 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.358802395 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354110883 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.358181972 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356247291 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.451689438 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.359445296 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357941836 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.360492407 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364345281 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35622063 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364928244 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359161823 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357995041 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.366383017 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.376921863 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.359439242 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.3596939 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.364740144 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.362551569 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.358523781 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362547318 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.359078532 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356794947 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.359128363 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359465671 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35840568 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.358641272 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.35984951 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.361426056 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.364204659 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.364391959 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366113715 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.359099934 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.360399566 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.359461327 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359287485 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359914365 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.360664421 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.361154348 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382192577 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363666243 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.359329092 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.359163649 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36355849 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360656631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360036204 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362090351 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366221594 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370069602 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364778718 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360831978 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365216817 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360491127 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.361088584 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361951251 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358503142 seconds)
  done (took 100.318256123 seconds)
done (took 426.801326409 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.837953915 seconds)
  done (took 8.10222572 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.503655037 seconds)
  done (took 7.770620145 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.369831918 seconds)
  done (took 22.6411304 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.360268164 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.394369502 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.373297274 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.371096228 seconds)
  done (took 26.764372328 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.697730937 seconds)
  done (took 7.961314572 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.355953589 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.376695595 seconds)
  done (took 13.999487247 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.368966144 seconds)
  done (took 7.634139724 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.436469526 seconds)
  done (took 7.709621494 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.352550395 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.37319918 seconds)
  done (took 14.005361576 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.33237002 seconds)
  done (took 7.596710492 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.785613655 seconds)
  done (took 12.051761044 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.367034478 seconds)
  done (took 7.635569889 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.425931765 seconds)
  done (took 7.692133834 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.546993321 seconds)
  done (took 9.812267264 seconds)
done (took 162.643882308 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.354263087 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.363958075 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.359553818 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361604808 seconds)
  done (took 26.702711047 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398108593 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.39898709 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.397704672 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.40649459 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.396846553 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.394837352 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388023968 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.387898163 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.406256804 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.398344859 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.39703603 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398046688 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.39416275 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388462508 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397916598 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.398912174 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.406878995 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.416185696 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.388462701 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.399913118 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.36483285 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.407812797 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.399663291 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.36417042 seconds)
  done (took 34.761822536 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.88478294 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.435194177 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521115399 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.415372649 seconds)
  done (took 7.522199681 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415941385 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417183914 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.428891138 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468521601 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.494196206 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426829136 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390971635 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.386305017 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371665161 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.417645267 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.492623228 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.434080379 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519188448 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.365030196 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.570140745 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.364548304 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.362501041 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.416698052 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.467121758 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.48268412 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364460543 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.41574189 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.420151887 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.434974135 seconds)
  done (took 35.595650625 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363972279 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382793626 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364782026 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.363010203 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.37235132 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.363954828 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.36408123 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364081407 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.363968768 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370092017 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.363404152 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376409548 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.364382598 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.362936607 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.369899854 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365655816 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.369943701 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36253622 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364898146 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370105773 seconds)
  done (took 28.613628677 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.359444805 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.215200061 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710113276 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.615841132 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.360679893 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.367570849 seconds)
  done (took 27.898236048 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.438075323 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.594693595 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.3657956 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.741283378 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.846282074 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.38975939 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.36778901 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.614081868 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.951176868 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.947539928 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.43463177 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437584391 seconds)
  done (took 20.399474543 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.373055788 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.36916806 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.372293072 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.383120306 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.423687635 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.38874939 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374697459 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.362077756 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.431422245 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.449877414 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392755592 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.427339532 seconds)
  done (took 38.019522791 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452426771 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408409852 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.316788616 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373188369 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086718031 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573829749 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446614693 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077607622 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386624054 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63485097 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368211907 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459222935 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616562529 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37050405 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36927699 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.36492725 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606109767 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84537437 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363624291 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.51329133 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394318558 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3767542 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.543805466 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612668096 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602520539 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.341180413 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.689745154 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.148720523 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656419517 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384258807 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372323567 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362560975 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636903516 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035223278 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485850767 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585921262 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389290017 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.907397992 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.352744452 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.431885398 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382500311 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372830329 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378048746 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364131544 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299401601 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368698041 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0850373 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.389168863 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.073483551 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365328889 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635873934 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467275379 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.370209893 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.93377579 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412568905 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39770086 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.367741745 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461958069 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957626836 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.975088764 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375342681 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.307347119 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365993876 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.545928914 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021802672 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.389896334 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.371776953 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369170053 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301123985 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.52172173 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390184157 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51166554 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390156819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015300598 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102426953 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404407371 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.304683887 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916608527 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373619952 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.307913547 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59164656 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140256056 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300077038 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.311054105 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300500126 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075833581 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374759898 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.770416772 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389987177 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102036055 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610604829 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410135939 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391889156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589914584 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.248702039 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366616697 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.365677927 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519112863 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389901779 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.083022424 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32172394 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.37129192 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62313883 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.57889899 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377595324 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.395468687 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884646021 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399366615 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.395186971 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374396815 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600600018 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.995416821 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41016873 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984039058 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392965863 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.144398612 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107817925 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374423165 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.379416332 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381544412 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627167644 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.133427593 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.524968922 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437070476 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373472889 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367588956 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.557561467 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.227380174 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.527313697 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.577422827 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408369457 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.386878451 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.372647325 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316681113 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.381500836 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38007649 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.147132626 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595081665 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384941569 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653056828 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306417326 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516706281 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37809081 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.595212784 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.642547086 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.403705047 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633728312 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377883164 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391935136 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390332144 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390811601 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470304079 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393593128 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.371932765 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634805824 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.377280451 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.378567458 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.570199633 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15548031 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380278069 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.376377403 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381856574 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99905911 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374880343 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376051898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259201159 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.386920341 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439674644 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377405063 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59823072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.295816714 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397698183 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.378827493 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.376579665 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602535016 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383249112 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.471202492 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457766888 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.862714357 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001820006 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412266856 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.312124649 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.084612933 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.070213268 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376451297 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.570741705 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372374332 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600347655 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414412999 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375503968 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983559978 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401571391 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.475173308 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.386775842 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389293121 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.378631857 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374889491 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.260836629 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037777617 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383350974 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.414170648 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518441714 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.390180697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309496032 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895052665 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38075024 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375623087 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.15130317 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41099299 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.474987216 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19246245 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65318767 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377849222 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6716322 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.672054268 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.416634044 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.378246195 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383185583 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394380976 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.387210787 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392922306 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.390778622 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.540797262 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.819158631 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943556266 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150034214 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969916045 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.709955597 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.407583704 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.273073707 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.101093702 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330014204 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.036826924 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580295112 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143653771 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340678111 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897780465 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.672446141 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204894816 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655861033 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613814667 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.681957752 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.413545193 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658637065 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595441195 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412326563 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380047384 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313252167 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.896295412 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941604261 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413901898 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462767576 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101578024 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399177521 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.1642529 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.444012158 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.152951046 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814699383 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.949556162 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766376654 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381350808 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387416269 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193645798 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401259803 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.903703071 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043526084 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409730426 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.872166947 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334654419 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604835936 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.417501889 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.376397614 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.748603271 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.38660001 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.63315393 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652489538 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321374974 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391687002 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946553937 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.261492932 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.388093167 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379410803 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154236474 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391379825 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68829871 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.394104327 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.266802548 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409182833 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314906472 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312369749 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.073637001 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391089487 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355851714 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902524122 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.394959906 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395758423 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414328233 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229216904 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638121013 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396169177 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990665842 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630905765 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380355148 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412897377 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.387295664 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390267498 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.373387829 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.263610666 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.616610974 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385858914 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632504225 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.826291997 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.281565287 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.462586738 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599551932 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290081412 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383497398 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642788262 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.117463641 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.395882345 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131400259 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431691644 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395873771 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398903974 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397250098 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408763793 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471085197 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606762446 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420432012 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.393484122 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811043709 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410462232 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39314234 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.396320505 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476743917 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.021354299 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.259865931 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.164359536 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994271832 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170335994 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.025783205 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681677587 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392762798 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384771714 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317104505 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532944603 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910770254 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655203209 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512194285 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.385792331 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416323677 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396990916 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392349945 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604132207 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659525562 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.256545245 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393976505 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04870195 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.273144664 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39575554 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.599334524 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905383142 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995105076 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.77175117 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384257352 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113550857 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679884482 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.474443268 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386488625 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973508447 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.386538825 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.150753239 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.399612912 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385053944 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541090744 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658458501 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064255468 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.415704988 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.545373937 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.158330742 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.594128807 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647552753 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.900211396 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619094383 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023781124 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143446062 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656013167 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4549138 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610473982 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.513911603 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532083936 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.397289328 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.274519122 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387960034 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233248006 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.095611011 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.395744756 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008592666 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676244329 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.39064474 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.399937427 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416698773 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.400998608 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608917665 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119994221 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620571217 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396451818 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396162173 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.954695194 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002625751 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688035026 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33122837 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.391460968 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64378645 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650231857 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413773948 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.838462653 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.096366056 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974752758 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.358386346 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410417015 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395716553 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134173356 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016130429 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.298884501 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919478934 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.054567867 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400673927 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670431784 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.394268413 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389261711 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674315626 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.391581747 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39042684 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62608001 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.030932301 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211274303 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.397614505 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.634072736 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.331580895 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614842312 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420822611 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352316261 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389869989 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.825969534 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417129982 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519083125 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400934107 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.401401907 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401681104 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.132091483 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673735904 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.395516586 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.380777531 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.382061239 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402670765 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49001655 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970216376 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41566073 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.065682253 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.740852563 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646263835 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39467491 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.378640744 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.394785609 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393491767 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108876612 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358880424 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398152348 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974764727 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.404721193 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.409009082 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396980851 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.607810399 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602078923 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404069058 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628191713 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421609063 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414766879 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.294271694 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165311715 seconds)
  done (took 1665.411072801 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421870902 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.441821016 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.44301465 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.499964808 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456937177 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.523121358 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.431622327 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.407452952 seconds)
  done (took 52.928049588 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.392111862 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.556894176 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.423648855 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.399201215 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.404252275 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.399820379 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.888437225 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.422532978 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.409197657 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.406524747 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.408878281 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.403952 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.096735728 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.41037795 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.393897232 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.392223693 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.409905223 seconds)
  done (took 66.529511239 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.688671486 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.588421079 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.564118905 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.472882138 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.439777054 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.409184894 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.59124211 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.411556081 seconds)
  done (took 54.471415138 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.413782972 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.414263786 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.413540189 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.412825798 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.416409318 seconds)
  done (took 8.374611165 seconds)
done (took 2068.495302172 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.397537324 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.401747315 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.395973072 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.39994523 seconds)
  done (took 6.898580222 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.374008673 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.085203438 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.385813097 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.397552874 seconds)
  done (took 18.546815571 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.395743738 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.392987497 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.130436654 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.05958346 seconds)
  done (took 5.497090095 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.15079588 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.159071506 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.144424454 seconds)
  done (took 7.757836671 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.396188797 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.403765263 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.404192157 seconds)
  done (took 20.507232141 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.695306324 seconds)
  done (took 2.998354354 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.544682727 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.59607185 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.715100467 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.721028073 seconds)
  done (took 7.882084849 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.783895833 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.776812269 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.587820746 seconds)
  done (took 6.453621573 seconds)
done (took 90.6373963 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.333828336 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.400292067 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.604789033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.310591094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.632456582 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.608984599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.825138434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.27844601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.984292388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.80849948 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.313685548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.631179002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.560157305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.648377842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.560310908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.648347766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.630387759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.382677073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.030194392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.194511969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.824686696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.948122394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.138103852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.968853749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.630715949 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.559550727 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.542160499 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.644937088 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.209080327 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.557874036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.560589068 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.371585546 seconds)
  done (took 197.646218641 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.399463979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406177169 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.400669639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.400831446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.406095398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.400353308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.401320405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.408158538 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.407682967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.400586316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.420271139 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.401882516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.401033901 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416356435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.401963671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.3993835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.40045762 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.411336333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.401990271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.409459055 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.403340355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.402423815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.406501859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.408148254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.401954077 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.401764274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.401962848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.401623265 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.420234545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.401545343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400274729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.402611885 seconds)
  done (took 206.255536411 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.415829712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403505139 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.419307169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.402027004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.416779356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422523989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.409804667 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.434186337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418775805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.422140119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.404162035 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.419550779 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.404812428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.402639054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.414476051 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403911845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.417754143 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.411896714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411916054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.424588428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.402058764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.420077123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.404372094 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.409777179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422483508 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.405075007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.402914091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.403464794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410068256 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.439605227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412409913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411442861 seconds)
  done (took 206.534771445 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.60449618 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410423251 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.412476918 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.366096021 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.410636311 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411366504 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40673465 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.601810982 seconds)
  done (took 14.936045681 seconds)
done (took 626.678723451 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.807636106 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.526526389 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.624004313 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439881236 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.23660545 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.459411372 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.432132121 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.610268282 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.384115682 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.626204919 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.718369504 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.449313778 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.855498448 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.428636496 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.689490554 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.536247921 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.342559717 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.464495195 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.754759927 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.019335662 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.706365307 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.930884525 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.625813611 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.369563228 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.878922396 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.9232202 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.200047164 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.334380161 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.447876695 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.759632006 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.152335406 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.46424939 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.505926048 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.500371404 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.559231381 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.540995764 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.437540604 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.503317328 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.64198339 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.693125396 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.004510256 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.197131841 seconds)
  done (took 96.09480347 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.39702173 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.395216547 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.396617918 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.397324103 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.397990434 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.398845852 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.394991543 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.397768732 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.396222642 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.397248294 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.395921302 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.39735809 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.396415073 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.398077941 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.397774129 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.398403098 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.39678162 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.397438597 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.396933268 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.402080369 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.400186989 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.402374953 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.402147569 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.398922293 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.396211783 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.397932394 seconds)
  done (took 37.660263414 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.415547404 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.665742062 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.832823261 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.421570032 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.417209412 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.418816576 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.498062783 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.426448613 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.419022943 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.419918324 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.587301926 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419235642 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453024921 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.865615023 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.418942896 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.41850447 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.416994302 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.417160229 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.676886044 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426011048 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.522234139 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.425948404 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.500447665 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.436405853 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.441168645 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418288219 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.421954285 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.983982294 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437749457 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.590003215 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.244776082 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.506222898 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.948037185 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.861172439 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.248115701 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.428308046 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.419309185 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.597895557 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.429455503 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.418335754 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.500207161 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.4277004 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.849579064 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.098958727 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.446565079 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.419611803 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.006219343 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.621087524 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.685586308 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435620924 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.876425347 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432826811 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.42071319 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.420805415 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.679009969 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.433348072 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.420105218 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.988095338 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444883301 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.502531729 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.428024089 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.420936415 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.685160997 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.420377149 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.673008802 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.422075113 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.428011109 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.439406906 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.85531962 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.431378046 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.121823354 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.440601034 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.421806556 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.592311825 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.682523384 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.040882486 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442380125 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.689688829 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950900188 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.519812094 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.433012394 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.973473242 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.52402575 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432916051 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.424180259 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.425382568 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421850686 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.466673828 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.501545498 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.062215364 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.133782117 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.0277688 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.534726765 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442855136 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.422849083 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.994492265 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.449344479 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.423525477 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.850568367 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.122546121 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45203689 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.432840399 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.123517439 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.452971068 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.5077751 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.43801245 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.864703984 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434838593 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.471514768 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.424206507 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.429537611 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.447762983 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.506993965 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.435339684 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.424886414 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.094544186 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.626194863 seconds)
  done (took 187.483148606 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.422537222 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.418154091 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.418813401 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.417883367 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.418344959 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.426925902 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.416546843 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.418702945 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.42426499 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.417608018 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.417936819 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.418060986 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.41814334 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.423156465 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.45048415 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.425629313 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.026252339 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.418734655 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.419802869 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.421268484 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.224395608 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.428768924 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.419616201 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.420678749 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.421180676 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.423012824 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.431864631 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.421214583 seconds)
  done (took 154.555071774 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.427186169 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.033330712 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.453769468 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.564103109 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.453427309 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.424256616 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.563478714 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.494714044 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.451454452 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.424883201 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.424937009 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.754008046 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.437012503 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.983431924 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.638519338 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.591785339 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.990956766 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.453419326 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.426425415 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.423405186 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.56837101 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.437038373 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.755565129 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.047710436 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.454222215 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.038858466 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.421477684 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.429694162 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42682561 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.039211544 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.452361694 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.756939145 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.515936753 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.489027542 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.063119818 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.008296451 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.008356483 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.595257551 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.435966676 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.426227174 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.426788385 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.41160674 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.040803617 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456735797 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42870252 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.029360769 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.457551749 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.430373615 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.434778414 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.427048251 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.491159524 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.510351662 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.776332511 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.054440254 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.534921778 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.449643787 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.569941011 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.825870855 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.44107415 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986384115 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421482559 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.046919485 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.45703444 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.413130924 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.429912655 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.434665104 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.588398501 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.578527982 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.99648411 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.455835726 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.985925184 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.61423807 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.43674682 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.428769581 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.432098003 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.047636683 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.015735386 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.614327274 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.583429619 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.639358243 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.424315443 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.431910563 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.415002184 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.514298481 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.438965342 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.048570401 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.011968146 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.4567353 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.43083988 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.43244242 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.431885648 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.61574915 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.072205175 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.539020041 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.984562215 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.787345736 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.77047095 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.442263212 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.492341155 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.451332931 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.766192708 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.442039298 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.491025703 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.890404559 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.772981872 seconds)
  done (took 171.47493845 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.681680635 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.700249462 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.532135627 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.591269665 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.066197601 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.032416904 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.7383356 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.580779987 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.543721343 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.695047704 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.654129068 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.526890419 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.651739428 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.531820889 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.199562538 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.528503072 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.541055765 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.58383659 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.591705886 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.468880697 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.137595862 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.738672418 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.63601597 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.402838471 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.535247656 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.219113816 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.028391233 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.015197259 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.615250046 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.812723259 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.003729954 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.596344944 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.459288135 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.171579099 seconds)
  done (took 69.144491304 seconds)
done (took 717.725368127 seconds)
SAVING RESULT...
DONE!
