cset: moving following pidspec: 24183
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.252243944 seconds)
loading group "string"... done (took 0.466828829 seconds)
loading group "linalg"... done (took 7.644022251 seconds)
loading group "parallel"... done (took 0.173576819 seconds)
loading group "find"... done (took 1.185949498 seconds)
loading group "tuple"... done (took 2.127978845 seconds)
loading group "dates"... done (took 1.342574829 seconds)
loading group "micro"... done (took 0.247418946 seconds)
loading group "io"... done (took 0.6671047 seconds)
loading group "scalar"... done (took 42.097837387 seconds)
loading group "sparse"... done (took 13.097429528 seconds)
loading group "broadcast"... done (took 1.173965342 seconds)
loading group "union"... done (took 14.453436463 seconds)
loading group "simd"... done (took 5.173291693 seconds)
loading group "random"... done (took 10.399036794 seconds)
loading group "problem"... done (took 2.060223199 seconds)
loading group "array"... done (took 24.608622042 seconds)
loading group "misc"... done (took 1.524916667 seconds)
loading group "sort"... done (took 3.92476055 seconds)
loading group "collection"... done (took 20.179128372 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.520459854 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138403098 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133581853 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149505757 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207279214 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145695587 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15918501 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116091634 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.971196426 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180301994 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154379262 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514579269 seconds)
done (took 5.143995212 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.226816017 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096980533 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105399218 seconds)
  done (took 0.879393363 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078897046 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147646288 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096030211 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079476291 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096297816 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078317446 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09702863 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07860846 seconds)
  done (took 1.356058618 seconds)
done (took 3.232967286 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.740451069 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.283549528 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206286036 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466669914 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.200236135 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219662582 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683894548 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349986008 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253774296 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102657299 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147301246 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391532977 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138469556 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694808696 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092647158 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126350993 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181043606 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451762096 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084306043 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112152566 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118153496 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143290309 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131165831 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09255747 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18915836 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081490194 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19613004 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109166373 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081451268 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290932101 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202894456 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688646821 seconds)
  done (took 10.979590276 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112960435 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135417177 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100183474 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140110035 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135473717 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100702109 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088387702 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098120555 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123127308 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177118287 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114921057 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13821838 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096964374 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083532837 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117842604 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247212599 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122323785 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105229187 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102652044 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104300351 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1238915 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115612142 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111954666 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094627409 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168250438 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22414429 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113434984 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127228249 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098244397 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113083991 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146250384 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146216854 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098256622 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081596957 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172994677 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126067504 seconds)
  done (took 5.203838269 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191472074 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122277697 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170616667 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166997051 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142401904 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161828818 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115508494 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249504962 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.122607019 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165176027 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128400413 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14370147 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117530375 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082094118 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101239306 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121453301 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081612879 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.676555698 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166672471 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137323411 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099208262 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107491689 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101066567 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366655629 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089159465 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098955141 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084063404 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084727277 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163357713 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083802658 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.165049389 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102613627 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100782558 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132851648 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191199868 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132286797 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117306294 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096940067 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077886051 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193647297 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079280294 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103965417 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079770668 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120637536 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132682711 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118820211 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099355679 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096048751 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20778394 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09534481 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.0980519 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94928653 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181917283 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091004617 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097166028 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322261295 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100945381 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100740477 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078728392 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268156719 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18376816 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098577653 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080394637 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097288803 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082463622 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401935397 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081205859 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.668806045 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089032316 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108018546 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083675095 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098274481 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104821649 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090676229 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116630303 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081690697 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10117849 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081320858 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098264095 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083212874 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109190191 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093798596 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084911815 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098016783 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148140814 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096171565 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100108655 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129721655 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101396127 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079501688 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133156927 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099356124 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080327971 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134040193 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099380081 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092786749 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101063951 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145703083 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09942188 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.186819658 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095347865 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128537642 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100533692 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11493077 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114957463 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099831244 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086085415 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097372243 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078122001 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165767077 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08201003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098667476 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082873883 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113226502 seconds)
  done (took 22.710244657 seconds)
done (took 39.579438385 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.336342694 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103953102 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103960949 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102691509 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100338085 seconds)
  done (took 1.504375527 seconds)
done (took 2.236124361 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289687187 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173988138 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094753676 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167188918 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093461063 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17335082 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160867009 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112992717 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218586051 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077453579 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164428403 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094598997 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076553046 seconds)
  done (took 2.655586104 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096999221 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116348374 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083827183 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112368731 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077714127 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112769577 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094038153 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119970015 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109874125 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085400221 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094017974 seconds)
  done (took 1.830348499 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095921926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113754792 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083169649 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111449004 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077468137 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112467166 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094258734 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117565675 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110670642 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088036937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095296987 seconds)
  done (took 1.8273362 seconds)
done (took 7.031269797 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093409519 seconds)
  done (took 0.815001165 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926950414 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.845201311 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113605498 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150583029 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.308447347 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193472471 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.47508298 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124604841 seconds)
  done (took 11.07532613 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.148337433 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085340083 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104948893 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083989964 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104080723 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087616866 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101487041 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103230637 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084949115 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103469394 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084591438 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101380316 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102979495 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085243226 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104039004 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088207767 seconds)
  done (took 2.36329453 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122300546 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120569334 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110071431 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111331315 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088022204 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105170173 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107860546 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090306863 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103561601 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104105741 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092039215 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106757707 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104946182 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081048534 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107247927 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108662384 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087884683 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108082755 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107729096 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09249351 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106774595 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096626821 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088088648 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106649316 seconds)
  done (took 3.297511822 seconds)
done (took 18.278069105 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162489732 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110567844 seconds)
  done (took 1.003047451 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096688394 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114595625 seconds)
  done (took 0.946104055 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099645371 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097376391 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123346874 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109618307 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082052242 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098619893 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120021256 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081896311 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096909432 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081121308 seconds)
  done (took 1.72813284 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084570357 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111467587 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102912625 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093892694 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105406613 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094503501 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087370343 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099333114 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110376784 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077001487 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102304642 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114573374 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086632973 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115807132 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106554313 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083632875 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102659778 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098821671 seconds)
  done (took 2.514949507 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081128338 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098300063 seconds)
  done (took 0.919080259 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08259974 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095864772 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08326993 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0988369 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096171608 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078729848 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096083626 seconds)
  done (took 1.372550137 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485057646 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138349629 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257711189 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086236924 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120269845 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305216993 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099027054 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085122609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104000716 seconds)
  done (took 2.47709482 seconds)
done (took 11.695503985 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095252607 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118593021 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115631906 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467221302 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108642921 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.10001845 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161337103 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250139179 seconds)
done (took 2.159914764 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152063312 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32831067 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115968922 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068409078 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097664615 seconds)
  done (took 1.355238366 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081465489 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101147416 seconds)
  done (took 0.92601293 seconds)
done (took 3.180511701 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082247401 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.134160233 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080626141 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098652978 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081654215 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097777613 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079668017 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100466799 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081843209 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095818387 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095866034 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081493275 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097824173 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081340552 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095294406 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078288872 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097551534 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080653212 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095736897 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078502697 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09505818 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081016039 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096838821 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079271963 seconds)
  done (took 2.950110984 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101503405 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100417601 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103646915 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08649312 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103068216 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086318819 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102660011 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098113881 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087131003 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100547301 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102299312 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086013513 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100609723 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086534893 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10034755 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102925889 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086630409 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098972255 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083614941 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102308845 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103163639 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082572818 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102753369 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103890663 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08531173 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102257499 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084328622 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099772371 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103861838 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08530675 seconds)
  done (took 3.622389791 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086920451 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095310697 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0793222 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103154606 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077844458 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097912518 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0777793 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096929055 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079680881 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096094246 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081257221 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096327073 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080133683 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097279187 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079815652 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097921158 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107234341 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077468319 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095516856 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078251595 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099347866 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078495904 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096459877 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079073662 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096647106 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079324519 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097226676 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079264501 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09819536 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079432294 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100143891 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083508088 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098017288 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087114725 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100101115 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079278718 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101023105 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079740467 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097343586 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096521079 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078972999 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096250345 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078946197 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103398992 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078781038 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098642151 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079299519 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098806222 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080445549 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099524706 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078957975 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096418851 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081609066 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097742742 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099914189 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078759607 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097963143 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078602166 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097519345 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079238189 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095815254 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078950377 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098688244 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080135951 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112754052 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086241474 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09672525 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081329248 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097713793 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081842567 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097550107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110113557 seconds)
  done (took 7.239156636 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085025783 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107404206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081430641 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098728682 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07726695 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096817536 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099793807 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077613066 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097863591 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084986094 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096034117 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082406389 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097247963 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109259733 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078527847 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097464313 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084607366 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093373461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078600063 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09985999 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096432043 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082261655 seconds)
  done (took 2.754967182 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211165114 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104957616 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141863147 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10855002 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084167768 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105907472 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102252038 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086882156 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10330719 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083973455 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100371272 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102315957 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084259606 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101057642 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100918439 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085532263 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103022423 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086070997 seconds)
  done (took 2.653580064 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096146594 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100132437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105108492 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098061981 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09842393 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083815005 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104671807 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107290851 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083327958 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098504229 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090045589 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099929811 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101153339 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081333279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102054071 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081726768 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101237013 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083041124 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10772051 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104846927 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104357011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090162105 seconds)
  done (took 2.88270324 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099256319 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102399058 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119629836 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085002208 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096575309 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080892712 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108155298 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08272416 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108630753 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102048693 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083215399 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099429291 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089736771 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099963795 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105710858 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083187502 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103595657 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083146495 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102674182 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078947406 seconds)
  done (took 2.675800428 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104133519 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101148374 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101030326 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09219946 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100741442 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082195935 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108966756 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099593455 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08228989 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123870358 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099689504 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082660163 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109169343 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105151936 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100352611 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091034847 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107460234 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109375955 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083536941 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100325326 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125644872 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083373614 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10897135 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.209380711 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081886631 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100083524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100981477 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087202441 seconds)
  done (took 3.644718655 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083461204 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100754789 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080373198 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098704872 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079677714 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098578089 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079573265 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098467053 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082696577 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098354671 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082999671 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10115182 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082753522 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100540675 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085624501 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100463252 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082506109 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098302453 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080752336 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098120773 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082968747 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10076909 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083177613 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097941701 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080346064 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100596797 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080249433 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098884741 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082856224 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098075113 seconds)
  done (took 3.483839804 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.0933437 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108989972 seconds)
  done (took 0.969276298 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081214789 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117086271 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081031553 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105264888 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088864121 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100051026 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109378273 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08814584 seconds)
  done (took 1.538232435 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098900875 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112594841 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085266186 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115737788 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113113559 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0972717 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163578925 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102229946 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08956925 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099378713 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.097067904 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.10245207 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107886614 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083674787 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.1074925 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090306594 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099660002 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090534689 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103241171 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100185558 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08534786 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11287054 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086140251 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099109932 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085566129 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113641081 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112057671 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085535748 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104933267 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112231323 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089712689 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095666469 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083476776 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103714716 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081842027 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111383492 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114310765 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086303083 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109910753 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084576103 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111732949 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095269084 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08777277 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105606541 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091674991 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100732535 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082834062 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094410633 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097788652 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084770857 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095942533 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081758913 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093907329 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088951477 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105637952 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113257647 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081230006 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102824552 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087222646 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105871121 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090528851 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104331285 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086962752 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10189997 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108858362 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087393349 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10911631 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079352473 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096800425 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082267874 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111114565 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123768007 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090493027 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101806418 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084263619 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097455257 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103296098 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083154397 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108269959 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091512975 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102256091 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109461257 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091687697 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101933158 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087920359 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110706189 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100723101 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086726033 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099718992 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099088126 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.10170572 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083003951 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099961544 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110587527 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088190556 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102630809 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082366323 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112742528 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079128596 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103742783 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085448423 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103176816 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111444086 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092033979 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108902152 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109131953 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090559015 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102857701 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087286709 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099099033 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085422495 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104541976 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091484848 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094242648 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104880565 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08376057 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101680148 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089846996 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099241309 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083232243 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108032883 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107654445 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08028174 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09760898 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085456252 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102300981 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086660823 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106361797 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098597008 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077519313 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09598264 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086354591 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100755796 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087102682 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105564743 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102788004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07632822 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098749733 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088497855 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108472358 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101098682 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082652252 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104905352 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083374873 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099590043 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087319586 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102411397 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081977894 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103999554 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102344912 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078114208 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10479849 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087029123 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100346838 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087531297 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104335629 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102444584 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083687822 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098148133 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088032155 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103122682 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083183468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101823135 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083720031 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11072706 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103757785 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078788071 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100488852 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092631918 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100879141 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085646039 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102066375 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104664287 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085784991 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100398522 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084328031 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104661034 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097612335 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107992606 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103910669 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090080072 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112089574 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084115024 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103878385 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102411766 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083944446 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101765978 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089112376 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105339617 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106415025 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085383892 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09693982 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088031279 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107924137 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081276978 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098845645 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083399067 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107101499 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109625127 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088692202 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104779107 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083088567 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103758713 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107268517 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087181632 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102915173 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083755015 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108937106 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084734335 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110950354 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10526744 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094699898 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107228927 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080590368 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107525299 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10130455 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09117466 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09876421 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082067833 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101247386 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085855116 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102603758 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087939957 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097717811 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092150919 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111614424 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103362502 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08413741 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104089598 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09436254 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10619543 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088113246 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107351472 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108681455 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097722863 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102134382 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088532067 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113375963 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103631415 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078255785 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109674854 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083260713 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103397292 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083667361 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101485963 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088953501 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113623491 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107497716 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079104454 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106558127 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083754148 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102855502 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080922221 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110288691 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107823747 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086719138 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113508131 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087440693 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105819298 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089271421 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105101553 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10565058 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086989896 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107761601 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086155608 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10754617 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084806271 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106289517 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102739168 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083073153 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106389523 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08879684 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104378117 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091996754 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105437404 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085550682 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107274449 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105564428 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087381403 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104719779 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084840794 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109063451 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08544997 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104981987 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08829212 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0999569 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111715173 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085991546 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112462059 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086267622 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100764761 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090852646 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107378134 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110049712 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087030639 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105357872 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08679942 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104813111 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088146712 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112637885 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101425828 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091404948 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107321616 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084574662 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105574189 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083486085 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102899467 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083071316 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10389828 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101855265 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083266671 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102062561 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090445692 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10737145 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086405055 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106118938 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105469608 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086136897 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105839521 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080482605 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103930885 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085536476 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104517358 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093234483 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105473215 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106983808 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085050696 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105902672 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08512811 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10090483 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094084707 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113795159 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105908897 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094044816 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10419506 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086386431 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113878954 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098099955 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082654376 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103218892 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083861837 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112235222 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086605433 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113359006 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085802725 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102823325 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100756971 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083696456 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101068893 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077409113 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098922523 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085902585 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104556658 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083230512 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103951624 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087510562 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105576881 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110281396 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08448592 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104786354 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086502178 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101113302 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083430574 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102628239 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088194076 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104306082 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10122618 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081301951 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103347784 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085966021 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103651218 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085211041 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104891701 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099515888 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102987388 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105619784 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086476167 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096276343 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087412947 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102284978 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084105474 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103599239 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089503978 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106325544 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10470794 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090759914 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102027778 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084683122 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103676017 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082587007 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103111296 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101801149 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083054195 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100838351 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085223711 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110283093 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080882805 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104557562 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08268081 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101580642 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106344198 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084599254 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104415755 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091180023 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104842677 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10309538 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089625002 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105668733 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087535801 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103510085 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085769373 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110266142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101033792 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090766971 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102304778 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085618022 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10498051 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081776157 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104176285 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084352975 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100794955 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105666817 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08441235 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10064977 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08358622 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10096755 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084727149 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106386221 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109976035 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085166646 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105370077 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079254941 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099463219 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085069982 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100505576 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086423539 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10681271 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109116855 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087271486 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102387853 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082324326 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109932981 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090362651 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108251421 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099971317 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087544585 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103925747 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08593797 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103548448 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084330785 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104368274 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107856171 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085358146 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101622732 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0913431 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106325205 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084793248 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103833933 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083563474 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102472047 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097362585 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085194391 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104146744 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090762653 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105172245 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083851191 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11278465 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101702744 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083378597 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106886819 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083973646 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109872867 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080266078 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10509123 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106905268 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087940872 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101213707 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085887964 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103000046 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088766999 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104967112 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082087013 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116139315 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113125017 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087679663 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105391084 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085382363 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101209295 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081922328 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105227888 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088115906 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107920448 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114865635 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085374524 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104325975 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081677529 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10533962 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089365586 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.11006994 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084010122 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102238739 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085413992 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109107407 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112190253 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084243721 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10556942 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090485149 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107958101 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084561857 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110058133 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101655019 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089944416 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11622028 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088350169 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108117615 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091627103 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114983208 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106746182 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081604892 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106880099 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089077598 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107137664 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088164257 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107406628 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119786488 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089617878 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104438774 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086951198 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109572749 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086212214 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113925759 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107903286 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087916615 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110207207 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089229594 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11674882 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107636103 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090641482 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10608522 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086858255 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105374113 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086735689 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104869984 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084214345 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107912152 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107364617 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090646761 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113842762 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08559482 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113897326 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111508903 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089876428 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100111859 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084430021 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103976751 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080055831 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104592711 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083459434 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101676598 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102645654 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085545717 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105405097 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090505173 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105176464 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08573248 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102683604 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078558577 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105686775 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104913962 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087529182 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099727416 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084341856 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104530535 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090158504 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107724848 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084195291 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105230507 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105578339 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085208599 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098145765 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090389197 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102732173 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086882402 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103291754 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086250465 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107229904 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109101202 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089424033 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105780653 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087309871 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116669034 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108872126 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085181542 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103410771 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09242202 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104328182 seconds)
  done (took 58.719089623 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149284688 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081842947 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101271359 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081793888 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116258484 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100824248 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080182531 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102342623 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082133811 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105143822 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081428925 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10142281 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11043886 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124619989 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093480459 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103359665 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078552168 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099896899 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097948425 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080553639 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11016739 seconds)
  done (took 2.897800822 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108967582 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120405352 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115797787 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120366951 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090011508 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114472013 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114573959 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116170781 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098847416 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110332759 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118002137 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115381247 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092429501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11363441 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112886932 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097585736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122094488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111566578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117812941 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095837179 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114486789 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113979777 seconds)
  done (took 3.249032615 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087425613 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106147948 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088461429 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101592082 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086492052 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100884201 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.09121616 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10339014 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.0880897 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103333767 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081966572 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102415939 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104264328 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07866336 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101678661 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081291308 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152166218 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106305763 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083270804 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103715107 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097946151 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08621482 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098639255 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079835062 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10191673 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087799006 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105582971 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082967723 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103427354 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083333297 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104024993 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082641147 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10489506 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103129938 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083029681 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102514448 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084139877 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10443842 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081371476 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102885073 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085923787 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102058034 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087836859 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107609227 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083844036 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103207538 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08694229 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104114143 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09766828 seconds)
  done (took 5.50698976 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108467649 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16644088 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089422652 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146710162 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121912646 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112415852 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087551659 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142128167 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1035568 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083669573 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12467631 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120385707 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104605678 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090133505 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110967633 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104114273 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086256804 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102747757 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108905943 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08444556 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108523119 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091145052 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120436575 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118138891 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107377698 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082898146 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103633349 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109223805 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097834445 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109907353 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109935539 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091908325 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121484047 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105289864 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084637795 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10736121 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122164937 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104549526 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087147629 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103167213 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088647331 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111662949 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111470343 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102655275 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104122456 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109696913 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086260658 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103094036 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118670764 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08766689 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11493715 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120829078 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108240235 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085708436 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109324706 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12099615 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084389274 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103203781 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087866781 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116966791 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101309036 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088554811 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11895381 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106662136 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113114967 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099656196 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109645183 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109324171 seconds)
  done (took 8.16793344 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097858258 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114965915 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123253481 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120966396 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091218628 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112242856 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112009576 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091089485 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110757685 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118033068 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111099526 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134418277 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087102629 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115707977 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111375206 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092186974 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112559998 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110602049 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092013483 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11216626 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112109895 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122453459 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09329283 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122310914 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142529028 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106955231 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091086876 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111579793 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121081196 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112237416 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124802724 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091439617 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112464239 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121139476 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125299149 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091801768 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104146623 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110611541 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091620682 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112327295 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105621806 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101181612 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112607322 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106394769 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090748936 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11232425 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121209792 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124697002 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115142427 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097527649 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111956743 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120815331 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111914586 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092430794 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122048584 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147758872 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120567663 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122123989 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112466912 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100677774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121339647 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129300831 seconds)
  done (took 7.715668931 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11290542 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116590269 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118516584 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100042153 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083489816 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110050505 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083470911 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104755922 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114478261 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095406246 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117051041 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109165238 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112688796 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097390182 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109620726 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112217496 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089288192 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109355959 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114601345 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110252675 seconds)
  done (took 2.946401972 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096988938 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126312046 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086298705 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113068947 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109412429 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092605392 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10863671 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107709499 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087351508 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109832819 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097507241 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118733201 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106623786 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09234171 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118037951 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11181499 seconds)
  done (took 2.502674193 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098812763 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119310699 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120702602 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086365804 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105012192 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081210034 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106666993 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100627596 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082129432 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120832231 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084940419 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108879511 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104919801 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086136193 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101757736 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088554078 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101275832 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083002255 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105709951 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119005944 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096458734 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104101388 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105676912 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086882195 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105426705 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09009257 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106247039 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103438791 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083681478 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106392537 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086135593 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113229636 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102346396 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084799837 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104315008 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082522691 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10598716 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086108758 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109360795 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105425625 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084117288 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104829878 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085130527 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107289083 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080599431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10628581 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101087739 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0917826 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103966255 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08596029 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105170092 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107073377 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086663201 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11666003 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089121592 seconds)
  done (took 6.254871864 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101277224 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110901966 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081727587 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104828461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088806606 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109264872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109056238 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088453953 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108983046 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084052602 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107598973 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090644453 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107537072 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110555524 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089453497 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108654211 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080350905 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106510351 seconds)
  done (took 2.620629244 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091443134 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106312776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093399839 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106427925 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085142421 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108992675 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080640787 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104519536 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103617135 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085988671 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105744895 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088206737 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103502917 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087493211 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105251305 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084995766 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108833061 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103712629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08603576 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100849678 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088972577 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104708557 seconds)
  done (took 2.963117121 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118418895 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127693029 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095269204 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230573111 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106226717 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133957324 seconds)
  done (took 1.643065928 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114268835 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124551563 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106230554 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106712046 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115648916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108451004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088004255 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109019955 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119793387 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102213338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107894837 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118737227 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118019839 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09820658 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114652864 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114945931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109498734 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088075963 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107275183 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130449901 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088554205 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118891427 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109268652 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088498477 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110915687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119185821 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119578582 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124261864 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088297647 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120365502 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11563375 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088934625 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119610603 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122026601 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109442194 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097713973 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108281087 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130053654 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117625423 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099003503 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111416372 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116748642 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100497383 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113946947 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119737386 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108419394 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093917455 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107720066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109243576 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138016048 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095313922 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117815208 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115857596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119429888 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119258001 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13548017 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10282175 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11820598 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115624898 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122438253 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118505369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095800763 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117711785 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123171496 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11499684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119018516 seconds)
  done (took 8.210948521 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106819822 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130136656 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107938492 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124235728 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098094402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10856191 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107972246 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088414119 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109433991 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10787199 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152152598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089239983 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119795234 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118623717 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109238566 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088355285 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108560454 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118260545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087755255 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137276465 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108862083 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119368592 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118284104 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097881125 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122798469 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11510195 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108490294 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088830355 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108510825 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109627224 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094539053 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110936956 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119218754 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088269656 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120703483 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108184462 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09017834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115211784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109132497 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115943938 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097816625 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128688398 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108978494 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108959192 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12231757 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08887335 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110571112 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088086904 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111634737 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107931713 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103009349 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124270021 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122573413 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117938207 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108907175 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088759208 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109535877 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109254518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089002898 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115172724 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11821568 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110599415 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136654791 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088294235 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109536235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118481415 seconds)
  done (took 8.076404106 seconds)
done (took 156.632396188 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.10333294 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139908712 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098508295 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169448954 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106754804 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119733957 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138569741 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09805836 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107062692 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085327548 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106533502 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087350925 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171323505 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085589941 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107098058 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107778056 seconds)
  done (took 2.67449864 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.204677714 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256075706 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106544599 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109249741 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090880478 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110905211 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104835876 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091756051 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110207068 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085656611 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10950425 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087159422 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105939013 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087302853 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112271889 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089263053 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106124749 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088246741 seconds)
  done (took 2.904519988 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117718349 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150386208 seconds)
  done (took 1.121248765 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124856468 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184975148 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317948193 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158090449 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106871217 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127855359 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157427591 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131277785 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198492069 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124120364 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123448752 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097537685 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140463282 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117109377 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094800058 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119107762 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142204189 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094706279 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115375782 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116380763 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117005438 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107006871 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11735785 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093184876 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180814843 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121037063 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085732468 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107429413 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116584087 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094986007 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114215956 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12632154 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097959546 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176450183 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102179038 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176439616 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097943387 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114828412 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115418459 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091868534 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119339148 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119392344 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104821704 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12015873 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084883168 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119568913 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107320528 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086120889 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117481919 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099442583 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116044102 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113611265 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158026487 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120058526 seconds)
  done (took 7.582827108 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799544651 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16887991 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090309646 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891407889 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143730317 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105596356 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.785611634 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138961603 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23398883 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763406975 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139720789 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125133391 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230566399 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238698764 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931085965 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312081726 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674909191 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107806277 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153761746 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154406372 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12034632 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138002718 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130496817 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429686449 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096113745 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11303213 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117505685 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101151437 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159618815 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12790259 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11427357 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180632587 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246968147 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207523069 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116276992 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08923526 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112170098 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.172352522 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26603305 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21692508 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.1815695 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08774373 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111220894 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123493085 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112203779 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108989297 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165451298 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197687197 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174650652 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092224173 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123191466 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121655507 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123042379 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166082644 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123175822 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296973706 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326306112 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112774736 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12228054 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10688954 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268853397 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123633989 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22600992 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117264739 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213866298 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112874609 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781780425 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191448399 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090980275 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12062553 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120110619 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095074344 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122482177 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167373872 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393596188 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124812415 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094249289 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113794594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219038161 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127021439 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111135056 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16453107 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117772603 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100788295 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125765807 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123112605 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172537239 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228758413 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124484005 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120290535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095844741 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125922118 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117394001 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212186359 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220240354 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16286648 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211571711 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123319613 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16575818 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191262646 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098371045 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193870773 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097707185 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12605103 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123263145 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217952599 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147002637 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102031434 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117421611 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119476081 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151219963 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128221785 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098254137 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191654846 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458826139 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16766216 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109146386 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128722891 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099790082 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183616535 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09815503 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259554813 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122310913 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169661476 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120010223 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088782906 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121654609 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16606661 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123386597 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121664853 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102020469 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119910798 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236699405 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219729043 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123747111 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222746486 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187091575 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121014974 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173025969 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12253486 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168900359 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120615061 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122147282 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096443214 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792202911 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124643937 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099352796 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116469964 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188846029 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112022925 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103775938 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126671419 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108822615 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75181323 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12863993 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121567682 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102965794 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119742036 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122007634 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098026221 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116417944 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16352409 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234065152 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123654261 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11980134 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105003382 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184944074 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095767666 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.129269116 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125529245 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12853046 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102376687 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118502375 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126313197 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171037903 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164485265 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22422256 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.598823091 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091159469 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127802556 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230625589 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09032959 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292231118 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120740916 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226019035 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167638768 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12205361 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314942369 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167798244 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189763092 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126825778 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175088719 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087960855 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120762451 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169061592 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113320064 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118672188 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164179203 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126414064 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102992954 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.972125577 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112979091 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226634975 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109702768 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173257078 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117349946 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099331098 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289035322 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11259393 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107583902 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188480181 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093450963 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127834724 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.735133173 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10394368 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123383765 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120120934 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223596905 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165150445 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119567109 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098831119 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122510196 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163469443 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207675541 seconds)
  done (took 44.325509442 seconds)
done (took 59.456436499 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281090558 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216498753 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259391041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16881223 seconds)
  done (took 1.871016312 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174404613 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148408888 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120420935 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107842773 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151156408 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086130467 seconds)
  done (took 1.663203381 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35473006 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271063806 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238660787 seconds)
  done (took 1.740964209 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.294875669 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.257947626 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356611086 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42519687 seconds)
  done (took 2.336092413 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214082552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13218375 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111249686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104279614 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197308799 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251160876 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141348481 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202956813 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123008458 seconds)
  done (took 2.405290917 seconds)
done (took 10.893050583 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.262606704 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.156642784 seconds)
    (3/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.250858977 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.198760534 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.148689448 seconds)
    (6/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.234316567 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.166195822 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.172684234 seconds)
    (9/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.198667077 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.106707785 seconds)
    (11/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.223049458 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122856205 seconds)
    (13/286) benchmarking ("sort", Int8, false)...
    done (took 0.187698554 seconds)
    (14/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.233785419 seconds)
    (15/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.141979158 seconds)
    (16/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.156047847 seconds)
    (17/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.131587463 seconds)
    (18/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121939493 seconds)
    (19/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066168963 seconds)
    (20/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.232178253 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.180752055 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.201376966 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084974112 seconds)
    (24/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238417795 seconds)
    (25/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.212894463 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.215291921 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158218467 seconds)
    (28/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124978633 seconds)
    (29/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.219462591 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118442096 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110360403 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.225925005 seconds)
    (33/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.176163021 seconds)
    (34/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119655372 seconds)
    (35/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.208432181 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.219645465 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.152311462 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095050027 seconds)
    (39/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.190888309 seconds)
    (40/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.09467663 seconds)
    (41/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103751872 seconds)
    (42/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.125695043 seconds)
    (43/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066571329 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121185733 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.14116777 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102905463 seconds)
    (47/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.15578041 seconds)
    (48/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.139300558 seconds)
    (49/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170020978 seconds)
    (50/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.197237977 seconds)
    (51/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.198195039 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.1747702 seconds)
    (53/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068125194 seconds)
    (54/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117159826 seconds)
    (55/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.184015071 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119360653 seconds)
    (57/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095520337 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.118326396 seconds)
    (59/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121101827 seconds)
    (60/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089018349 seconds)
    (61/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091126077 seconds)
    (62/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.197972407 seconds)
    (63/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.112754074 seconds)
    (64/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.121923233 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126285055 seconds)
    (66/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.12827518 seconds)
    (67/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099183984 seconds)
    (68/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084491888 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115361946 seconds)
    (70/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094950526 seconds)
    (71/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.171388433 seconds)
    (72/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.174886388 seconds)
    (73/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.096287501 seconds)
    (74/286) benchmarking ("sort", Float32, true)...
    done (took 0.235524112 seconds)
    (75/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.170574282 seconds)
    (76/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078801707 seconds)
    (77/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.142418036 seconds)
    (78/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.155429568 seconds)
    (79/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095903866 seconds)
    (80/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118143396 seconds)
    (81/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090380589 seconds)
    (82/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.098336302 seconds)
    (83/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.070734016 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139060925 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096120928 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 0.111435582 seconds)
    (87/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136239482 seconds)
    (88/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066719958 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187397368 seconds)
    (90/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069627613 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070600258 seconds)
    (92/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120780589 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.131097047 seconds)
    (94/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090833355 seconds)
    (95/286) benchmarking ("sort", Float64, true)...
    done (took 0.236060161 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138109926 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086976455 seconds)
    (98/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117511176 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.113951767 seconds)
    (100/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115646359 seconds)
    (101/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159334366 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149605807 seconds)
    (103/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.135574366 seconds)
    (104/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.127996497 seconds)
    (105/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165636338 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116077053 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150184999 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134593754 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089363921 seconds)
    (110/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.155490114 seconds)
    (111/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.162237667 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086880762 seconds)
    (113/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09112846 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111858161 seconds)
    (115/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184535096 seconds)
    (116/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.113830833 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139227339 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095217919 seconds)
    (119/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119638942 seconds)
    (120/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095815298 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117442517 seconds)
    (122/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070135803 seconds)
    (123/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.124172421 seconds)
    (124/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068509575 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.071704585 seconds)
    (126/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.15638802 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093132224 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169433386 seconds)
    (129/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.096176913 seconds)
    (130/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067893732 seconds)
    (131/286) benchmarking ("sort", Bool, false)...
    done (took 0.195435185 seconds)
    (132/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067716973 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120058231 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117355518 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092676173 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117473034 seconds)
    (137/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101771844 seconds)
    (138/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183966703 seconds)
    (139/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143423193 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087182843 seconds)
    (141/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.089623897 seconds)
    (142/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092548361 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109596537 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095202106 seconds)
    (145/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.183944883 seconds)
    (146/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234114053 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068387972 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110109261 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094048985 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121125226 seconds)
    (151/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.120319943 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135177536 seconds)
    (153/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067564015 seconds)
    (154/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.122187652 seconds)
    (155/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092742318 seconds)
    (156/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109386157 seconds)
    (157/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077359056 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121621611 seconds)
    (159/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098871806 seconds)
    (160/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11077957 seconds)
    (161/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08485501 seconds)
    (162/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.108701485 seconds)
    (163/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.071422283 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114122863 seconds)
    (165/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09455582 seconds)
    (166/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.155320672 seconds)
    (167/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.0690724 seconds)
    (168/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117464874 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086705758 seconds)
    (170/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068102802 seconds)
    (171/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110282016 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086014673 seconds)
    (173/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138610962 seconds)
    (174/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.1716823 seconds)
    (175/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08452928 seconds)
    (176/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.115029815 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09432982 seconds)
    (178/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112843749 seconds)
    (179/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094713362 seconds)
    (180/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090147293 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09278408 seconds)
    (182/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111491232 seconds)
    (183/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098537809 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117319167 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087259772 seconds)
    (186/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.101270362 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102121419 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130546591 seconds)
    (189/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086550743 seconds)
    (190/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.095277331 seconds)
    (191/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094405198 seconds)
    (192/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149855336 seconds)
    (193/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094024988 seconds)
    (194/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.090554727 seconds)
    (195/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088528483 seconds)
    (196/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111487578 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067309593 seconds)
    (198/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17372221 seconds)
    (199/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068836025 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 0.225136753 seconds)
    (201/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085538355 seconds)
    (202/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.091479243 seconds)
    (203/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067771491 seconds)
    (204/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11603654 seconds)
    (205/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082880122 seconds)
    (206/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115015508 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094505545 seconds)
    (208/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.111130268 seconds)
    (209/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159541576 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112052014 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096405067 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118387503 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125921154 seconds)
    (214/286) benchmarking ("sort", Int8, true)...
    done (took 0.222702917 seconds)
    (215/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097943091 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119914258 seconds)
    (217/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069904373 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.338303513 seconds)
    (219/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068792621 seconds)
    (220/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088104904 seconds)
    (221/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111817895 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085607803 seconds)
    (223/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112449541 seconds)
    (224/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067612678 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10991554 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086330104 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157192895 seconds)
    (228/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125364734 seconds)
    (229/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08927802 seconds)
    (230/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090229664 seconds)
    (231/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067709188 seconds)
    (232/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086059926 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109419318 seconds)
    (234/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092254967 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109621732 seconds)
    (236/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094343788 seconds)
    (237/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120677115 seconds)
    (238/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116426276 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090531415 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116066186 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096300687 seconds)
    (242/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100523934 seconds)
    (243/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094886845 seconds)
    (244/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068219332 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.09136882 seconds)
    (246/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181626544 seconds)
    (247/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066678779 seconds)
    (248/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.06789664 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11110657 seconds)
    (250/286) benchmarking ("sort", Float32, false)...
    done (took 0.174996176 seconds)
    (251/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086759459 seconds)
    (252/286) benchmarking ("sort", Float64, false)...
    done (took 0.172379199 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086797351 seconds)
    (254/286) benchmarking ("sort", BigInt, false)...
    done (took 0.244015559 seconds)
    (255/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164736946 seconds)
    (256/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116655351 seconds)
    (257/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123731013 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095686823 seconds)
    (259/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066539355 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109039661 seconds)
    (261/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067642657 seconds)
    (262/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116636862 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087139808 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109854964 seconds)
    (265/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06825609 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090052532 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096012619 seconds)
    (268/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067293952 seconds)
    (269/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118410463 seconds)
    (270/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136454782 seconds)
    (271/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.141341399 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116319905 seconds)
    (273/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068088008 seconds)
    (274/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109071737 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067301137 seconds)
    (276/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067413799 seconds)
    (277/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.1124157 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113478407 seconds)
    (279/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182480781 seconds)
    (280/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.091014688 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113844052 seconds)
    (282/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111115855 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092771953 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110288614 seconds)
    (285/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105521128 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113535681 seconds)
  done (took 36.431262324 seconds)
done (took 37.315065146 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100247848 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147871574 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096752128 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135967055 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124149007 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091519801 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118896735 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098023445 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123257347 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125213237 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099330421 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09370705 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098228335 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12029598 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096269167 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138207701 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124519717 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09415668 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119898487 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086240313 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118697735 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088630329 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111798218 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07033278 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122370178 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095103436 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116440422 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120650374 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087152176 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110890656 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089875978 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118182592 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086445311 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124987601 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093340526 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119046144 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097299208 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120699562 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111805452 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087471548 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118943892 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086918131 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117356975 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094910857 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116330811 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093009331 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119495255 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099432482 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140761422 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115715471 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095142122 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123885267 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097285629 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118579079 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09032577 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119603848 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091531023 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139488188 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119805434 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092056081 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118884137 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09541898 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117672493 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095230603 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119146809 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122176336 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098703818 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115730337 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097172136 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116902912 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087084837 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119862202 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090372051 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110402106 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095879047 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12191427 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086428735 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117370993 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117466721 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091750457 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109992535 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089259825 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112089545 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092967062 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113085617 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069568396 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115272805 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09355946 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110300697 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096771077 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116753855 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095129962 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112683927 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099769668 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111008166 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.0927583 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112843212 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089241596 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113642588 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091283764 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11111848 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089907552 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121796461 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089401419 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116897521 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12413612 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087714052 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116966787 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087089452 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110710612 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102719815 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121336566 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087781417 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116596152 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087515766 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118935009 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085929891 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111357484 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086869802 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111419256 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093742984 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111313153 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113009017 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094461151 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125004178 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086887141 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114808881 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090160847 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111045511 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092762417 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111580849 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087554074 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113433423 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078236113 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114441295 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087129398 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11905746 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090477359 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119799196 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089114712 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120692219 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092998029 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118496385 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092950308 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110205288 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074803875 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117038472 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091777936 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11373363 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087202532 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113251895 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087324601 seconds)
done (took 16.975661666 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089450008 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18842956 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151874576 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142430046 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108845188 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114134991 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122383649 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118813192 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113887634 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143244527 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110881566 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132118728 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147880948 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088580508 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112866382 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091623193 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113128003 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103069583 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146136834 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133565981 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16426081 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086605591 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147356811 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136339604 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121420897 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104709749 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11311762 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091827735 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116199434 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11549843 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134231921 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117007208 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088666316 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137401049 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106015218 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120352647 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088191125 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118885787 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088237801 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112324161 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142152707 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133521061 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093621804 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119159188 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091786297 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114638833 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089345772 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122093263 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098906151 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116277603 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127086092 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157180747 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091817445 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122061535 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086997738 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122679085 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122664702 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090210722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112905021 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090181677 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111612358 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092165845 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127509601 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141814855 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091475621 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122409334 seconds)
  done (took 8.642953297 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108595422 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139991377 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105454429 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131394518 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112264266 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088607362 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113394808 seconds)
  done (took 1.74571351 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093350742 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137612064 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112233238 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136100617 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133200456 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112695003 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124291424 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089106859 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132968096 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089846215 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134864476 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150524908 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092436962 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121283603 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137553918 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08992266 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139796179 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089359375 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118939516 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137022988 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092715519 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135293322 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093933842 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117436224 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105835949 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119192951 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164500316 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095705848 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114671819 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092924129 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112202615 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151727192 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103046585 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125291103 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089113178 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130907899 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130315376 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087220286 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127998523 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098852585 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.133248869 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091781038 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115809103 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087929712 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118715933 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123983528 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093734443 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115165906 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091558776 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133810515 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090194362 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144924407 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089185168 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119493154 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091070841 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119491572 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099401955 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114464751 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133985274 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090486773 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131411319 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10519515 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127969883 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131231862 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091886406 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128258585 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103860647 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117767782 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09145787 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117988708 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130536469 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087597659 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115598326 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09921811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116168418 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112390064 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137605636 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090594106 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12460552 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114984723 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089794675 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114846863 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112871258 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118726928 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089484352 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118415108 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092856214 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112799386 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088056317 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117967142 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087868491 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115977775 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094452777 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114680309 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116847369 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106067253 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114942586 seconds)
  done (took 11.897534965 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090198873 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115199713 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092646985 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114551771 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092038008 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115573274 seconds)
  done (took 1.571903621 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115776623 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118167925 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104582129 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120941534 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156386019 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104677354 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130423762 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124334159 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108114454 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126969971 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129652856 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105678592 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136358823 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122177852 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103466175 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120619756 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104305052 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125525366 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128108562 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098444038 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137032276 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121365255 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097317987 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132486635 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119968782 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096664517 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125839301 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104907694 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130045875 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125129674 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096468819 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118408095 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097946266 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124270771 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130650829 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096163163 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1213675 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119452266 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101079726 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117947984 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105279018 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122888372 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12740542 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094348235 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124707476 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120775767 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094555855 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125458917 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103690789 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119543784 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119426068 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096128581 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120589955 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093881821 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123645528 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126860824 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094928767 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129841284 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121294523 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096612294 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118540889 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094155628 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124820412 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119245272 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105182805 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119512313 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121202435 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098150832 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122837098 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096730468 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119902734 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092891951 seconds)
  done (took 9.24791714 seconds)
done (took 34.045806693 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692389393 seconds)
  done (took 1.649826091 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.830203136 seconds)
  done (took 1.785891833 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.142992811 seconds)
  done (took 18.133156736 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496679156 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576339866 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.995506798 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17915569 seconds)
  done (took 3.20666493 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955634906 seconds)
  done (took 1.931818419 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287628852 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237189918 seconds)
  done (took 1.485459404 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.832449207 seconds)
  done (took 1.805316692 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.376218696 seconds)
  done (took 2.340522475 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332872339 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186610098 seconds)
  done (took 1.490210198 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.556290195 seconds)
  done (took 1.528203198 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.055348892 seconds)
  done (took 11.033438657 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.274418118 seconds)
  done (took 1.2591336 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307561494 seconds)
  done (took 1.282844807 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.525937563 seconds)
  done (took 4.503301552 seconds)
done (took 54.402063272 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104712648 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127404414 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10171831 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124579148 seconds)
  done (took 1.428191898 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106603856 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122085791 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100715375 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121318113 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127106438 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09570289 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123566149 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10152841 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121207854 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097146856 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121570257 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120491886 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098606447 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124667572 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093824432 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124529594 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098898185 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122157783 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124106676 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097205093 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119631626 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098970302 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124906188 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094909051 seconds)
  done (took 3.659552075 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105969895 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119741322 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097084617 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118751778 seconds)
  done (took 1.427384218 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105743989 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13130852 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106764201 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126302633 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132212131 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105997205 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117494439 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092386754 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120250507 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099778686 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115843935 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138622142 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.1066756 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125242976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101906405 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114058722 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091427714 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131716785 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125300416 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101259124 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.11905177 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099831961 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116135306 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109669697 seconds)
  done (took 3.715004705 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17653636 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128703955 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139301809 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095428567 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161214738 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141916284 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088249805 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141171783 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088386507 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131670604 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118792364 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132589523 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130263655 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088555102 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113823333 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088080557 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128613824 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129752874 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091468482 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128680264 seconds)
  done (took 3.432979166 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10475155 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121281268 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088596701 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116363753 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101232824 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121129723 seconds)
  done (took 1.638613695 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097949572 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.120123999 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090846494 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115239666 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094713259 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115130622 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088808006 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115546287 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090901762 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115609096 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090289352 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114065789 seconds)
  done (took 2.237683002 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.513385736 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122027828 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120765979 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08962338 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125209776 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090258664 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130577633 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093494791 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141641062 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08919182 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11715892 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091276182 seconds)
  done (took 2.709828503 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242655376 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12574338 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285173018 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370123872 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157228346 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16603459 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278389453 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163098676 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199223065 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149940575 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231633724 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197066926 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154056243 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192395836 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138296671 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146801329 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190898387 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251994987 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154145072 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212765091 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207110917 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168084563 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181433388 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152258581 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112625674 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19432279 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095962859 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130894438 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209407642 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206895838 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190918199 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162583533 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14816312 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238441891 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249744162 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198165947 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282435926 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134909911 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143293976 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167768958 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266433037 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142054771 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234810375 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156620024 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105780423 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221882386 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168625972 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18006515 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153515565 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140348599 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198803016 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242644167 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193539996 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139242391 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301380864 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149709829 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157749707 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189387135 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254217313 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228081679 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189886297 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12153778 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189720116 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191954915 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213368332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.12543553 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.211304565 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147530956 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184543815 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189353379 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166323187 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204722948 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181105289 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140400753 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170784079 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17433472 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173290273 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260275589 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18664035 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12302796 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169889109 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150195139 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105007012 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193825671 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125786331 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2166872 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144999492 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164069858 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209348787 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160101954 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162229934 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221670432 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185578329 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148841641 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084058192 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154667627 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15631467 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17700009 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140562914 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159282719 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157541959 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129376598 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168982102 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097716261 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210756346 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091623349 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185018701 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183988735 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128094468 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162372331 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154222314 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150507881 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179630198 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200407682 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141678677 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134069592 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209864475 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178370871 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142049975 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178666335 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227975964 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117597126 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149806899 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228804557 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217650181 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140801029 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229686907 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154283878 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108889102 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134506087 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181905851 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156614372 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163141334 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133392213 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184918132 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233174147 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099489939 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139263641 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196446711 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135435218 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132215125 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155015167 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12100977 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138628474 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143526075 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14562691 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177070384 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179636016 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155347426 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168775825 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150900721 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249919937 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140823827 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151164348 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122898247 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122219878 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194240503 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226797682 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10409852 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234292641 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172946709 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199323838 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196538382 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107901223 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179149232 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131311437 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094044468 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22450923 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168865669 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163256441 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197057286 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223365024 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181542414 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183242844 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166293271 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202150217 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164563207 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157717693 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112452282 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162062973 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15922324 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124120196 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.112958398 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134567756 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150915474 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143325791 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134237387 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200189641 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172242421 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216579734 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158255801 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122928469 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208183962 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102966961 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177322669 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206423087 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119702749 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226217643 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193591422 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213588246 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117314314 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230464393 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093871373 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126962745 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143111784 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171092097 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134346164 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108991291 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161178514 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180065294 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209221862 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172198397 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207216534 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201470246 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191262323 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095879081 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168781089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184049298 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202749438 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154010552 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140342979 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152055214 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178343908 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156037673 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253584972 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170193491 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175742903 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24115891 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124952627 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132186492 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151590848 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179842615 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155028137 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177607303 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147069402 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139222404 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161511167 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103671585 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160052339 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213803879 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16644582 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189803964 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150080623 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187377991 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128300106 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163348945 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161398425 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166011695 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080717709 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202540817 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203696906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146903663 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168219997 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214503862 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105582083 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307431216 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235530454 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195088533 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13790426 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155928083 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162086474 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163813158 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171261853 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179418713 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160837768 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187749078 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160624869 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13646272 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111883653 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15001448 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153662849 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133638551 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149016455 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179187994 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13789532 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190649786 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156347238 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159353507 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172363968 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150482718 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117358146 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151693301 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244554479 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184449104 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240434276 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150371983 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179525479 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210129279 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127184512 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10391285 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13377828 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179067741 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13746682 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193239539 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214200374 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201030068 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180867203 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205991142 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112687483 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121665196 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158404191 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168395539 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203621487 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149098552 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147781801 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230584948 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11016044 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133276699 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167917774 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289823526 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145847732 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198897145 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110405977 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286402026 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100654422 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131962651 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164830393 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236134135 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109929627 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178533927 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170580711 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161828155 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164754173 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150153695 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192122007 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237440201 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200433258 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211415408 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106055318 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157799041 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176430924 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22168151 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15712607 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110871323 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232956556 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196338483 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.1949417 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142106681 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169081515 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169074747 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159063945 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216076346 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107943459 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236116233 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135030271 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197906532 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162538846 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138115919 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178198161 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189687576 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141853481 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187959602 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209813315 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107823178 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13450024 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166370695 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178774338 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154501222 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128998195 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182345162 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125935934 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196275319 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261659282 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134571014 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155964475 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120086272 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136514561 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155694282 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158169372 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139892869 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141277907 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228890427 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134532732 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191516517 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229140058 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172903415 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174895625 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144971414 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694878451 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102852823 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22287569 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121027763 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236718751 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152406668 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174971411 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160368332 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16812764 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194190706 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161218596 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23095615 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221132574 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180474889 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132762453 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159281195 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155628234 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144887047 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126226351 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169409479 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159050906 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146074792 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205948362 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164862373 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110489131 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148583779 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199250034 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149600438 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186709419 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180522644 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140661572 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173389562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215954792 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106288495 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208347357 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20945596 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143026914 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1498304 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134538533 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148597344 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234085839 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125699838 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189262111 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211214413 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132204095 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196944712 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119932917 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222672443 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158079014 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186441951 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143768199 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158747854 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157186188 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138488811 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102649597 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156768135 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16752567 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152248448 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159911515 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165410017 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195491981 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123447476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116667159 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311563325 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178279867 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2153934 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137321737 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135898368 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162232756 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121856199 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.20642575 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180276601 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136711658 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1072241 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1379392 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129836899 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13658856 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157484107 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194259018 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167816763 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235875372 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110106025 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282050619 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14139882 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15623293 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092947972 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134329724 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151519595 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146552704 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157258892 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194310307 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263418874 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149731125 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107601473 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149791273 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126155086 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109519476 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166226854 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165841595 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177992947 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146731695 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109484615 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157058841 seconds)
  done (took 82.821632377 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187542418 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138893538 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148192973 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201757857 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177134108 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270833285 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209911944 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254955779 seconds)
  done (took 2.666861161 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094335495 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146933246 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158096558 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132937781 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091947642 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120644167 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345275159 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133894934 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116195703 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123120508 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173959636 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094591743 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554038749 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091243034 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120002125 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10866238 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093221581 seconds)
  done (took 3.770918347 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.178155676 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.499082496 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.947683252 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19487761 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159884254 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117263659 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708329409 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094969166 seconds)
  done (took 11.979611811 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119802757 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136937436 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124304224 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152880377 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.14114606 seconds)
  done (took 1.767060264 seconds)
done (took 124.227137253 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103834628 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128833881 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09807985 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130488574 seconds)
  done (took 1.529738297 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099608711 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073264897 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10104371 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074984109 seconds)
  done (took 1.430340386 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189940715 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169234223 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.410841113 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071840651 seconds)
  done (took 1.59759722 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.123585767 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139790131 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104870053 seconds)
  done (took 1.458621287 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.112235034 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129829867 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103759057 seconds)
  done (took 1.432634472 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111100676 seconds)
  done (took 1.197985625 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113407554 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137926725 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108664144 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136317925 seconds)
  done (took 1.582081434 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102617383 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127282796 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110103492 seconds)
  done (took 1.424758735 seconds)
done (took 13.093506147 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109124451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423865353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384848657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14650571 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722619729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380319023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034968107 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146636152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167291037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093821857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139880573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672228991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025153117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374741526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983415024 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467116476 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676395602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121707011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120162791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094677687 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019348826 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099862875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122065406 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093242925 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703365405 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425188212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095674207 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.466280761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092706073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126688974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382954208 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123165544 seconds)
  done (took 17.106900372 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1018564 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174030733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098441954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137740278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123271104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094721255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127571443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09489955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179124781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122679853 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110997862 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122138635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125637296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095211939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142088926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092619482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125803449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093337881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121937208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121476069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112730877 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121241006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094115882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121687346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093902368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1358995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122514335 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093071651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120391296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099634974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12719344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094264367 seconds)
  done (took 4.831737187 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145885161 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18281207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128545026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127610181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169154969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124237266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19926014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118989088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183541615 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122805539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140010183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093595009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157304031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122346866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114965068 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122061321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097121524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122722501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092781887 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124055079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140019441 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093129552 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12264397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093782086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12382885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10839307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124161997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121218668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09388794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127216845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099471934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124208253 seconds)
  done (took 5.160542471 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104349773 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126486224 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109918412 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.1385358 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095407118 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126855086 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097743187 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124772797 seconds)
  done (took 2.017332549 seconds)
done (took 30.202868065 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118610558 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133407675 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107451715 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134633532 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103569954 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132998613 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091655809 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133755428 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134683912 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10276421 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137857902 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091812781 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12316112 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092578479 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136156128 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103803784 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132973977 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101964615 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136661023 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131804787 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094878567 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132877489 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105720673 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135031082 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104392487 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133828848 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136603532 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099438141 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121946018 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095104055 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124654742 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.106793305 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126855375 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10537991 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127511707 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098096491 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126709548 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095165237 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133224794 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133444708 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.103025677 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13348168 seconds)
  done (took 6.043849211 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114379806 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141753162 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105249272 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081414659 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116817569 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080619478 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137864459 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080013384 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109822775 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107781583 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073953628 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10586011 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078420151 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101678795 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077799731 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075322969 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107968284 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07576108 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07590704 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106346861 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08024205 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073071741 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107854105 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078687669 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075438386 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110227532 seconds)
  done (took 3.580722431 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107224638 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135060158 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11418211 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184613524 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162028997 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100871117 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131828525 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139995298 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109957651 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120032538 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097561535 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149936581 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110296304 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12999185 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091932472 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137040692 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139925628 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094471416 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12777676 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112323594 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13889196 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102894716 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140975878 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132833256 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092192337 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123145919 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097114143 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134695905 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098434428 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13096427 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097085413 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125444344 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122965864 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104605849 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126299617 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093850566 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141952067 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10271487 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130988371 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092482802 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129255253 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121705895 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114366585 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161674416 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093825968 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129197863 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095952515 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132595491 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120890525 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112000624 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131498483 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092432127 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126253227 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092299494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12214128 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107776307 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124788764 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095946232 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132042929 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126835034 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105946052 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125461499 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109347099 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122400395 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100085698 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12258086 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094646994 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122091455 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144115882 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094745558 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161368994 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099380206 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124393254 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101546327 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130526332 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128649049 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093799842 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137809055 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102876479 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126646911 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10288048 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125793552 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09561691 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140170676 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124076984 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095485882 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122648618 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099937984 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123950873 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094773011 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136635032 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092644091 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125346763 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110226045 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122376516 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.1220498 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101330099 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126671656 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093338947 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135632506 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098475151 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123498946 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.108625501 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123478545 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12519339 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104679402 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126547801 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092437683 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127774804 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10051023 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12425479 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094221603 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126442556 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095102732 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132793162 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128963684 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099209967 seconds)
  done (took 14.874301789 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234383041 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215597194 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.236125125 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264362209 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136166226 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114479408 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.24474107 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126262497 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124490145 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161668253 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171900499 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180900996 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170035264 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181593226 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170708723 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094048542 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143261032 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134755602 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245755952 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259377943 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144212025 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100883889 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.200071843 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.130271226 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137018028 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133037621 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11060554 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135273477 seconds)
  done (took 5.821892631 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115289717 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155188769 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099113569 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144999388 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149860212 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092975074 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128873457 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095037047 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136883272 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136415598 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094360955 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130191149 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101543079 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133072467 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123752734 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103064574 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13276529 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096003891 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127526299 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098163466 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134832419 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103081606 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12771787 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122149988 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103421951 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122592252 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087333315 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143985393 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12275559 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116493688 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121704941 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102856987 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13700955 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094859343 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123515458 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095628356 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126179508 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096028748 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126191777 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092360327 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123284729 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077687594 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121818632 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137197344 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100518547 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080622158 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130529278 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128420373 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095042404 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120616252 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096937536 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126106134 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096653375 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130858157 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096458631 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125036235 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09749207 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116249082 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100520953 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125114061 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08527804 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121610652 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098922884 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118957196 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102000819 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128718209 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093016182 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125881342 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097453814 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130183174 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095472323 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130128494 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090625012 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127127688 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096043713 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129700626 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125847036 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093718398 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12299537 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094986746 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075342084 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12465938 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074908117 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126900891 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092127379 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123957039 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096396069 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13103796 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138566935 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096816771 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132980117 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094258246 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123514841 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096583064 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113792249 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097109634 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140338717 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141278312 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095313811 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123034655 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108260597 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127463994 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093254223 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106565199 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103560289 seconds)
  done (took 13.029699087 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137799557 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154414894 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125378659 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113072605 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157662049 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159206061 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101307678 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131952408 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096156439 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142988999 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094331097 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133035409 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094279644 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139059356 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157541482 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104696015 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126523094 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108836089 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128977096 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170310978 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111736245 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145608301 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110695007 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126232973 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129936505 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110761118 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161966621 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107999086 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137596652 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143867321 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108251868 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163840832 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144443942 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09923616 seconds)
  done (took 5.511035958 seconds)
done (took 49.956987812 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.237915005 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423343296 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199137424 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.134820721 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.215147705 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.199581704 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.224604622 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.199516596 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.77403122 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195705193 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.464326902 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.765570885 seconds)
done (took 60.157687978 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.264763541 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.344650648 seconds)
    (2/2) benchmarking "String"...
    done (took 1.483430662 seconds)
  done (took 3.944038837 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.75999238 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.129990837 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.450865711 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190303174 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.208666876 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485905109 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.872684022 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.535249452 seconds)
  done (took 27.989657016 seconds)
done (took 42.079412623 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.19614839 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.258559995 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.227331381 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171158865 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.304067579 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.236130381 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.527109991 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.200884088 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.213154222 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.171039217 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.225133289 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.199567683 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.201189268 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.507945517 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205492975 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.191871257 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.26852613 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.676566065 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.598755914 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.208839466 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.216572562 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.236697598 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.210097906 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.195028925 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.219795197 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.199602684 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205472981 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.218514806 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.742449585 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198090638 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.204569071 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.654436473 seconds)
  done (took 190.407915794 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19318878 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.228234076 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.308990812 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.219947312 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.612350706 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.38405754 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.334836274 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.676338936 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.21453249 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.2001199 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.411343129 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.198976578 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.488208364 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.17090566 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22389875 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.257959231 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.395362991 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.487808489 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233868931 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.341642209 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.207941971 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.448725993 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.340662074 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.374700329 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.214271606 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.217858609 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.202439678 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.224578045 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390111559 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.327357666 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.250237873 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.228002204 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829842451 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.047394836 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.202076719 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.232333201 seconds)
  done (took 149.439604121 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194490795 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.195120387 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194384365 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.226681503 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194928664 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.77969402 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786217144 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.708499759 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.503726635 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.531809792 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.197875465 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455967723 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195150365 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290627642 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209936468 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.195748606 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196417805 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211687632 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238356665 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201336909 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196456408 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.763157487 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209350411 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.21829363 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373792437 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212946697 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228898395 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.58604244 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196192933 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229760596 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.530966322 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246349854 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197210136 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.59424272 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.540161045 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314836153 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19983705 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230618709 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197542483 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479472589 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199086585 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197656503 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197358353 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200315134 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867518671 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197641607 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.783030614 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205135961 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.142687096 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200962259 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198112157 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.327869018 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.840062022 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21769622 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197918982 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200650608 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19801927 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199351919 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232089096 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.259826863 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299879584 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215835052 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202119352 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232083579 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1999514 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.299237675 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204261432 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.369511652 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258618582 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.311607535 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766073364 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201407085 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299704717 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321248483 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200888168 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.202747693 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201113324 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19962092 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310691316 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.200939933 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.617596231 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.2025106 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.377902383 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21775386 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.53173086 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302778521 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200508547 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.627495729 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206501724 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202034217 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957222216 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299158503 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199491381 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199738202 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201110497 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.619354914 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786980998 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.471141491 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.206760496 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.241587281 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.207785247 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.635527491 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.760033401 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907388232 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.209125144 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3146763 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.378364705 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217959487 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200679844 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.594422244 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208755938 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260344516 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200484646 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600411494 seconds)
  done (took 364.505725047 seconds)
done (took 705.4711492 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.799389805 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.799625512 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.907295495 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.783175299 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.751637137 seconds)
  done (took 10.166034374 seconds)
done (took 11.292693047 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.388380106 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388050004 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26137522 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393772765 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233853392 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409680407 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.367965623 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221270824 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304096778 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.284086884 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302576521 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255139035 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237706368 seconds)
  done (took 18.173812238 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.513921907 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.51495335 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267342843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517205856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242727041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510726711 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405478244 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.4242441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419267454 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237323123 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217063644 seconds)
  done (took 16.396960224 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518320258 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515721288 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268919993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519078836 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245533864 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515735069 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404340453 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419206239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420107461 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236247583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215071316 seconds)
  done (took 16.405451865 seconds)
done (took 52.103718419 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.213220415 seconds)
  done (took 2.340988323 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247424788 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410929693 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229468545 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.217643408 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212685368 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214963319 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217568597 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213025065 seconds)
  done (took 11.092166049 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.21216417 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209779467 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213014558 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209938883 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211036555 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212367253 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209853676 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212021207 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210699171 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21212241 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209359487 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.210717543 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213311927 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.209876213 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212526102 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211636472 seconds)
  done (took 20.509052377 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212812256 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210759392 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209819497 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21118711 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.211183497 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21097033 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210889972 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210632991 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210575502 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210862256 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211754104 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210145058 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211713976 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.21105338 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21172751 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211550544 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210944483 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212255987 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215814234 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211435318 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.212325685 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211881427 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211008295 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.212022733 seconds)
  done (took 30.206324108 seconds)
done (took 65.277250057 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.828478954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.877991318 seconds)
  done (took 6.837691845 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.214669328 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.213756978 seconds)
  done (took 3.559835586 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213042656 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212989765 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212755677 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.214015937 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212530574 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.213210029 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214905081 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214911007 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213344483 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213320614 seconds)
  done (took 13.265708762 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.215731468 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.214546383 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21245572 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.215081208 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214782558 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211545489 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.215130024 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214814337 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.215243005 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213415313 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214998263 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.21223842 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215420933 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214105648 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.214821469 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213534625 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213559004 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212310775 seconds)
  done (took 22.984966451 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.216446953 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.2160611 seconds)
  done (took 3.564109379 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.213764698 seconds)
    (2/7) benchmarking "second"...
    done (took 1.214082205 seconds)
    (3/7) benchmarking "month"...
    done (took 1.214025938 seconds)
    (4/7) benchmarking "year"...
    done (took 1.213352558 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.214057142 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.213344858 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213500754 seconds)
  done (took 9.62845896 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.217556533 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396451433 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.477518714 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.824342268 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.218266162 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219025566 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088849163 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220066534 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.222392014 seconds)
  done (took 14.01696122 seconds)
done (took 74.989187754 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.23973745 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226737889 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.473920692 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.222922957 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231258716 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.50893176 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.222210999 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.33949907 seconds)
done (took 37.60014372 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.226420974 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.201297125 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.009374555 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.20161814 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.27762855 seconds)
  done (took 18.824281492 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.262753183 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552752177 seconds)
  done (took 4.948840094 seconds)
done (took 31.13467046 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218954402 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.218217733 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218445631 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.216212995 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.219562378 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.216410884 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216774502 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.218696291 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.218109872 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216658315 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.216505768 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.218720294 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.219222403 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220407344 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215741902 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216226868 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.219328205 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220172511 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216854935 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217302434 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217453088 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219325113 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217201822 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216649462 seconds)
  done (took 30.363531813 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219763531 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.217942161 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219935339 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220065866 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217613094 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.219488966 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.220485629 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.2177602 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220768002 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.219672986 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217924467 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.218168784 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22079429 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218844874 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219795321 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218075421 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221889523 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21803563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220071057 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217581617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.220498393 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218397675 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219029646 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220535085 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218590481 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218631357 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222198584 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218923268 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221014352 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218018954 seconds)
  done (took 37.717897102 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226014218 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.230346319 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218188216 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22021768 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218092292 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219702311 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.220066973 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.219415047 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.218673346 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218537544 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.221731301 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217895691 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217573354 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218745832 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217840067 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218310439 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217525268 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217829934 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.219065421 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.219267235 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218416941 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217913219 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217828082 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.218057364 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.218441791 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.217371728 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220664734 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.218509462 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.21794232 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.218518454 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.218542387 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217852633 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.219385182 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.21805189 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.21959586 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.218482368 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224005993 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226434519 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21896161 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219362797 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.218948788 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219515838 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22087132 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.218122138 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.219053217 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217778226 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.219512566 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219092148 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.219239229 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.21928585 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218649997 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220984161 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221093211 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.218855693 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219742197 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.219892414 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218351855 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.221794286 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220807785 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219664219 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.220199672 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220964702 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.22130358 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.221403667 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221831491 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.220089126 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.221345701 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22002645 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219877613 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220117986 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220290487 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.221486782 seconds)
  done (took 88.958033529 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.219880029 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218670348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218667853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217936454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21848761 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.222147327 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.21820618 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22070776 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219190593 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22057191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220263522 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219321172 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218801751 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220979291 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22096803 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220124814 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221579831 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219196898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.221744243 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221635479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223087812 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219087565 seconds)
  done (took 27.979682725 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220824658 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224146885 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.219263904 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221794319 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223807286 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223639549 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22282043 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228114553 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223939603 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222192475 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219826003 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224736057 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222121203 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222141243 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222849676 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221904585 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224166766 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225087084 seconds)
  done (took 23.1533423 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.221812814 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.221727527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.224510323 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222697281 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.221645688 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225737251 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222505603 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223779558 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226206357 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.221221862 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.22285929 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223002429 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.224051627 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222135825 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222685985 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220315587 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.224549185 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22227295 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225006844 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222020579 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222225092 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224579452 seconds)
  done (took 28.047790108 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223687253 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225433541 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222732786 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223039511 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222557784 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225912801 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224474546 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.222410672 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.227187749 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.224590994 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223218499 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224851185 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.224192077 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223168159 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.221763327 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221674243 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224824062 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222298936 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224744949 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222440299 seconds)
  done (took 25.614342213 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225926414 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227084299 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226745317 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227540617 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226118213 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226942437 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227359718 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.227991462 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228148149 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227160994 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2274246 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.227672633 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228131747 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.229389609 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228346774 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225609429 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227904376 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228149995 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.227584201 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229329222 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229605036 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228491006 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228169267 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227783299 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.229146309 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228490662 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228470974 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231599209 seconds)
  done (took 35.523865692 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226887788 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22861664 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22759112 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.227444141 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.226249235 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.227322803 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.225743383 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.227616846 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230895096 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227291265 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.23033853 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.230223411 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230135983 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230062062 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22839595 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231282403 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229612233 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22788249 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229878268 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225797807 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22990739 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231560028 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.229526742 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228582245 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226359799 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23024357 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22875908 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22881544 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229751072 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22807626 seconds)
  done (took 38.00742998 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249187239 seconds)
    (2/2) benchmarking "in"...
    done (took 1.25103209 seconds)
  done (took 3.646092317 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.228414774 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232850977 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.229596031 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228857088 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228097307 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229938778 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231196083 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227820064 seconds)
  done (took 10.982095647 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23239264 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.231797102 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.230087231 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232231984 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.232189636 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233017429 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239666508 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.250769175 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23252273 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.23281295 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.24121139 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23896827 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23337163 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231695226 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.233357791 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233666974 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.231703776 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.231086245 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.233846194 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.233881085 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23181361 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234326505 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233860192 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.229693445 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.234660942 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242430185 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.255661557 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.232186273 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234126235 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.236663363 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.233173246 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.230395398 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.232561472 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230840161 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23091776 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.231629398 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240161032 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249761387 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.238153374 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252224735 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231827423 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228241257 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.232524124 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.234287096 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232122443 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232488889 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.233827671 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.229042079 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.232049374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237071106 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.237397205 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231150609 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.229434996 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234843043 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.235492637 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239615255 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.25404601 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.235789481 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.2431209 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242270771 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.265195766 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.259204294 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234354571 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.235340227 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246847696 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.259246811 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241468177 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.251982424 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.231201758 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237226053 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24281352 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266904565 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.261154753 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237667312 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237056772 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.236622955 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237530579 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23743717 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244141388 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259673194 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.238720437 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243708804 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247978994 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260812483 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.237911113 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238636598 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.236645345 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.238486257 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239252712 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24970075 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.257527988 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23887195 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.238658596 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238109064 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.239895604 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239513131 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.238943421 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238715579 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.235540099 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239843986 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239078605 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242403374 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.246247755 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239317978 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239365704 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.24532776 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.257773163 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240705467 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244531629 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.23878693 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240238509 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.241260116 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.246961681 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.236354176 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244376856 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248564973 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239364043 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.240721711 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.240111034 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.241974304 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250416156 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.266233826 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.240555663 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.239500253 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.24575365 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252611625 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240157026 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.242934001 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.241452867 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239459982 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.238307204 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.241533112 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.240832553 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242886735 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24151267 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242321993 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239650265 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.240882681 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.243016144 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243490817 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.242496077 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.2417472 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242727772 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.242146303 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242552117 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243446224 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.249670943 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.262438244 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.243287282 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.240877973 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238189034 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243528403 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242958225 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.244175386 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.243669001 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242837949 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242302474 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244962078 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242937469 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.242812141 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243928868 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245348753 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248108407 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242897105 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.247581559 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.243149407 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.239668157 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.243750826 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244085059 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.242126817 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24555861 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.244337582 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248731923 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252016731 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244244885 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245335984 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246457761 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244046527 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245602294 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244541155 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247835933 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252752572 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244787758 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25021811 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263829625 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244218778 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.244731432 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244602244 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244960988 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244310427 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248315942 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.252845706 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257748604 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270810666 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.245906899 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248558199 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246990572 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250819581 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248374322 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.245472912 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.245314071 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245731983 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244713923 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246197682 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.246684271 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246094626 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247467738 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.246650934 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.245857293 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.246333078 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246364153 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247711926 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24806111 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.244362935 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245751287 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246834644 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245860183 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.244059384 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247120695 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248264066 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.246676103 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.246816526 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252200914 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.243375999 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247892213 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247820313 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.245016559 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246267783 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248247738 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248732313 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.247768063 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255336246 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266406732 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.246053786 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253443783 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.265686003 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247708082 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250294408 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.247418399 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.245857376 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.252677982 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.25625156 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.248126102 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250037523 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249956697 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248506605 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24889217 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.253331016 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.266326571 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.248577449 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.248889457 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251368371 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245753501 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249686631 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.248974875 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250047789 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249835177 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249656033 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.248388701 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250513142 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.2496133 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.249380048 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.249910365 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252360666 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258609682 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.255412072 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.250327344 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251277451 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.252267435 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.253308105 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.251101654 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.249645081 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.248761211 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263639106 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276972223 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256886118 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.272044288 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.249785242 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256631765 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.271084775 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254787766 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251728195 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251741011 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252332238 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251113898 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.248903634 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250475888 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.249995347 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250704733 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253688407 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.255523389 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.251654797 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252525922 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.251605267 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.249590986 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.251147316 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252487737 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.252024035 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252694529 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25344734 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252251705 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252381513 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260127672 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272163527 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253145693 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.251539878 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.254283417 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251456018 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.252700315 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.251453088 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.255508846 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261552698 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.256236262 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261883562 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.252269528 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2628191 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252056344 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255858176 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.259909072 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.249197871 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.251140776 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.252755619 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.252683259 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261656593 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273411205 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.256184653 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.257995012 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253487465 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.252786572 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.252967255 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253795794 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253023391 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.253315109 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262526433 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.274680954 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257862293 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256344688 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25167523 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.253711774 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.254583811 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.2534786 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258389834 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.254922244 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.254204068 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.253751844 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.252276896 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.253831592 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255492101 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255835923 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.252905552 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.253299909 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262769126 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.275706148 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259262344 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25514049 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261985282 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274819232 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262408227 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.275650431 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.255409059 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.255096591 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256099289 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258847974 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.254990525 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256651089 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.255971266 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.259504212 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.260910251 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.254794227 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258052163 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258162425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256716503 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.257230434 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267341986 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281771914 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259483162 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262518626 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253930168 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259718251 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261280393 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257213343 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.255455005 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.260869917 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268858618 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264574968 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.259372557 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.258925402 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258294343 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257313067 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.25862757 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.2579101 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.257356505 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.257092262 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.257828722 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.259428618 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261209288 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.256922776 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.25905108 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258787473 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.257780617 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.268380915 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.278262936 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259804764 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25907636 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259238014 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.259134616 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258998718 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.260552755 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259243854 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260263672 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.261239828 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265715487 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.265319343 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.261970503 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.258219758 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259952141 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.259043668 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.260049918 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262103676 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260091169 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258953262 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260103732 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261365841 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.261406391 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259276372 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.260689107 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.259339784 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260448119 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262101585 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.26949707 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260793036 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.257728972 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.260748659 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260556499 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.259200152 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.260703609 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.267830715 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285556981 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.27177069 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.270868963 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.265402102 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.261677135 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263249496 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269552021 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.260493962 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.26313414 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.261228524 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.261763323 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261766847 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.26558261 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26119941 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266638741 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283123339 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.259720915 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270386644 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.282172424 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26264445 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.263971581 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.266996602 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.262500969 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.261248243 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.262364822 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.264206297 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270374437 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.282443873 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262082809 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263734252 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.261795867 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264826156 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267773183 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26325808 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263818272 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.259798675 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.265436567 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263628585 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262281913 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.260148219 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.263053506 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263243055 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267019163 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.270044625 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.261919088 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265465204 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.265691778 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.265790734 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2633641 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264350846 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.261895368 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.261213893 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261835052 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265852651 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26534222 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.266576332 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.263295277 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265381042 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.265704534 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266108023 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267249887 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.274883718 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.273114805 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.261022047 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.263676528 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.264554363 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267861764 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263762044 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.265707957 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2670939 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267305767 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.264352454 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266024396 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.265547441 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.269090085 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281597817 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284886772 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265225452 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.267105692 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267729251 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.265718695 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.264114914 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.264605702 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.265909397 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269351349 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274540931 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.26596581 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274614117 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285411961 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269181044 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.270010162 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.269888409 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.274518985 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.268635728 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265125241 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.26722584 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272332302 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.283080832 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266777362 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27827597 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297438115 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.288475312 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267325641 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266260441 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267475399 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26761686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.267290546 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.267991328 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.266810735 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267933035 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.268131172 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27065799 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273035782 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.268736239 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.267580508 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.268218197 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.269136631 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268806901 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.266209883 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.267297767 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.267944438 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26891588 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.267933021 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268093471 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270578087 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281323475 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.295596626 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269382938 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.269600821 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.267176071 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272496594 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273679758 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280041518 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.276276768 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.268354258 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269099282 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.270977537 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269317434 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267098533 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.268729481 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.269231002 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270071211 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.267433061 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28166657 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297257116 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.274982744 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.269735501 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271769017 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.269269807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271283791 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270149973 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269299631 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.270947578 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.273341403 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273791678 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.27001802 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.269496379 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.274926388 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.276367042 seconds)
  done (took 748.913892455 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267086326 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268542167 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266615614 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267925743 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267447047 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267969339 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267795228 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267356217 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.268755358 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267744111 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268712328 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26751817 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266999715 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267050738 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266364966 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268025852 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268355582 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268152811 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268454604 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267348332 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267197428 seconds)
  done (took 27.803811533 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.270950182 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266887568 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268916673 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271025456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268350566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272204059 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.270788194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269807681 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271179782 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269074168 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27145021 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270325187 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.26922628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.269059174 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268952194 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273583805 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272609803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26855483 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.270682243 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269939107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271593244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26985438 seconds)
  done (took 29.128223925 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.273021429 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.274360313 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272580905 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.268533786 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.273402101 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.268655944 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.273506908 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.273213979 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274245471 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.27315457 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.271480241 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.274311286 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.280235889 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.278985649 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.272206369 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.273471062 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.42092374 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274726067 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274409637 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.275603007 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.272023511 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.281953232 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.293577153 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.272855138 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.273443183 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275790009 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.274723471 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.275036485 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275937355 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.276692347 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.278173302 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.275916137 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.274460911 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.277195934 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.273606266 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.275561766 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277990446 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.276500265 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.271083812 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.27487546 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.285763046 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.296694605 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2761888 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28203972 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.297631337 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.274225555 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280742164 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.282311413 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.273432701 seconds)
  done (took 63.882922275 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.275467212 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.276470137 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27253902 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276608168 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.27453878 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27655008 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.276423698 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276301095 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.274908998 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.274057996 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.277653776 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.274016568 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272979912 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.277065614 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.276514397 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273280114 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275019289 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.272159405 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.273253592 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274269131 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.27269625 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.276846907 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.278808477 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.275546511 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278314504 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273432633 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.274821415 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.277101706 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.276872944 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.276120202 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.279147477 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280214399 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.277082865 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.278632113 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275207275 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277815478 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.277814978 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.274627905 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278369281 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.276417853 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.279379906 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278067262 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278085933 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.279055865 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275422904 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.277397899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275146175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.276691096 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277269417 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.278436394 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.280215877 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.276591035 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.279589855 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.27592216 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278730143 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.280020809 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.276597431 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.277105998 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.279956593 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.278979712 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.276510909 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.281253641 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.276563172 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.278986264 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.279502971 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.278107156 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.277610567 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279435856 seconds)
  done (took 88.01181997 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280411797 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.280942823 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279550092 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279061327 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279655512 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28168204 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279454308 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.279741925 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279566362 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280078679 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281515191 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280738542 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.280103374 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280050904 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279676792 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279340184 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281650853 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280666785 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278654162 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280321118 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.280686846 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281516096 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.280884579 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281864027 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282128165 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280542959 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281069042 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282060982 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281953783 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281346097 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283232847 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.281026814 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283140761 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28261049 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284617977 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.283435111 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282701894 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282562141 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.283765002 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.283009035 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282532565 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283582412 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284069291 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.284269281 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283194534 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284573899 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285004902 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.284467772 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282457362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285399656 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283476075 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283798524 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283648154 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284567155 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284380139 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.28372981 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283857744 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284411391 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2843575 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283775169 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284862934 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.285038309 seconds)
  done (took 80.690256568 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285819015 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284767391 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.282092274 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.282499099 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284229356 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281895757 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285702694 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.286112158 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284591431 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.28410835 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286105037 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284283576 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283213161 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284837333 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283861927 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284011419 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284473414 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283496307 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285918375 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284394454 seconds)
  done (took 26.882874062 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.284275637 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28638443 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.284813888 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283327584 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.286453597 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284944433 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.286735804 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286369712 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2846135 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287203442 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287124176 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287091738 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283884521 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285709961 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28878785 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284624964 seconds)
  done (took 21.769374098 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.285477774 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.288386582 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.287011947 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.286712078 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285653919 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.285265099 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287010465 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285598179 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.286722984 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.289001094 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.287220711 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288648652 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.286079643 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.287848582 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.285104292 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.289180989 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.286884563 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.286715576 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.290678478 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.290001637 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.287866631 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.286376398 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.290989796 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.289714526 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.289677743 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.289334669 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.286334557 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286571518 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.286310375 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.289569131 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.286086266 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287186756 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.286224244 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.28727805 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.290302904 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284508268 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.290671964 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.290021204 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.290307653 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.290613054 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288886238 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.286872292 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.290597023 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.291363283 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.288064052 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.291410614 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.288039088 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.288861962 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.288019629 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.28883924 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29015806 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.292513022 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.292948547 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28980617 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.291648954 seconds)
  done (took 72.05968385 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29011434 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291554287 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.288437715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291467353 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292517075 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.287288635 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291387389 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28937578 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289317084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293207014 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289877998 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29465621 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289733912 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292825897 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292505717 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290510488 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29055152 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288548413 seconds)
  done (took 24.434780027 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291474915 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291222795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.291155729 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.28945046 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.289337618 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293840432 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291019585 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291471864 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291288867 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291976151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292060009 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295150091 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292241923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.294070991 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290910905 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292943157 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.294518759 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294022412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.290670795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291172994 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293347644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293256074 seconds)
  done (took 29.629296918 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.293566358 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.292657944 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.291872336 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.310221628 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.312982667 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.317455408 seconds)
  done (took 9.022715423 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302540999 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294589444 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293363961 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296076571 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294516294 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29249984 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29082538 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292674167 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293610722 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292910285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291739315 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294731664 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295245093 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293970281 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295772579 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294100661 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292101729 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290259826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29278673 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295022006 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290932308 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293598505 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293685822 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29144521 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292666693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293864985 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294595096 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293858268 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294711434 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295920309 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295737188 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292290785 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298608732 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29509678 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294848578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295586431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294759293 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294930547 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29720843 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293013502 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297330581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295913452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298132058 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295508393 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298756829 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294978475 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294595347 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296408972 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294619677 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296071621 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296759435 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296572364 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297325594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298298148 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296032385 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298248188 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295079725 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29459983 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296845371 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296723626 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29620404 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297826411 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294243275 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294636292 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298249525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295014478 seconds)
  done (took 86.700404585 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296124367 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294933327 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295644712 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295610958 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295053264 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294620393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296349835 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295275068 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296709201 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295253005 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298488886 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295923731 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296343151 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296979458 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294041699 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297209857 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295420488 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29606725 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295330232 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298730722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297294184 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295732849 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297443196 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297424065 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296586665 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299312775 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296703164 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297330622 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29635294 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297683043 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297192687 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297072958 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296050573 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296843749 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297059298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298701755 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296439296 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297759975 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297108015 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301269278 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297388905 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300204915 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299344531 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297774442 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299189915 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296878604 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296622517 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29939342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299040456 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300059326 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298964201 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299084241 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299172619 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298360749 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299350344 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298993994 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2995601 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29896581 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29967807 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301049675 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299691998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298627743 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302054621 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298210872 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297926469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297166212 seconds)
  done (took 86.851292611 seconds)
done (took 1746.91062984 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.465870909 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415786816 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299960993 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.30450202 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299944873 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.319986859 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304635434 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300673818 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.298976036 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.301114375 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.300733343 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.486394944 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.293598875 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30181397 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300912066 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.395685429 seconds)
  done (took 42.604213711 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.32844845 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.305567749 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421849246 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32444471 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.328302978 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.498685455 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.358966367 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306659457 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.48075398 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.34777974 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.915242308 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.330812709 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.30525149 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.451328901 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.324072013 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496915479 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.555125176 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.918681648 seconds)
  done (took 30.210483646 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.772123053 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.302830456 seconds)
  done (took 9.28709786 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.324041138 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305057463 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305448165 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304206833 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296505134 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.315159908 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303805376 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.3021245 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.153965396 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439078445 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.308422448 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314679944 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.326580303 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.307333906 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303331824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345069 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.459896984 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.302384429 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301654374 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.310958184 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.30470075 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.411277258 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.34814929 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.302637677 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.4349691 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.138031361 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307233909 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.312211542 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.440084245 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.30404424 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.304292294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305809261 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306985693 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.930827485 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.820506726 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.32097934 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329811547 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316208686 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.301360973 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.470801513 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.30749284 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.310474462 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298513419 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.821079751 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.452122706 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.425529775 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.544682068 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.326266968 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.306894401 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372040251 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304793892 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307408667 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.337033326 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.075476672 seconds)
  done (took 110.457196343 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.338655452 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.688814913 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467820089 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320737678 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.937558488 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960283696 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318305849 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.599764905 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329443128 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299199998 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.602100516 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817782807 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323636435 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.317802943 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.462628963 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.303008553 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301438732 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.055781236 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.319586855 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.307570209 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807497115 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301288902 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316363416 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.434549993 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.338155596 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768398792 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.747478568 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.778220026 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323638714 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.3034802 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774654322 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325374183 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.361347573 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30506801 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.569684517 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.670678153 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66891135 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.321863677 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349338299 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305962289 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.336387886 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764115675 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.671878298 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319349654 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304160831 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768045196 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319592551 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.312516814 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.302036202 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503982664 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.169797788 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302389813 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.732634076 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.303434894 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.587109965 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386702016 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391193451 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797897197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319388931 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.407785892 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.36157958 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304337029 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311484764 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30517822 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305098969 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.66372716 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.688683444 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309659056 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66093886 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792394589 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.322394809 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.836988468 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.135451885 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317496819 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.370882886 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.305693765 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.852608965 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810854506 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.347568364 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303852792 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649058904 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323733867 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.591361007 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320565567 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324462206 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821727791 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.313310782 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.324864659 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.305229113 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.305014548 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.924026404 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314415942 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.57876582 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.366651885 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304812472 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.305421003 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.344073559 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30517135 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.305812119 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.309610642 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.844556573 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.328719241 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.44084552 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324296326 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307141534 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306205879 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.305895793 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307526787 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526875824 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.763805033 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.326694275 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305807821 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.306817693 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.331545692 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.454517507 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.306314195 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.624112375 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327535009 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307171663 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.310438418 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.966871529 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.357602976 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308030697 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.309756251 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.208830415 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.513764941 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.326134544 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.327442924 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306368534 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.324903376 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.577246199 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329510096 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.350478385 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.312586997 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022541716 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.365783045 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.349263232 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.836124753 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31147177 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.251430282 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.325692729 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308043437 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612660133 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.57993774 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.616733165 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.3135022 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.327110496 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.009659044 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333161601 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447406095 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329553223 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.4151512 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506536349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.430439985 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309146078 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.898423966 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.309166528 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524947509 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.308739532 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625731578 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807654569 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326921658 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313644907 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.020583542 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.061057633 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.975812594 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.312733612 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.591260599 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.279082491 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.793773777 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.309651059 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.310991772 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.749380397 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313405648 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.313287621 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.309448144 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.309940051 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.467877632 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484508681 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.9252159 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319730077 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774164953 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350044331 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311004925 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335796813 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311056539 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.661172071 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.413651583 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.317348297 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.324216948 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.312911364 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.320247283 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.792859864 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.147794977 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.315554933 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46379256 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955844106 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.328757474 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.31221344 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.916618065 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.595987405 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835374368 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.366391322 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.633881125 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.331353637 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.35214682 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.894736651 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.389541352 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797491392 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330878987 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.314498357 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908847885 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.330945137 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.381473983 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.31192821 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313862102 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854719184 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.33352863 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.314872582 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.594000517 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331700216 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.563648976 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.314272396 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.321203283 seconds)
  done (took 1105.636973534 seconds)
done (took 1299.409129275 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.313516385 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318526488 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299643885 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.317851158 seconds)
  done (took 26.477166141 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.324018344 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.318796376 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.320130749 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318714169 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321879061 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.318199295 seconds)
  done (took 9.151367994 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.340083286 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318617037 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319542325 seconds)
  done (took 19.205887061 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.532931193 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.635259686 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.662877156 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.608180163 seconds)
  done (took 10.670002762 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321145093 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.321108327 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.320139114 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.323802663 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.325085957 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.326671767 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.325695904 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.324237784 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.328823525 seconds)
  done (took 13.145683814 seconds)
done (took 79.880999226 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.925961936 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.858064945 seconds)
    (3/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.828351395 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.37417932 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.74901723 seconds)
    (6/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.591675202 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.595838739 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.351604394 seconds)
    (9/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.319636478 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.377621725 seconds)
    (11/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.101837724 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.360694333 seconds)
    (13/286) benchmarking ("sort", Int8, false)...
    done (took 4.337738914 seconds)
    (14/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.301277616 seconds)
    (15/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.998434692 seconds)
    (16/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.107238036 seconds)
    (17/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.406270147 seconds)
    (18/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.439060905 seconds)
    (19/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.702724795 seconds)
    (20/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.299690289 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.339173471 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.298147954 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.298818243 seconds)
    (24/286) benchmarking ("sort", BigInt, true)...
    done (took 6.33993499 seconds)
    (25/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.895114683 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.316439434 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.29993859 seconds)
    (28/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.423293346 seconds)
    (29/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.204779184 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.985113375 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.980881911 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.322759087 seconds)
    (33/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.163431278 seconds)
    (34/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.382777734 seconds)
    (35/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.305202487 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.824754348 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.280321575 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.450968368 seconds)
    (39/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.299653594 seconds)
    (40/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.541398434 seconds)
    (41/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.755645857 seconds)
    (42/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.327751422 seconds)
    (43/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.63732811 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.333079405 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.32861399 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.052699186 seconds)
    (47/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.704589512 seconds)
    (48/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.301357719 seconds)
    (49/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.301197378 seconds)
    (50/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.32004147 seconds)
    (51/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.326408477 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.738010375 seconds)
    (53/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.311287299 seconds)
    (54/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.792433627 seconds)
    (55/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.210107779 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.435478855 seconds)
    (57/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.321450221 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582399575 seconds)
    (59/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.32236729 seconds)
    (60/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.440739168 seconds)
    (61/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.300985842 seconds)
    (62/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.858517583 seconds)
    (63/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.941400999 seconds)
    (64/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.506220293 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.758537851 seconds)
    (66/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.68136274 seconds)
    (67/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.8159794 seconds)
    (68/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.858843951 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.379578165 seconds)
    (70/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.322890702 seconds)
    (71/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302195944 seconds)
    (72/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.315249385 seconds)
    (73/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.803762519 seconds)
    (74/286) benchmarking ("sort", Float32, true)...
    done (took 6.324886705 seconds)
    (75/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.303741171 seconds)
    (76/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.305083277 seconds)
    (77/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.350249434 seconds)
    (78/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.676134712 seconds)
    (79/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.347109147 seconds)
    (80/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346871131 seconds)
    (81/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.383412546 seconds)
    (82/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.68411838 seconds)
    (83/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.980624072 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.985418357 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.332678829 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 5.573196154 seconds)
    (87/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.321048792 seconds)
    (88/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.301581929 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.318152133 seconds)
    (90/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.319220004 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.301319964 seconds)
    (92/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.348861141 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.319376858 seconds)
    (94/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.993635112 seconds)
    (95/286) benchmarking ("sort", Float64, true)...
    done (took 6.327918825 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.301035331 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.681966239 seconds)
    (98/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.209984074 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.06534331 seconds)
    (100/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.539919684 seconds)
    (101/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.438404033 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.301148601 seconds)
    (103/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.390108066 seconds)
    (104/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.70843913 seconds)
    (105/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.358600666 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.987015096 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.568821253 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.345539434 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.607884572 seconds)
    (110/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.309529655 seconds)
    (111/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.59718396 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.823501517 seconds)
    (113/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.188836747 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.735728522 seconds)
    (115/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.319754286 seconds)
    (116/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.357887763 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.866122295 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.407330697 seconds)
    (119/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.428514423 seconds)
    (120/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.521601294 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.352394008 seconds)
    (122/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.367461914 seconds)
    (123/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.356993965 seconds)
    (124/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.575982577 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.759413969 seconds)
    (126/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.696743028 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.346654712 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.317842469 seconds)
    (129/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.321555301 seconds)
    (130/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.322070844 seconds)
    (131/286) benchmarking ("sort", Bool, false)...
    done (took 1.845749715 seconds)
    (132/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.108310897 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.36671711 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.60501216 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.150957941 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613530026 seconds)
    (137/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.472269057 seconds)
    (138/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.308311999 seconds)
    (139/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.733812889 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.687938204 seconds)
    (141/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.555559163 seconds)
    (142/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.147847385 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.062548967 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.457118122 seconds)
    (145/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.917804409 seconds)
    (146/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.345441192 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.341070583 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.135274599 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.353503429 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.412537628 seconds)
    (151/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.97868481 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.200877579 seconds)
    (153/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.32708901 seconds)
    (154/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.40528318 seconds)
    (155/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.353123118 seconds)
    (156/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.8061535 seconds)
    (157/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.687812611 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.349884554 seconds)
    (159/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.354435778 seconds)
    (160/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.343639645 seconds)
    (161/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.265787759 seconds)
    (162/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.975008222 seconds)
    (163/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.308293435 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.357692596 seconds)
    (165/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.358684917 seconds)
    (166/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.143362385 seconds)
    (167/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.464869877 seconds)
    (168/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374544364 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.237554908 seconds)
    (170/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.24797604 seconds)
    (171/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.122490422 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.232159813 seconds)
    (173/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.814839333 seconds)
    (174/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.114471192 seconds)
    (175/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.315648703 seconds)
    (176/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.347716342 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.462243182 seconds)
    (178/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.454497245 seconds)
    (179/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.35581417 seconds)
    (180/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.325975531 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.344973528 seconds)
    (182/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.330885215 seconds)
    (183/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356614616 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.355809689 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.282919904 seconds)
    (186/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.594350261 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.391796279 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.761580221 seconds)
    (189/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.390724522 seconds)
    (190/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.310693242 seconds)
    (191/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.376205744 seconds)
    (192/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.698020695 seconds)
    (193/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.413416465 seconds)
    (194/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.516759915 seconds)
    (195/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.361038386 seconds)
    (196/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.336899348 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.566406566 seconds)
    (198/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.319413005 seconds)
    (199/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.866353812 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 5.44637193 seconds)
    (201/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.405766908 seconds)
    (202/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.728688272 seconds)
    (203/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.321359715 seconds)
    (204/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.419932405 seconds)
    (205/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.311400511 seconds)
    (206/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.426417892 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.205413085 seconds)
    (208/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.145507943 seconds)
    (209/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.440502854 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.754766976 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.978164896 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.542113767 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.868579047 seconds)
    (214/286) benchmarking ("sort", Int8, true)...
    done (took 6.333911354 seconds)
    (215/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.461602876 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.357588536 seconds)
    (217/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.32399913 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.35580266 seconds)
    (219/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.312048795 seconds)
    (220/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.447064362 seconds)
    (221/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434975015 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.376562097 seconds)
    (223/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.450902834 seconds)
    (224/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.963465113 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.131355904 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.958053888 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.313089211 seconds)
    (228/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.06213174 seconds)
    (229/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.457998179 seconds)
    (230/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.32992259 seconds)
    (231/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.959919216 seconds)
    (232/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.619504734 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.756383147 seconds)
    (234/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.377163982 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.553182637 seconds)
    (236/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.360928848 seconds)
    (237/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.335250948 seconds)
    (238/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.478730136 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.35119532 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.359857151 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.713732733 seconds)
    (242/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.211215247 seconds)
    (243/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.450554914 seconds)
    (244/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.31363344 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.493675249 seconds)
    (246/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.460426587 seconds)
    (247/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.313616471 seconds)
    (248/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.024718922 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.347089099 seconds)
    (250/286) benchmarking ("sort", Float32, false)...
    done (took 5.379285229 seconds)
    (251/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.433856055 seconds)
    (252/286) benchmarking ("sort", Float64, false)...
    done (took 5.686385589 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.298831636 seconds)
    (254/286) benchmarking ("sort", BigInt, false)...
    done (took 6.333433904 seconds)
    (255/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.448918335 seconds)
    (256/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.433576572 seconds)
    (257/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.347630953 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.425529517 seconds)
    (259/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.166754525 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.417614567 seconds)
    (261/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.833515642 seconds)
    (262/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421332614 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.339456182 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.452825926 seconds)
    (265/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.384771756 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.148483939 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.161136545 seconds)
    (268/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.316908753 seconds)
    (269/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.362087905 seconds)
    (270/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.199881048 seconds)
    (271/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.354840334 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.396500681 seconds)
    (273/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.830036092 seconds)
    (274/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.433676128 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.315073169 seconds)
    (276/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.542063444 seconds)
    (277/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438524667 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.417665282 seconds)
    (279/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.353384408 seconds)
    (280/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.296841877 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.850047143 seconds)
    (282/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.344889658 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.361327062 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.14421086 seconds)
    (285/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.595384311 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.401434891 seconds)
  done (took 943.13932417 seconds)
done (took 944.373173401 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.3692857 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364013303 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347989929 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.367385448 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.456577974 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.37436995 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.359133637 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.349948979 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395452933 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.396728155 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.346647577 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.374770192 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.348642163 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.346939821 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.345512562 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364783777 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.447366078 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.348070873 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.364441678 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.358353712 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.364836719 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.347061732 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.396370396 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.374461914 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.352774574 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350362563 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.350452847 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.367690242 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.459929991 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.352945 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351842501 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.358229054 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.44794522 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.347131202 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.343430907 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.366730474 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.360915293 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.357714229 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.351983144 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.379584582 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.875869885 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.365168336 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.350616223 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.35011559 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348590089 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.354316958 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.351501673 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356537805 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363865787 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365262969 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.860046366 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.381634976 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.352086462 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.350374905 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.361119338 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.351847897 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.35496551 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364971738 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.369257196 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367567745 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.433055404 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.356223645 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.353176002 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.367589026 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357177609 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.898639393 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.366051313 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.354007361 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.873646181 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.373825386 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.898221175 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.37687261 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351655707 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.365342344 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.384223752 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.447964845 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.346565093 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.351276113 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.357842997 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.35014734 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.361293321 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36528147 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.358742377 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.351375522 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365094619 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.379196428 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.360763822 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.350484617 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.35911162 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.368688038 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.357481244 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.362890256 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354733699 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346716152 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.360751201 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.354867904 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.352891796 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.352656594 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.356910347 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.36130746 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.873765208 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388910151 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.348877384 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.347451006 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.350701068 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.364666207 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.874665956 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.371373538 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.374449895 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.400356073 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.353556686 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.437644855 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355276917 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37094719 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.362046419 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.354985574 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347989893 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.43852053 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.867374825 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.386368143 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.354673336 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.351082279 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370662427 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.35412745 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.350633998 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.452460187 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.353572896 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367499319 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.475025137 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.365927788 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383589006 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.352816675 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.357402083 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.376571434 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370713417 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.384483283 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.357424838 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370865598 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.369362821 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350007396 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365498235 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.364775442 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.355043582 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361497707 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.348702683 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377719555 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367645279 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368478662 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.374277862 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.474533216 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352139481 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.439530707 seconds)
done (took 229.39651382 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.414592932 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.34340666 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.437801344 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352343443 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.453416982 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454771438 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349818665 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.350587478 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.349659918 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730924168 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.349026056 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.349288811 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.352117618 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349266472 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.435963131 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352956058 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350397236 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694534677 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352865514 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.422401252 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.353657805 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350407061 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.350692609 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.733810908 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.348816765 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.348841422 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.423269898 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352719259 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70007075 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.34628934 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.345826375 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.703335004 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.444094779 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.371374962 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.36417516 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.360386318 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.456044196 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.373710735 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.436539773 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436570778 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.440517359 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.393194657 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.353748605 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.346219052 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.355379467 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354201879 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.350614261 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381902428 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.348264485 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.351551034 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.695778586 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.364875342 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362049618 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353278215 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352606161 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.373718786 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352820752 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355674297 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.444093887 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.356300668 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.418171248 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.73629959 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.735364698 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354940799 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.352328434 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.354691811 seconds)
  done (took 149.74350076 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.421044955 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.427543462 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471371767 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.373515166 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.404920436 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476127108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.373803713 seconds)
  done (took 11.20784576 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.36220609 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357087161 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403908732 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406783994 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.356375428 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.536785149 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357062937 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36706128 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.35463841 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.409158511 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.358980227 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35773071 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.363852526 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.351850848 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405651891 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.366665832 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472097278 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.35927273 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359339497 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.508686082 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357593913 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364405603 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.409733321 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.36968343 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.36104341 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.36325522 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.176173345 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359959073 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356301062 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.35792625 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356929769 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.435615188 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358313465 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.353930971 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356374982 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476486206 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.358982013 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356263003 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.359139959 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.357269759 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35830909 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.360456235 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.361064331 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.355822371 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.359491592 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38241486 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.35960549 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358821848 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.358793809 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.360413455 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414762475 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360376531 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357050316 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.35785687 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.415026331 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366066893 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36102317 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356032782 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359653493 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357373253 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.510668328 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.407742426 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359558763 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408670099 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360907498 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361047011 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360631375 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.360431319 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414604178 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.360512593 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408314831 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.358055889 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.550139461 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.384546329 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362457838 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.364431485 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.363856547 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361300501 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360133221 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367192827 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358391636 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.36308532 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.368146172 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358788156 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357692907 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.530849115 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470091943 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.358622403 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375148547 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.368974765 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.359391289 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416473531 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.361742942 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.35940111 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414122724 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476577044 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.41607211 seconds)
  done (took 156.143226259 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366862413 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37066869 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.362973188 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.378531177 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.362710184 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.363680502 seconds)
  done (took 9.472173219 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364813431 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.365400031 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362991474 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.364025347 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.363166647 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.363563044 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.362004833 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366765937 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.367327329 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.363061806 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.362903354 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364642381 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.3650427 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.364302227 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.364384518 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362787589 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.36396704 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362104372 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362839227 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363510082 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.457946163 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.363823127 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362990994 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366102606 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.370598125 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.364031662 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372812981 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364751106 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.363681223 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36999405 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.385613284 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365262418 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.364869861 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.372397561 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.369130365 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.366292031 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36993524 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.366924569 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363030655 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.367290339 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.365919105 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365042028 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364366006 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.366363963 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36851826 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.371530566 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.372618654 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372849734 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.36749837 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.367294634 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.367520721 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.36649961 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.367804101 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.370216316 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.369086096 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3918375 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.373135315 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.367792843 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.36822061 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.368721469 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368877351 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.368955471 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370978765 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372657265 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.375116768 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.371027719 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.369858711 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373324263 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367929264 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367650439 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.369179576 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365938126 seconds)
  done (took 100.831838574 seconds)
done (took 428.656691164 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.860241632 seconds)
  done (took 8.132346975 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.495311709 seconds)
  done (took 7.769036544 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.136343297 seconds)
  done (took 23.415990795 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.376655176 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.480878977 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.370944951 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.367469464 seconds)
  done (took 26.868700336 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.846810101 seconds)
  done (took 8.119956624 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.366782652 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.361002773 seconds)
  done (took 14.002638388 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.461043027 seconds)
  done (took 7.733173533 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.374889887 seconds)
  done (took 7.653591341 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.388137834 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.389836998 seconds)
  done (took 14.065415303 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.362147085 seconds)
  done (took 7.636629074 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.813727772 seconds)
  done (took 12.090411983 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.364958809 seconds)
  done (took 7.640676011 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.38242802 seconds)
  done (took 7.65434896 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.881749634 seconds)
  done (took 10.15542686 seconds)
done (took 164.213485434 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.363151296 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.372070769 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.370573579 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.371228866 seconds)
  done (took 26.751217896 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.404034629 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.404467151 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.405041456 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.414797809 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.407383308 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403027 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.395086914 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.396204935 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.414239373 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.407145541 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.40556643 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.406623603 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403682952 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.396097121 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405505127 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.406842744 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.412650306 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.404871023 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.395200318 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.408002684 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.371446513 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.416008136 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406702886 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.37051523 seconds)
  done (took 34.937740347 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.902762612 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449702737 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526431868 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.424792304 seconds)
  done (took 7.579184183 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42208788 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.423759088 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.437525747 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.476153728 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.501504692 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.434822992 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.399156941 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.392917658 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.378951443 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424714311 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504238574 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441882343 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.508196226 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372183817 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.557926164 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372077474 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.373913686 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.425436559 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.477093321 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.501376373 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.373019659 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.424127607 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.429268844 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.441453459 seconds)
  done (took 35.770118576 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.372689817 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.389593183 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.372110095 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.370619251 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.380561512 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.373130149 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.372434642 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.373581774 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.373647079 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.379190104 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.372171344 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.385188152 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.371934977 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374355428 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.379522212 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.374829932 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.382051744 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.373745811 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.372578986 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.379686836 seconds)
  done (took 28.800528573 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.366421812 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.268506495 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.718488945 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.624030505 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.368951561 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.374628065 seconds)
  done (took 28.999499597 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.450543522 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.608842262 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.375684817 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.761007383 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.853697842 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.392279921 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.375052416 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.632229306 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.980449893 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.977381982 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.43597849 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.446684481 seconds)
  done (took 20.569787468 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.373876082 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.368952165 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.378076321 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.3854271 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434563449 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.39844736 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.381535086 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.369579752 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.44074961 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.455903266 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.397806445 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.436698707 seconds)
  done (took 38.103677433 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457349916 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419357758 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.418811691 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396469647 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.094006884 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581986696 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42427862 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097541954 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.395476114 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643299169 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386375372 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460247333 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628790332 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375607819 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378105683 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.457336865 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625248968 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893137934 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379650154 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.722113115 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403240246 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380033031 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.757224608 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62191929 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604477792 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354308195 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.632260924 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.14725366 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681229417 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38611599 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382382394 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372831904 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646482545 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048130393 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488784358 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598014046 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396115366 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.940034877 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.358175686 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.707346005 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387878476 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375342108 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385452127 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374034979 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308662882 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388138987 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115748804 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.40075687 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.085681179 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374985407 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657397411 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471125846 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.378468662 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.951243365 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39990309 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406431008 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.380547379 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471037951 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964940546 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.202881476 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389311321 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.317501474 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374242442 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.651878255 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049940016 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.399553514 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.379400042 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378961028 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309381869 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.694333506 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398575682 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513846057 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399683122 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036871453 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168992678 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.408532827 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307283512 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946386642 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383161979 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.317271285 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605549883 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152995229 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316014723 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.332709209 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310002657 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142469169 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391471064 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.844939438 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405830765 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127287889 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625409891 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411700063 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400499277 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602296853 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.25454706 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3766171 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.379256858 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493472366 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399617161 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11216616 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332885522 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.381323331 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635857874 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.590075843 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382364865 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.430649237 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918841471 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418281803 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.39252828 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385710699 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6164967 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.022354491 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413827121 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058163462 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399650137 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.154676185 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175031852 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388559544 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.390268617 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394260587 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639621003 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.225850661 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271159321 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449437924 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384908031 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380589922 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.692773977 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230401534 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.26193254 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.592912813 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39900402 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.390972233 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.38062008 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340355859 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.38484014 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379766211 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.158161906 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606343773 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379894575 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655867202 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31381447 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518913732 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396578402 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60484366 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.648263992 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.405252694 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644633754 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382873376 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383700062 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400345121 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400540337 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480771005 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403912585 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.381454873 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639593912 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.384970802 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.385387358 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.704888194 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160363399 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390138315 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.386827952 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381451047 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025001798 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370188974 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384608702 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274397943 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.394485245 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449283528 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387300169 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611412517 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.382833213 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421948637 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.386665796 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.377966489 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624782874 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390808219 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.762712332 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470827288 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.883795714 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025611006 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414421203 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.317600424 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.094764 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.075357736 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383555267 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.571792839 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382166315 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611727961 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418589362 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388078015 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012246602 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403244222 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.670277687 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.394726164 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396297277 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.388567715 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383799776 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.335381182 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.249483019 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402677942 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.393911965 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528426865 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.396610523 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318709719 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.900421487 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390679917 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384692925 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.15891953 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419090536 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.614582229 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220111881 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66655134 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385447977 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668000995 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.803139489 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.426563709 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397256484 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386177987 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403987879 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.40189394 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392943694 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.396715722 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.676105679 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.841171743 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952579728 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16926147 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984242107 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.763377047 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.414914293 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.276319954 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126608797 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342204928 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045008381 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594073285 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142306081 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362619154 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892906166 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.681405976 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229341565 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671041069 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615561778 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.742346808 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.416031365 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681868641 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600780435 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422230752 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401085966 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316813763 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.667251264 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974969205 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423131435 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468998076 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127575284 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424522585 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.166859285 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.396024761 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.184385274 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836876708 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.962136915 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.782799028 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397993453 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390069317 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223987135 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41233978 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916001363 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049549889 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422660244 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.891698391 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348967378 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619827228 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.418629226 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.384874274 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.840231237 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.389594891 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.645632128 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673719332 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32482845 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388898855 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959879754 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.262728539 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.394553937 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389265194 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205325527 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397862966 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699986289 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.397045838 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.323332824 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409372477 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322892267 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324074106 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.083418351 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399150622 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359324473 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916265034 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.397633898 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414586305 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407564181 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244431009 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648653656 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.402001565 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016282549 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634333435 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389290028 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414740875 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.394371378 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404295875 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.371228026 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.272210139 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625952194 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462804215 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635843073 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.408703116 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.340099811 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390727743 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625085559 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.318134719 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389832244 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655034028 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.12079377 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.397611565 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623569104 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434042236 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404832002 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408942713 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390488311 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412871074 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481688551 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622343099 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.422994127 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402382417 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841176673 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4233937 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393698498 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.403592891 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484421595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.089384306 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.321691469 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.163419233 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018587168 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190294288 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041193256 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698237662 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393100154 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391503374 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324937225 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540012749 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920888148 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664842471 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510660805 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.399734999 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415488615 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393382754 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409526087 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603778368 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667300791 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267019609 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396854534 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.054965322 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.552761137 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404410771 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.604828517 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917702317 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989965987 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685827733 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391091777 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136270377 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687836591 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.484704235 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394203173 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986118086 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.413218766 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.165847036 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.398937379 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39468758 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541425349 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678128302 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081342977 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.424687688 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.552064566 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.166175824 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.708528457 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651013106 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.9068267 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629450403 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0408893 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161044118 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657706514 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463290661 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624365995 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.527518257 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542478201 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.396293361 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277023312 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394579162 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241994187 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.104337593 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.405079435 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030112783 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677342736 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.397873496 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.399525948 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417968692 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.405168239 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618760135 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167293093 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628170828 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40592859 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40532799 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.37942086 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026997187 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702385844 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330685613 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398211683 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655656026 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652864793 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421288063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.847216541 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.10752145 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978469196 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.372099481 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416950747 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395628231 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150414264 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028977333 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.357300085 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927858976 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057903918 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407692498 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669779968 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.402259893 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40547823 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673774485 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.401692889 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414071673 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630148936 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.043768666 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244591552 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.399054092 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.821966766 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.343463752 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.626069296 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403928291 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332708615 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398565511 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.845626313 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421627 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518725381 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409229857 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.407023409 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411029426 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.130570052 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690957412 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.40532261 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.396915479 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.38887129 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413760518 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495469148 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992139088 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423769729 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.072653906 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.752453804 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657316082 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401025156 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.378719356 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.402922511 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399666501 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122948558 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375862683 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409882805 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994434191 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.405496072 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.409894606 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402960059 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.61647192 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612192946 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417004826 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649222667 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431301255 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414333671 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.300347084 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17485738 seconds)
  done (took 1673.783739662 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402547835 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.455741749 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.422125532 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.416909194 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.434460484 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41545366 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.455159707 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431301593 seconds)
  done (took 52.742485062 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.402789544 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.557678284 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.434253504 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.409433876 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.417100631 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.405966635 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.890851893 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.42629108 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.411161394 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.410238866 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.402052518 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.408260387 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.105530314 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.411384099 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.401978785 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.385897466 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.409576739 seconds)
  done (took 66.60622457 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.889336766 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.772706091 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.723709702 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.464079525 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.441793682 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.433868274 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.77478437 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.426649453 seconds)
  done (took 55.237726416 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.420312059 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.420881507 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420317682 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.420352568 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42059273 seconds)
  done (took 8.413727586 seconds)
done (took 2079.572075734 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.407250803 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.408563081 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.406400541 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.409726105 seconds)
  done (took 6.941982869 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.382715795 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.088092906 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.384384063 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.405812449 seconds)
  done (took 18.573079972 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.404520274 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.429554911 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.166649317 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.086394048 seconds)
  done (took 5.565905028 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.159023502 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170235868 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.153265566 seconds)
  done (took 7.797836904 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.407200365 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.413483555 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.414597983 seconds)
  done (took 20.550385934 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.706541347 seconds)
  done (took 3.024582548 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.555597633 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.603959734 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.775782846 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.782143103 seconds)
  done (took 8.032488721 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.789170226 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.778736872 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.600457995 seconds)
  done (took 6.483597045 seconds)
done (took 91.114664614 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.502186776 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.434109177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.61149302 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.51334417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.63671394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.611921043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.70000413 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.481620428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.980907265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.969101515 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.474241181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.635990757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.653645651 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.435189809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.655532422 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.814066287 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.637175518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.554721607 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.160657888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.356494606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.703562206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.113449205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.299727588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.134526456 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.639426245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.565690008 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.709267135 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.817034099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3390024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.727900095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.565036219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.412877502 seconds)
  done (took 197.163226209 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.408265213 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410844911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.438377255 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.413517788 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.40972893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.411025507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.411186008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.429257153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.409957248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.4122371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.410003812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.427310678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411099467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434467995 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410425489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.429212928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.429074118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427373046 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411038675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.408298323 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.428175149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.439815086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421940925 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410501002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415738472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410830853 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.428813336 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.413061145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.41540948 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.424314383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.411134197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428935995 seconds)
  done (took 206.719873662 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.423902193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410838557 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.411547615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429759495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.430535338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.413232324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.43190508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.433684331 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.413205758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.412360805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.437593374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.412261432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.431949915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.435101741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.413217371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.434871516 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.427007173 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.41668509 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.42167528 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.413464386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.434558012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430229596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427274007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.418469126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.419541889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.414382429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.429755658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.433702905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411810555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.413234296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414749467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430893207 seconds)
  done (took 206.853383009 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.617105339 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.420780171 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.422291507 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.37652265 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.421445501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421350815 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418020146 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.612410879 seconds)
  done (took 15.032033825 seconds)
done (took 627.085656431 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.79610089 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.52630797 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.623536694 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.440707686 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.23712342 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.461230109 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.441412923 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.622420931 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.376191089 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.633878125 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.754724977 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.458081727 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.899676078 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439296251 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.710912395 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545973009 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.328780904 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.451928862 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.780298493 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.007443342 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.714189222 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.970501179 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.649533286 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.394290951 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.927235091 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.969872617 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.203712612 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.317437865 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.459700785 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.786937834 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.162596589 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.46237332 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509745223 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.507545067 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.566777914 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.544840253 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.436387021 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.506313722 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.649937731 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.73582233 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.01143331 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.190204141 seconds)
  done (took 96.537975405 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.406656473 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.406304735 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.405262476 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.407506877 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.407894954 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.406334658 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.406258789 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.406871357 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.40756767 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.404992651 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.408603093 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.408710754 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.40554786 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.407530537 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.406947539 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.406933 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.408208229 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.40930989 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.405790421 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.407427009 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.407551989 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.407324715 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.407617187 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.406942864 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.406400717 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.406925983 seconds)
  done (took 37.90915818 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.42543871 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.682917313 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.857991819 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.434959931 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.425983862 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.430008697 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511426838 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.427072118 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.429018503 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.430576707 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.60378989 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.426414542 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464223155 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.885880339 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.431377165 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.425959531 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.427069305 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.426746679 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.693058923 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435468266 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.534916533 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.428068608 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.511301818 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.437469743 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.452319184 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42779145 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.433174572 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.001994188 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449145265 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.604164521 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.391829217 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.510388347 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.941623106 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.894714082 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.398864334 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.429484476 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.428751766 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.608422944 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.431499008 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.430291245 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.514520955 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.430107608 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.878990953 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.118848961 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.462768725 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.429182993 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.027285174 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.629913066 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.697055778 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437435396 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.902598381 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.444580824 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.431471261 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.433106575 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.698115344 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.436436196 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.43031547 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.01433326 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.456232782 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.514933358 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.433064817 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.4346099 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.702069886 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.43260642 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.68878453 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433464812 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.440375298 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.453816636 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.878222703 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.441958114 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.124714665 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.450345819 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.431030198 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.606056815 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.689195171 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.060241625 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.455146346 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.704423319 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958218224 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.533086908 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436584239 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.993863549 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.536857937 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437387252 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.433975281 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.4345537 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.432306585 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484129707 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.514975064 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.062752327 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.136521638 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.040865253 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.537740353 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446729774 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43493919 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.01610942 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.455929896 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.432685552 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.86498198 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.126438288 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454404634 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.442635925 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.128962906 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.455179827 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.520035517 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.439840752 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.883620107 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.437989616 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.483750467 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.43516306 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.44125321 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.457485527 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.520173908 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.438873714 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.436178888 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.097721423 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.635716412 seconds)
  done (took 189.060872919 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.431758689 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.429033966 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.429683416 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.446046222 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.428555156 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436537972 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.429254598 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.429960443 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.435510268 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.428789029 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.429646881 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.431937615 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.430548962 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.433258649 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.441478849 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.43545161 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.040787324 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.42740252 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.427967212 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.429508464 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.25317242 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.439241235 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.437371929 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.427983049 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.429819782 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.430121804 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.456824974 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.431191733 seconds)
  done (took 154.895106643 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.437233513 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.045174117 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.455195821 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.578439935 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.46076425 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.434163186 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.57716807 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.49841957 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.455790708 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.433011182 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.434674222 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.762285253 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.438074402 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.994638566 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.64642815 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.597207663 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.993668484 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454313617 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436470032 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.435150134 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.582075034 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.441787698 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.764110471 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.068737491 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.465491726 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.048965169 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.422665958 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.43700854 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.437064492 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083429484 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.463734598 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.769819615 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.522254891 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.50224739 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.101003392 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.023839793 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014803768 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.599734132 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.439997575 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.436245061 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.436700109 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.422217182 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.083253442 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.469183741 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.441072386 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.041733443 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.459877862 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.440069327 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.44532958 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.437192263 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.503728226 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.52280905 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.788809594 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.058387116 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.541246624 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.45064711 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.586991787 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.831404179 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.442496105 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.996779038 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.422010959 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.078087982 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.468582035 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.42321049 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440168924 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.44469808 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.602200043 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.587230638 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005951517 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.458457041 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.997823182 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.62015157 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439150872 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.440762371 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.441482373 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.084311064 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.028241568 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.620483981 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.586151871 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.654878379 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.424873786 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441307828 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.423351122 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.525983191 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.440798244 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.058772046 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.021636492 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.460532168 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.445553565 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443695111 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.443627146 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.635177046 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.112507197 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.554502933 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.991980966 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.791849782 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.773257959 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.445484851 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.505896009 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.459635858 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.776792457 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.444920057 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.503539258 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.889852718 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.784306416 seconds)
  done (took 172.577225206 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700083582 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.718862042 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.53605407 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.593844184 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.06830578 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.044887433 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.730324568 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596325863 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.557997897 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.717168865 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.708143083 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.541571377 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.669824809 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522889847 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191072798 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.537074828 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.557449851 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.59690814 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.60730588 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.491132106 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.135736837 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.745414473 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.643266415 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.394374928 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.53842689 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.239110369 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.038392167 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.984727657 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.624642364 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.848135268 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.986970672 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.604408646 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.45006424 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.165073086 seconds)
  done (took 69.430087129 seconds)
done (took 721.732680713 seconds)
SAVING RESULT...
DONE!
