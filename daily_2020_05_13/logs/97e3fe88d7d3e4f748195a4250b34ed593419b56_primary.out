cset: moving following pidspec: 5375
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.276032886 seconds)
loading group "string"... done (took 0.630986725 seconds)
loading group "linalg"... done (took 8.009205985 seconds)
loading group "parallel"... done (took 0.165050657 seconds)
loading group "find"... done (took 1.286888399 seconds)
loading group "tuple"... done (took 1.946801058 seconds)
loading group "dates"... done (took 1.325502971 seconds)
loading group "micro"... done (took 0.200308318 seconds)
loading group "io"... done (took 0.93209895 seconds)
loading group "scalar"... done (took 39.239585254 seconds)
loading group "sparse"... done (took 12.20544366 seconds)
loading group "broadcast"... done (took 0.958311962 seconds)
loading group "union"... done (took 13.74136016 seconds)
loading group "simd"... done (took 4.782252891 seconds)
loading group "random"... done (took 9.237937545 seconds)
loading group "problem"... done (took 1.697087058 seconds)
loading group "array"... done (took 21.450518997 seconds)
loading group "misc"... done (took 1.610781132 seconds)
loading group "sort"... done (took 3.350830539 seconds)
loading group "collection"... done (took 18.056516636 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540055767 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123618963 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137159784 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119755339 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149579058 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116597192 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124251676 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08412845 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834707472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147008213 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113622581 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415387316 seconds)
done (took 5.27897837 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17435048 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087149763 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079559534 seconds)
  done (took 1.211263567 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066291708 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127255119 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067074032 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067310059 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069835892 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067258196 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067178071 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067472046 seconds)
  done (took 1.577496122 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073164591 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068515102 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066456192 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067902797 seconds)
  done (took 1.320839431 seconds)
done (took 5.402343606 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.791239171 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209650545 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187973464 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.40691237 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134966519 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177086232 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640089434 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314631871 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192211577 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094308065 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112128303 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388296756 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124053522 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653209511 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08071912 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095327984 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143161881 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.446667651 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071199992 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085157779 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093162871 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131135399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.07972201 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076949416 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152987554 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070492588 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.142982792 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083679637 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069005398 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.255380997 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175536645 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659011404 seconds)
  done (took 10.422194107 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101252806 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099259169 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069004696 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12530427 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098042844 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070343982 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075789094 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068027638 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089870343 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129128568 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091353413 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108677642 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066445224 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069764098 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083428291 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19778321 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080644457 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081352648 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071411419 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078613566 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107619958 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078481029 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079765372 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083941655 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129505883 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169814363 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097089269 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09921291 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067065614 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081283307 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115869571 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129276498 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066519718 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067480175 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125239825 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095002009 seconds)
  done (took 4.53338672 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.003755692 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150312091 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089826094 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135016879 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065106676 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110790928 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066015124 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083091446 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237355616 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.381993177 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.623453953 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.147789995 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117489946 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104683174 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071319253 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069538566 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070899835 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.267535391 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09852584 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108361963 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097928075 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083180475 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071122295 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069567554 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072437331 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064378734 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069059934 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087169527 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06473661 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075688856 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.329791667 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12454236 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068355138 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.943942545 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064823192 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164082042 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067495078 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105600405 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166290567 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093446725 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139477576 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067263214 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06370967 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.297679929 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065265513 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07203603 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06711929 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085216609 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10888417 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119222499 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065793079 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065894218 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168837412 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064973773 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081592817 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064678926 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.199965085 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152908826 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0669125 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298388764 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092611931 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071999719 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065624827 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.205801188 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11962025 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068539868 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067882982 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069214585 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068438235 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363974049 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066016336 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.203945565 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068475022 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076546602 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070371517 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071796546 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064692334 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078990583 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07950953 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090975581 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067040959 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073774204 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066726494 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066129664 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067186724 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093650227 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.388415142 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067326767 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072266723 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064901533 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094752561 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09883118 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067417844 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06574037 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101704655 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069895381 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065710016 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067704856 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116975594 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069725865 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11233462 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0675178 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.07871864 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095850689 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068319716 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100454282 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076303476 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068991281 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.444195536 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064292569 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07114451 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064877095 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066373634 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065402589 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.076390287 seconds)
  done (took 21.856254244 seconds)
done (took 38.859591432 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24361177 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083066819 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08345123 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083589344 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083416939 seconds)
  done (took 1.718689653 seconds)
done (took 2.867339843 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125634289 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098600692 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064738032 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097706362 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064539402 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103648338 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102712561 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083046337 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099842816 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064712163 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097627543 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065029665 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064862049 seconds)
  done (took 2.269284491 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082254208 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08288394 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069082657 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081663907 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062765274 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081538613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080886778 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088265124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080940358 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072531736 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062939343 seconds)
  done (took 1.956934281 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081018831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08271537 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068819369 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081084108 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062428867 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080803443 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080567944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084098732 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081164324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073472196 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062731962 seconds)
  done (took 1.947467847 seconds)
done (took 7.281769007 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075679012 seconds)
  done (took 1.174568383 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.532734011 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.625653296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078536471 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100217937 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191766745 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108423345 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.233384574 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08194963 seconds)
  done (took 8.2235164 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094413163 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082132718 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069889007 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070720389 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069541087 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068848612 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070638281 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068976415 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069788969 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070722793 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069658823 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069607834 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070482685 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070335583 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069267023 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069301748 seconds)
  done (took 2.338722614 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09718844 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095413977 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07319619 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074898162 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072659246 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072596834 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074502285 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074130968 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071547506 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072996908 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075871595 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073409641 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073209502 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064110157 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074634035 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076401038 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071106916 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074065191 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075825736 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076090474 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074979733 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064367832 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073653603 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074370225 seconds)
  done (took 3.009585914 seconds)
done (took 15.854640119 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105166095 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067510425 seconds)
  done (took 1.278850272 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078260271 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079548159 seconds)
  done (took 1.273888346 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077129953 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062524504 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083560253 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074013374 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063505697 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063786811 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082367954 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063296932 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063181989 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063392824 seconds)
  done (took 1.812788395 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064891 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071980232 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069297039 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078352053 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.069891521 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064191751 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068565122 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064738476 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073241642 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063674194 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068426578 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082798668 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067677871 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08441598 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068340182 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068098116 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069919381 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066799939 seconds)
  done (took 2.38388765 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062442277 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064210077 seconds)
  done (took 1.248372283 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066270938 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063187615 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06671834 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066203452 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063226087 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062967753 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063279217 seconds)
  done (took 1.56864552 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399396067 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123388118 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331591272 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070648743 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08085139 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25665794 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065424229 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069531121 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069718521 seconds)
  done (took 2.628724886 seconds)
done (took 13.317749326 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080975168 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086074207 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096785476 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41370578 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092085988 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067839325 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113498598 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178888054 seconds)
done (took 2.26327612 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.223594026 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.805174713 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.480309566 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205177632 seconds)
  done (took 2.617183163 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343405284 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081041998 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077480443 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.181235931 seconds)
  done (took 1.819531036 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067611222 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070611613 seconds)
  done (took 1.269927155 seconds)
done (took 7.061748212 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065008995 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064333756 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064587043 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064627096 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064692407 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064586851 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089463543 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064692149 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064778708 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064615377 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.064580302 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064957856 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064720399 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065339535 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065193623 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064982189 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06537948 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065480057 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064807979 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065757576 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06445411 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064714657 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0651094 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064801615 seconds)
  done (took 2.746620052 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08140965 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067051993 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068614061 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068937303 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069306652 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068509998 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068492029 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06719002 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068791748 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066750829 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069038792 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069146801 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066688768 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068728244 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066500939 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068729218 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068660973 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067096301 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066976194 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069276761 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068718061 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067041411 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068867843 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06852676 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069018502 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069004239 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066895647 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067143551 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068365947 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068986012 seconds)
  done (took 3.199470859 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067893741 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061008425 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061619481 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070366498 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061108767 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061844361 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061058702 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061483251 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062616328 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061657356 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062257606 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06090043 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060978006 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061992922 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061813146 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066064212 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078928457 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061609587 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061278392 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061856712 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06566095 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061478638 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0613401 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061355715 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063798908 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060664624 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061646698 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061057875 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061862181 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06126088 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065153397 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065723238 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061252503 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069658926 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065644302 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.060899966 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065958537 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061165686 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061867859 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060810721 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061253719 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061024951 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061005081 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070653671 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061143567 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062273086 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061410292 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062216158 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061588117 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.062885465 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06121801 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061002605 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.062983878 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062158065 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066547934 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06092449 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061834041 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060846247 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062057144 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061602161 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06123775 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061399201 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064325661 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061909885 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078619482 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070208918 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06124538 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062692657 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061929584 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064655196 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062861757 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077059123 seconds)
  done (took 5.705446982 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084889932 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087201784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06655323 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066241982 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062369722 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061797916 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069835894 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062140782 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066658858 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080945179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062079162 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066450441 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066707895 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066034372 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06203002 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066824616 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070057496 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062297483 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062012151 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066050936 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062407613 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069522728 seconds)
  done (took 2.646991929 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14590933 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067422775 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105147297 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072623457 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070372301 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072310529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067889783 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068267208 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067766629 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068438897 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068381769 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067759445 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070421993 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068693002 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068329321 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067899242 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06768705 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06801304 seconds)
  done (took 2.499699303 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077867491 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067087518 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086788949 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067106255 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067300176 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066705266 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071132451 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071982062 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06673293 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068004864 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072152311 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067259283 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067146789 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067761942 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066991238 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067274274 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066871954 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067246624 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071900733 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071126351 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070937858 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081567032 seconds)
  done (took 2.697400177 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078836439 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066243814 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082860076 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068539908 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061965134 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062001395 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067830038 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06641922 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067936429 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.065999299 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066544828 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061785681 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069089773 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066400997 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069070277 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066691774 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066235041 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067158591 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066348184 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061822898 seconds)
  done (took 2.500044727 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083159587 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064968313 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065091145 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071186638 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065182945 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064911094 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071196385 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065119331 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065286895 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086125649 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065004818 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06546111 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071041606 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068890701 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065612785 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071499618 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073867857 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071440731 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065377856 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064838484 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085863048 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064987969 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071166601 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065062513 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065027056 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064639338 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064793406 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068889134 seconds)
  done (took 3.087143001 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065074887 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064523957 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064833612 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06476281 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064786416 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064997213 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06527373 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065381572 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064630059 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064846941 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064554969 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064759453 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064528842 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064466496 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064912229 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064598287 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065106168 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065167914 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065249516 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065048675 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064336498 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06488707 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064570575 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064688416 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064467653 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064630727 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064821331 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064839678 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064230379 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065097485 seconds)
  done (took 3.09989929 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075410588 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073402195 seconds)
  done (took 1.302395857 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063805185 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078367889 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060741152 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072204574 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0703798 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065165191 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071210337 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071117414 seconds)
  done (took 1.70379358 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084953237 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075106927 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064718076 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075432105 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075229434 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085424663 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125883871 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063748026 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074069766 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065248338 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082215695 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065987533 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07429056 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0691398 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075026035 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077356654 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061615142 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069146733 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065553989 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062609805 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064930862 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077012964 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073223253 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062342387 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069004589 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091236148 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079473041 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063146147 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070550787 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076103819 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073705488 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061186238 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063516851 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063807001 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061757853 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074843747 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082131888 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070485623 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076715041 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064333283 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071785283 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061507686 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072316608 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074593846 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07910653 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063959566 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063925231 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061457631 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064560555 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069628959 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061950051 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068259417 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061280259 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075465544 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07127706 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078721309 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062254919 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069184126 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070000926 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07075658 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074803193 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069874276 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07285449 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063194448 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078606878 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073175398 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075036553 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06135151 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06078315 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062227444 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077142205 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091567144 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072943664 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063784402 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063998313 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061738604 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07045704 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06421738 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072628358 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074836057 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06336997 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068091837 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075697895 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068320236 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069918919 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069799181 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062329287 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066822355 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06458338 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083167087 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062254173 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061495325 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064376838 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07834448 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07284088 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06325399 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064724965 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075507606 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061033293 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064039077 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064448812 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069860961 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076608625 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067100825 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067192945 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075632178 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071446834 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067748588 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069250814 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059803644 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0631421 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064616276 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07358968 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059787375 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068656283 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066230121 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062168665 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073684776 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060487424 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.061733329 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074333148 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073213047 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060599502 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059642682 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068779705 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062264497 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064094602 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075489428 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06101839 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060892013 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060913516 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070325881 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062256931 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069806771 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065893081 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069097222 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060125819 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.186158579 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.06848997 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076673668 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068155765 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070340516 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074195529 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070187341 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063350467 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075825613 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070819657 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066326616 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073252119 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068455626 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061715625 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065884277 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070791297 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062468772 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070802216 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065910767 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070088445 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064133885 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062629232 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069929962 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064333664 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065965559 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068424033 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062669085 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078430292 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069828292 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061558434 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061071275 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070434837 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064705297 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063217513 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065718597 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07024493 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064057961 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061647246 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062948184 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069564867 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070938544 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066291917 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064402899 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073024689 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081194195 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063387477 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070368736 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063672188 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065243603 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064429599 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077829213 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074485862 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067435879 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07035814 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061194515 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07416481 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07557209 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06643701 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061839984 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066232915 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067456763 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075619875 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067293438 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064141689 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062294776 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069475562 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066314421 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070179305 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063103685 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065769549 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06870794 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062269653 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069304138 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064534669 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07845846 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070995962 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061794212 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066638687 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061979573 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074505109 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062379712 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065086297 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065953747 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064210373 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062700654 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070224016 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060681553 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076202852 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076005457 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068856667 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065797922 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06339311 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075470645 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068984386 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071323833 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070459325 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072889494 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078726682 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066066491 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070351182 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078373265 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063640769 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061044122 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072457247 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065047552 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062796305 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062667356 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062619153 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071055752 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070324831 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073035539 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060396995 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069747042 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061913027 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065014366 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060920042 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070752696 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069415619 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067059654 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074359818 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062908911 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062454617 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069566682 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.061656165 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062722779 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062681622 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068813938 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062320534 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068916628 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064779787 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067558127 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064058598 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060246516 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06760672 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061763904 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067580518 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070664862 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061889984 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067912993 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069103879 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062656235 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068430238 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066407951 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.195568174 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07177881 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07027378 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06941162 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071548455 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062298246 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075920798 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063476715 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076336729 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069147962 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060911343 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06887505 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070320278 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068287818 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064500714 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064632166 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069157193 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063238123 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071034732 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075743756 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064988481 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079360483 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074503949 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069553729 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070633041 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068947204 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06963984 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066340831 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068153444 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063774206 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068957274 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063806531 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071847695 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070601838 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06888325 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069513037 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064516006 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069153213 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06437003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061023179 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066299639 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066629254 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063743105 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076086481 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063724961 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066735759 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062934151 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064031443 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062798571 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06116298 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070401247 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071184919 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064307819 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075062039 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066560604 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070497879 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079488201 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061021267 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062734712 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061859222 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06548847 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07615282 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064416982 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077939255 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068785052 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066120754 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061351416 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064140442 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062539871 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061367434 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062041343 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072144333 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065906371 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062616092 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063669906 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070433158 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064372153 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076231507 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063505908 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068010588 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063996178 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061599395 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066789265 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066166164 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070468132 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064095416 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064993987 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061307416 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063931725 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068455007 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069671967 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063641634 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069223448 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075578921 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063714226 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070414845 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066018511 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061922104 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070184866 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063355672 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063297167 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066064483 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071166333 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070703112 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063973949 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078130845 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063440722 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0719758 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064007681 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06181707 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063153583 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063704174 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063359592 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066138976 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06443528 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076003298 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061336327 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069081205 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068498464 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066513403 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073026677 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063030831 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068509164 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067495264 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064184337 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068751892 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075567625 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065721567 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069207515 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062447135 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067916648 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071401291 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064673687 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073682871 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067532224 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062364683 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067495726 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063895769 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062470307 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061725767 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061563255 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07194252 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062495823 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06486403 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065144954 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.194005503 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069310941 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066773558 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077539942 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071294857 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07155008 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062452413 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062011193 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065027932 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.0654385 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069139556 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071009256 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073545088 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070232307 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067726872 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062881645 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077970062 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073454068 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071381978 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065435436 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07118642 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064296456 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070913123 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068594871 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069163646 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065600517 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071737304 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06940311 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066423269 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073734475 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071871271 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065308481 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069455734 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069525358 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068873735 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06287424 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064129309 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070455754 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072335933 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070211292 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063594407 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079042859 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064817489 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068716005 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066334954 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063975452 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072796712 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061866163 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070275066 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064406767 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06445119 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062386507 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066422732 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06589156 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070849259 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066299271 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062457447 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079181442 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078249514 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07012395 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063274038 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063393896 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062024956 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062119328 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066319774 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06448397 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069652009 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078662879 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066221571 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066252398 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062481771 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063667954 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071395593 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071492425 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061937469 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061979677 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066196242 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069849612 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075192424 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062709879 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063759963 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071003367 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070226109 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06192116 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066079093 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061417045 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071475854 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080300885 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064130335 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069623612 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073502154 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076473788 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064129276 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061930275 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063994458 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069794158 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068995865 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064658908 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064301868 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08286865 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071091382 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066241798 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06288679 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070622535 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066436012 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077310643 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064738504 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.063964137 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0722809 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072740678 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070719164 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074191949 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074770452 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070044331 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069859136 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063410967 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068474036 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062292193 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066093043 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06436601 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063822827 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067455951 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069695764 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067956203 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077747341 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076324507 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064942141 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060396625 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065143563 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065426904 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061025895 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063705402 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061686125 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061480478 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061071769 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061550192 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068667102 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071075931 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067132316 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062838348 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062561151 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060474581 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07195632 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069022149 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068520582 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059895609 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.196045048 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.0656686 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073194741 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067191949 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066258882 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070698405 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069668192 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069990974 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062805127 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075234699 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062952574 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07058111 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06667374 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064068806 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064737192 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071194539 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068300453 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064976062 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071376173 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070585384 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065542658 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061857691 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06155097 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073288478 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06277925 seconds)
  done (took 42.183638013 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099395973 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063767941 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062294857 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062074684 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072120518 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064116609 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062846794 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063745359 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063931651 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066306708 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06288762 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062501398 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069533102 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077196776 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072494599 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066956924 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062812266 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063805913 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063346018 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063962338 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070498112 seconds)
  done (took 2.662937677 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069939383 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077484305 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074484289 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07935716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070977474 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067249491 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074873276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067277441 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075558676 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072246073 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075555833 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067189731 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072359205 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072863827 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07268762 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06735971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075462065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071477312 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067547137 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07548404 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068236001 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075030322 seconds)
  done (took 2.827202871 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063686289 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063193264 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070060006 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061388634 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062865063 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061692008 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066669082 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061806216 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066596521 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066841025 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066602408 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081555792 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070483993 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061447268 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066343839 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061804144 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106563406 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065862101 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063328538 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06453344 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062365482 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070328298 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061943479 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062448048 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065413873 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065698993 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063840956 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061815803 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063346499 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065434601 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063454746 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061750191 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070112495 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069464049 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065835403 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066493611 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06299613 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063715636 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061829113 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061559629 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069084939 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062091378 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066281808 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069916504 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062115003 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061285622 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07014538 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063383506 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061424365 seconds)
  done (took 4.470144409 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073872832 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110539693 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067522137 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090597006 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075971744 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069046731 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067536079 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091738797 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063615077 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064158538 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077206607 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077442634 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065743877 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067297311 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069672251 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065388294 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066170218 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064451667 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068502759 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064969503 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068719629 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069828424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076022181 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076778202 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066410997 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064386132 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065013926 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06681828 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07683793 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069144105 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066810277 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068140522 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076269164 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070270133 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064829854 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064724841 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07723017 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065424687 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065050869 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063151543 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064960356 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067021842 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069506285 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07785794 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065247757 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07064965 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065506163 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063087765 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076527502 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064759737 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069399128 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077577847 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066209408 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065389906 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066837438 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076344225 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065280769 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063973532 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065684019 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076126475 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063086516 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06659795 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076899508 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064655393 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068651773 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077337392 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069931016 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066585628 seconds)
  done (took 6.166399876 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071841261 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093856618 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078735422 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079539642 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072945807 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073361292 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07330294 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073184317 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073613008 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077328991 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073216451 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113810662 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068903859 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074736445 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07313684 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073611651 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073190632 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073333215 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073109511 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073622226 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073072368 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079505182 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073085313 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079709118 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076327755 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068949511 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072753934 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072706866 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079124581 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073006007 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076063982 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073007867 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073120763 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079369404 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075877776 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073207883 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063332425 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073043016 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073158044 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072709139 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068813296 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07919539 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072854757 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068801663 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073039181 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073432308 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079364708 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07620749 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074938711 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076581218 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072974677 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07944871 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073119074 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073063424 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079275382 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081629479 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078858731 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079193001 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073034417 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078882363 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078976889 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082052143 seconds)
  done (took 5.972407451 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077456101 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069686699 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081340756 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061682943 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061633152 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072203487 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061577573 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061986997 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070347039 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072854471 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072035035 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071830714 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074383025 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072357619 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07229272 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074307806 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072078621 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071836577 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070100508 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072104787 seconds)
  done (took 2.694808609 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076224532 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080739273 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068057912 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071318707 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06790027 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071830473 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066469459 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06780989 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068005071 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067288575 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073403153 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072934652 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067850258 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072326425 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07364307 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071820937 seconds)
  done (took 2.405711754 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082894989 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070338469 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076770531 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063388498 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066917573 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062453605 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06286191 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061922974 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062603375 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075924457 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063039893 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074199142 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06334157 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062250145 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063431532 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069033114 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062438357 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063542881 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063254957 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076460296 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070032651 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064613358 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067212438 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063975541 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068728687 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07114997 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065039042 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067310277 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063286276 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063474367 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068915513 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070119944 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062761858 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063781015 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062846787 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063059287 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063201761 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063599457 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.087331385 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063262382 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062329042 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067986203 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063315129 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063962494 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062622012 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063532891 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062529043 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069110253 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063685783 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068821271 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06323489 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065863189 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063649352 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070659239 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066257828 seconds)
  done (took 4.926758817 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078388406 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067353566 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061676339 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061820784 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066403256 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067805345 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067398368 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067606095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06819173 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061994853 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068269332 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066786715 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068009321 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067778432 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068105833 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067910244 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061741608 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067766615 seconds)
  done (took 2.487641789 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072397811 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066831286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071325019 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067036243 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066341451 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066447468 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06178293 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061935426 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062199316 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06683658 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066594619 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065965757 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062097341 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066324182 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066706094 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066753796 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066721749 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062520258 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0671054 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062377136 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066721818 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062328166 seconds)
  done (took 2.718524562 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09526564 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083057372 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138938587 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079085408 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08649718 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07223109 seconds)
  done (took 1.830081588 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092676516 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09740025 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066810744 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066803393 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072348095 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070095938 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070270661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071031261 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075074412 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074922799 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070216638 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074908025 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074854324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076946421 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072930141 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073029586 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070608041 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072996635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067175958 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079653615 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070369733 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074913411 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071017924 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07021857 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070542385 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077570813 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074723832 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075054622 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070217873 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075038301 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072653721 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070817051 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075329871 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075698581 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066966376 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075101509 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070721422 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079840796 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072573282 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076986066 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067006762 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072789413 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074857011 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074437111 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075306386 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070683529 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074118432 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070577334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070413048 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081594779 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072866718 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076278148 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072381418 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074761755 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07442617 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080989925 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075005622 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0765852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072930439 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075185854 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076282485 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072413544 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076005002 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074817187 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072417485 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076335932 seconds)
  done (took 6.166409982 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103249017 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067113219 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070914559 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075441812 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076578945 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070528766 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070570565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070397528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070778287 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068137472 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105092334 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07110067 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07706217 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077088293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070917668 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071160822 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070896853 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076851975 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068047133 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081682991 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070406847 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076526228 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076886043 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077026581 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075300595 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072817261 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070625071 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070352431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070363304 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070998076 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074555599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070364136 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076604049 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067500301 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076508116 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071047766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070657972 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074205239 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070280241 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073171873 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076615196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079520422 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070482667 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070451883 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074980302 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070327953 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070342212 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067943444 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070059889 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06739434 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074896665 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074906963 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075715278 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076352106 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070755334 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070398413 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070957778 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070765003 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070571777 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072545769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078488237 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070202096 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080952033 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070302475 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070197353 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076430025 seconds)
  done (took 6.160461144 seconds)
done (took 125.995766723 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207219865 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18348672 seconds)
  done (took 1.656089279 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073967854 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103813361 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082228653 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133700401 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071455755 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105577363 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104492338 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083419635 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071181259 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071218308 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070919647 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073365601 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136370974 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071642644 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072074392 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074328669 seconds)
  done (took 2.68246723 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105199363 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166175267 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108119063 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068637982 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103475214 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076576461 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069552993 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08184891 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075710123 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070928093 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076930904 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075635321 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070748717 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077732197 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075591745 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076879782 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070754695 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077001081 seconds)
  done (took 2.814978694 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102423188 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09501311 seconds)
  done (took 1.487341344 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.170839995 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133228791 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201154314 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342875588 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.152952203 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.419461595 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138675857 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138529668 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112679313 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135328316 seconds)
  done (took 3.23024957 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102819267 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.167974356 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292177845 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119901314 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076164462 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090170763 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122109907 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082016821 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083514996 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082788337 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083481101 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078631255 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102537149 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076853228 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075475408 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077990584 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105375067 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074736201 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075906682 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07814962 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105687462 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069925922 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076157254 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07475117 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080833726 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080469776 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071509835 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069505588 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077866138 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075782781 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079149046 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087344685 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080570685 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105030841 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073772285 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106247806 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078799403 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076123569 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075541966 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076140663 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079455849 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079750563 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077755151 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077520591 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070670922 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077926368 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070871276 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069739192 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080169873 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070998856 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079812034 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078771961 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105453022 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070847399 seconds)
  done (took 6.072262495 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107573658 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106130477 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071025313 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112902975 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10349847 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070109185 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105156597 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098341304 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106906486 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071243653 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069269722 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071044588 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079386343 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080758798 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114853735 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107783902 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073202469 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070197316 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107772404 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107027314 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06936963 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101610395 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098077139 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106561128 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068826205 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070289063 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069425603 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070921239 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075901334 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077124106 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069320513 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079116971 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083354419 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076916842 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067995236 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068800628 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068813308 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078463671 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07855192 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078067929 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076029246 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067846423 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068825992 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069944955 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069627167 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067996819 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077287899 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077964412 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076595678 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068731605 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070230099 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069257664 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069676255 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077949539 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075789532 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078556857 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078301168 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068785067 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069136049 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071883559 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078800728 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078646525 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077723363 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069681555 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078028406 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068853078 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079043821 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081616596 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069139325 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072443195 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068830514 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068902758 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07031692 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075801585 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076238424 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07062951 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06860261 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068872341 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078479335 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076129548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068358587 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075545703 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068308954 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069145385 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070257396 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070350393 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075915969 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078576695 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070187142 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068754193 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068575461 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069042519 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067984789 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075744007 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077980437 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07744143 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07685525 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069331176 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076719164 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075720401 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069799413 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076720411 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068660635 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069642929 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069265979 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075629201 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074633306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077448967 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068305447 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067926757 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075183043 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077455238 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068249965 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074343154 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076697824 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075119584 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067918875 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07776779 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06829211 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076165739 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0677132 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076452944 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.20209776 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078622408 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070554858 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069436386 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070220949 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078637455 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071060166 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069265038 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070579559 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069878315 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077055542 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081516599 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071262357 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077392825 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07699419 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070419075 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077025718 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069007092 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078250286 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069369003 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070342011 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068594075 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079706171 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069746069 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069779966 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069459388 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078726681 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069490448 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078724446 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076594954 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068512155 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080707156 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078595673 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076099886 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078710842 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070643517 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069558573 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068847905 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069321399 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075957625 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077650566 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070416967 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069444512 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076427487 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078823478 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068537432 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076795442 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076792445 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07715336 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069745632 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069394346 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079385844 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079356408 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07691499 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077261465 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077285585 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069404621 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076616963 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077452664 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069344317 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08347813 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069906782 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081016076 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077545575 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075958927 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077529705 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078871171 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07879533 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079074505 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081330766 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068544073 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069398257 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.0776158 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069281001 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069007978 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076472145 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070753503 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07084805 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081358733 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069838969 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078764601 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068466458 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077756689 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068722352 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070158046 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081638215 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069301185 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070551051 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077119435 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069113008 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076664102 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07886715 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076687823 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069311914 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073166214 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078263337 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077468117 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069031765 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068843366 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07042327 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076713551 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075731528 seconds)
  done (took 18.376449597 seconds)
done (took 37.620230208 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206327195 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154509558 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183054774 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115196335 seconds)
  done (took 2.051070988 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.10735174 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098793407 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088034866 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065846711 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094156644 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066183643 seconds)
  done (took 1.844904334 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286115936 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195150324 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177911861 seconds)
  done (took 1.983771204 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209547716 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190599152 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461253174 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283724401 seconds)
  done (took 2.565990178 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140774038 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082161174 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065053722 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083556224 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123114185 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148803185 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093143287 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118191712 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076987644 seconds)
  done (took 2.310256239 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146148477 seconds)
done (took 12.256217266 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.129759089 seconds)
    (2/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.171128055 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19981737 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097971621 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069759902 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075871098 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.130380587 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200558979 seconds)
    (9/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.109737237 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.233406044 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077246189 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.241866391 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.121271128 seconds)
    (14/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095189801 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.167468108 seconds)
    (16/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075462976 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.421407199 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183195105 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177366359 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.179262698 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075993192 seconds)
    (22/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.138697571 seconds)
    (23/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.164217383 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075300115 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077178852 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.136877978 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.148466172 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076143175 seconds)
    (29/309) benchmarking ("sort", Float32, false)...
    done (took 0.133302601 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176101535 seconds)
    (31/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.12642427 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196697535 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102897119 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156429372 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08525705 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085187582 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194393491 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085630123 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.167901244 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.237279238 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122898291 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079658974 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066198371 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06642909 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.172265011 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.138511483 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074177443 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.192768024 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.200516452 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178528807 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06523169 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091296957 seconds)
    (53/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076393541 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08724992 seconds)
    (55/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171309584 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098775295 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 0.144713153 seconds)
    (58/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079140976 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121550229 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118862287 seconds)
    (61/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.137913916 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070294598 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06660492 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088696053 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 0.067226327 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085842054 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073382222 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13091138 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06569978 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066553438 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066134519 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065358521 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074802284 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065851603 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064719091 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216113477 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074441631 seconds)
    (78/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189361781 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067206834 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091759364 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076489944 seconds)
    (82/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191746599 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070014581 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.220595204 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065436502 seconds)
    (86/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.174436487 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063703955 seconds)
    (88/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085801479 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089507598 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165879269 seconds)
    (91/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.324081022 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.198305662 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068017089 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080230561 seconds)
    (95/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076510433 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.217783021 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.225790544 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067720652 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073360198 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088671109 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205616632 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144593151 seconds)
    (103/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.078738657 seconds)
    (104/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079787895 seconds)
    (105/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.195442036 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 0.132548101 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183168174 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.0759723 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070030084 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067049842 seconds)
    (111/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075118776 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068745795 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0747159 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06766782 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07592352 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075429475 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110491437 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07536645 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088612364 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092636204 seconds)
    (121/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.174873604 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073263472 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067042279 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128823687 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073782607 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07633757 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067557105 seconds)
    (128/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074384167 seconds)
    (129/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067340678 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074413287 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075269924 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074450359 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06754783 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07164198 seconds)
    (135/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068032844 seconds)
    (136/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.214605548 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077447233 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067074353 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.17973042 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075189706 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.157475009 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06726308 seconds)
    (143/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073813527 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067620303 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135848485 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08766298 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13342095 seconds)
    (148/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065557295 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066583973 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181218495 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066850775 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06692497 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.195535032 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067309508 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.16805481 seconds)
    (156/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093817189 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066663297 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075890217 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074211389 seconds)
    (160/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.124467516 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.195088372 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077248018 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140796732 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13263815 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127031424 seconds)
    (166/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070427594 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142332326 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066385649 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078081821 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067453115 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07475543 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066488318 seconds)
    (173/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067157507 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087815019 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072814483 seconds)
    (176/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.12438092 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136036978 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065928609 seconds)
    (179/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066709178 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07311488 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070308044 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080643082 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080179031 seconds)
    (184/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074074527 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074180317 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076967728 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065400319 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06774344 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087687619 seconds)
    (190/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06748904 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090029661 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089055448 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119703015 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072625405 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112337258 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089695368 seconds)
    (197/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066130158 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068695571 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065650901 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135913354 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16896402 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177265647 seconds)
    (203/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064179852 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066899939 seconds)
    (205/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0656959 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073344472 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116195735 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103975676 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064888673 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.286256101 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077813078 seconds)
    (212/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071767189 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081055086 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070677983 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09138232 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089802821 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077381163 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075220627 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070367858 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136784246 seconds)
    (221/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066416574 seconds)
    (222/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067174584 seconds)
    (223/309) benchmarking ("sort", Int8, false)...
    done (took 0.145301379 seconds)
    (224/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068830628 seconds)
    (225/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072988472 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074503342 seconds)
    (227/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077245196 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066645943 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06658446 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171558312 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123209703 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069548574 seconds)
    (233/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067254053 seconds)
    (234/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073796 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07690059 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067026842 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091974315 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074929514 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066321842 seconds)
    (240/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078654131 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087503407 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06652189 seconds)
    (243/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065543809 seconds)
    (244/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073854984 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.166346293 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067530053 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065925132 seconds)
    (248/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088094568 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065920537 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07831161 seconds)
    (251/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.217214513 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067606385 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065865909 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076220283 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066431426 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068226488 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073384204 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067725588 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075776519 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.06697891 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074520784 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066935366 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067174164 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068613235 seconds)
    (265/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06756572 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073319983 seconds)
    (267/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066690943 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067709844 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08656581 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073362529 seconds)
    (271/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080139605 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066494939 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070190614 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075149325 seconds)
    (275/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140121137 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068115531 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066469449 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067116698 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066758706 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067508809 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067680446 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07835979 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067553158 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066708099 seconds)
    (285/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066388498 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066523833 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06585278 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079011748 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068774555 seconds)
    (290/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068996191 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067200753 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074923137 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117491795 seconds)
    (294/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119973571 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078464182 seconds)
    (296/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066606354 seconds)
    (297/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067003305 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073048536 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065735269 seconds)
    (300/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07875767 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087765661 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066865584 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066816949 seconds)
    (304/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.0664141 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065667226 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090194874 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089469945 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065746049 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086437516 seconds)
  done (took 32.947134045 seconds)
done (took 34.284214091 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084842227 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098124973 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073222699 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092537518 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080561624 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09491226 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073872794 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078870557 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081559508 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079935486 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079401508 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072554734 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07515097 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075065411 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073395004 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096942502 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080336695 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07444508 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074249241 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066170162 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074966514 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066461322 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066225386 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072654489 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077493737 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073723183 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075800897 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075222013 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066715025 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067056956 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071467443 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075707529 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066216409 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078721973 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075942426 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07520684 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075631867 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078656912 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065781492 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066589421 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076066974 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066345736 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074525554 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073026345 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071517561 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072955467 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074695622 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07850495 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096729121 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070611135 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077012518 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077036799 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077844713 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072175002 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071480297 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074258058 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072524185 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097129932 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07486616 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070872587 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076137321 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075479918 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072352837 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074313385 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074803862 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.0769539 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078672488 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07249766 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076489004 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073392207 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066352898 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074183444 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070668744 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066778047 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077158086 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07916654 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065807607 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070567979 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074359821 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075161502 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066339365 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07332504 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06576956 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07133138 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070765249 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072575767 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071174963 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07317004 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066244615 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074451984 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07339288 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074465572 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065874165 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079239754 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066325284 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072404904 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066784939 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066832333 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065796593 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071570437 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065855843 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071044685 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075053016 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065234193 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070800999 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079015513 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066249058 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073662409 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065749709 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065636829 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077237314 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076099077 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065660866 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070765624 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065562154 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071205756 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065440067 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065605279 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.0656648 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066070454 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071067009 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065871354 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070061305 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071055471 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078478355 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065560716 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070085986 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0693573 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065914353 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071782323 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065415331 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065351515 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065029477 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078588302 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070160441 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065549244 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070706748 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069899975 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073220477 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065180733 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073803188 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071108831 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069412308 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071206819 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064900177 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075814066 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069067564 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068782796 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064324523 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064520234 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063595617 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064674544 seconds)
done (took 12.502087867 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069969987 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116655765 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092538245 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092926861 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08262638 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067546702 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074210718 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091329987 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068636299 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096216069 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088091552 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087930907 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108861021 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065649765 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066700561 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068517652 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06826034 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078488619 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093984611 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088821165 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105628018 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067035755 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085858907 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086994433 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083762437 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090210759 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06747105 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068018379 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069727393 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087219471 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092254484 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070151221 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067953061 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089989641 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085109073 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079668417 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067410892 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075239035 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067605189 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066895393 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06853308 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087294503 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075203002 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077502919 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068048357 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0745379 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068274235 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082492183 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084803233 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075219417 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081952468 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091109543 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07066472 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082586045 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066531891 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082393004 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075872925 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06714632 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067575126 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.0722051 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067406459 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069690953 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078207225 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076065558 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07199444 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081643665 seconds)
  done (took 6.601772862 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085027063 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09445204 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083288791 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084340232 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066568835 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067264383 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066948997 seconds)
  done (took 1.983448731 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06751359 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089992359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090643648 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09006271 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080861189 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091326582 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07498041 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067276568 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095462903 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066259499 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086627176 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096875304 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070962666 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078966176 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091724949 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067216207 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091185505 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067520204 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067936764 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091285356 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071874709 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094799522 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078539275 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067731904 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079517646 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067849626 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100007614 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075166938 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068471984 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068543687 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068578016 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094219552 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079395179 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080991511 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068438609 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082021514 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080927101 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070607431 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078002604 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076409214 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080455073 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068660196 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06626602 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069191565 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069910765 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078456217 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066590623 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068790835 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068447616 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086966251 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066116634 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079315728 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070747911 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072847873 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072874088 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07221761 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075633721 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069054271 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087343177 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068450371 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084050699 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083771861 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08104427 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083929595 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067275113 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079278107 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081035087 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068419059 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069252071 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068670877 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083557438 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070377351 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068998641 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079295196 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06738428 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091273807 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090840988 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06709651 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080533251 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067906839 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06878722 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07927435 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09086858 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072582975 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06866727 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071344574 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069343717 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070576308 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066322212 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070886408 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068508662 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072667028 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068492205 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070730162 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069973219 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083303664 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066868294 seconds)
  done (took 8.821444089 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069768374 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068469646 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069365972 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068061738 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068022851 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068368291 seconds)
  done (took 1.874739159 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09035398 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068435465 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080394772 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.0683487 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103392004 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083035164 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083967345 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077286643 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081374222 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079638348 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083692725 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086375516 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087854965 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070367663 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083018413 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069290989 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083522987 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072162943 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079613869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071001748 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080650945 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070469474 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071097571 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087167478 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072031067 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069677655 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077132167 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079740766 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079534883 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077661386 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070582796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071890085 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075129442 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076979636 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08374462 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074726099 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068199424 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074567953 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071585429 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071997801 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086082154 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070825676 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07080623 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074523569 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07744438 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077217637 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074644645 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076836471 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083139364 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074505075 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074378867 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06897025 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071943604 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074501305 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075013277 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076970679 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074149989 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083067372 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070274813 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075055984 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068092968 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07154951 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076712779 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071359553 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075660224 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074665634 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074790277 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07037964 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070493414 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068118035 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074589548 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068533631 seconds)
  done (took 6.914923223 seconds)
done (took 27.653860183 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.514932687 seconds)
  done (took 1.928684514 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617341154 seconds)
  done (took 2.065415565 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.893263875 seconds)
  done (took 8.336921883 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.379204279 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.45096809 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.732821084 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133852243 seconds)
  done (took 3.14536861 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.703578256 seconds)
  done (took 2.158168778 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234748536 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224329073 seconds)
  done (took 1.925897592 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346964584 seconds)
  done (took 1.790894747 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.060851332 seconds)
  done (took 2.507301341 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233592499 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159343164 seconds)
  done (took 1.841084446 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.442347627 seconds)
  done (took 1.888002264 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.199472291 seconds)
  done (took 5.648786337 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217716727 seconds)
  done (took 1.701677784 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235951023 seconds)
  done (took 1.681259492 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.734436367 seconds)
  done (took 3.18284244 seconds)
done (took 41.254980696 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082370535 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084997561 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084593967 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081436971 seconds)
  done (took 1.761656758 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074633129 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070888933 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07420165 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070285752 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074592798 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070481923 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072433482 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07333759 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070465428 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071368439 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070787042 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070620833 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073969658 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072259225 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069428682 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073593245 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074298477 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07061549 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073447449 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070981306 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068643094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073693059 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073396668 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070217329 seconds)
  done (took 3.176720119 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078562366 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072848441 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075698967 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072118454 seconds)
  done (took 1.756764496 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077274738 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087460966 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086033188 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077489903 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.087921347 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083251622 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067340548 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06754072 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068415442 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07659206 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065849272 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092693341 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085624675 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076678876 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078707085 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063439494 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065369708 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08477421 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0774181 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077588629 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068307396 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076608341 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.065983761 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086600908 seconds)
  done (took 3.298944552 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081269727 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066693919 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080159982 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091610007 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092813143 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066344729 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079559571 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093627662 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135686436 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065881984 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072455935 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066239184 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109425854 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066513937 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080710686 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109256258 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112642381 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069973113 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098507862 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066343634 seconds)
  done (took 3.167146872 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083562455 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072975921 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071012083 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066147443 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077022745 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073055423 seconds)
  done (took 1.908235521 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068623245 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068097869 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06781042 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067002671 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072422698 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067995747 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066302916 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067847896 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068344489 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068142648 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067333931 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066512268 seconds)
  done (took 2.276135602 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.190379233 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068810234 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068846877 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066120524 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07065815 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066983899 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081666148 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068118674 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093370122 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067133817 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066843585 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068911133 seconds)
  done (took 2.440095295 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190001933 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073813845 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219698244 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143406083 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101518361 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108743059 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11014238 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107299833 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132604002 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096847452 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151692498 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158474345 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103279758 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127922583 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08687515 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118681398 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142772184 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154379815 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098571389 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153159514 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133488663 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121168725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140351288 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096047998 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100636983 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112438592 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07211993 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077058786 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156994564 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122259616 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134272788 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104073231 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089075365 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164272692 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15984865 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130267025 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140116838 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080858682 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117032724 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127637733 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189821679 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086069657 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146722288 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100866621 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076861463 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121979047 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107509061 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.112733162 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098122602 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085378612 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27391654 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171520648 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126970271 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083373075 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115306347 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103928927 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108174981 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112563217 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167060932 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14763358 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121004326 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069173641 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105877835 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141319638 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124950965 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104411282 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117003582 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089753653 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123359569 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147595891 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116992042 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134265013 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111207768 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084461188 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113904741 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129307247 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119203378 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160022705 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11693995 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07077834 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114368462 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094918064 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077558392 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142090274 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073907161 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163161765 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09510803 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120365709 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124411221 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104025937 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104304363 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148343606 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132926589 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09991534 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083578543 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098469359 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113587275 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135149451 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083488156 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10213753 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107466072 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076017575 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124664879 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072288202 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113384241 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091462552 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110903119 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116978999 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075350298 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113167356 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243341372 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099273159 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121015955 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147693982 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085189046 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078474568 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154697794 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115328332 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099120364 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133735449 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147832687 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117209701 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093537125 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136208457 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162345011 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087609743 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150909026 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09815963 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081242672 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.101989312 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116455858 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105698985 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.11808556 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078486674 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11421078 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152335845 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072609743 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093224315 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125590279 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07861791 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077898771 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100248228 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099187917 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092614636 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097289542 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099885579 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128985719 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116227991 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101093144 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116992919 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093311081 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153965923 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084406672 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101353732 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100111246 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070388589 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12487284 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144913907 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075877422 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148819806 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114609175 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109530746 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111814964 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080262422 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12775926 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076105604 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070097091 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130110545 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106432792 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101972323 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.138178199 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255015442 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.117793258 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114570078 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123400555 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121579209 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.121838081 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102394325 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085830366 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109176907 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121857282 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070880416 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08836612 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079552767 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098683895 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089973668 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080775367 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130995884 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114877213 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105667529 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108830824 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093354464 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139701693 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075779308 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116835597 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116113634 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091564905 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144394492 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142193027 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124623074 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096490197 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128203786 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071476234 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072532093 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085681641 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116903318 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081173443 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080825672 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108584718 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140297391 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118672531 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127861639 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117678076 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110846224 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146518455 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070476634 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11661479 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134781239 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114496909 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100339579 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087928099 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093775641 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133691876 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099186652 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166813516 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107889203 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116209207 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145177758 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097295852 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075822819 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098159452 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12133587 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095252119 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.28301133 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095715921 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084119971 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102543147 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075994798 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095063208 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11888331 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110824891 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12999817 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106629703 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123957279 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075482741 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106442177 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116989237 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114465386 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081474752 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110391521 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1546657 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093622043 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110121587 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139753085 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076474241 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134083431 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161250701 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134721126 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082373123 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100122441 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115443854 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119322184 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111819106 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130154599 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099814165 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128886899 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106043637 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.081831603 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083456502 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091756185 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09914115 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10807999 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099708617 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109164551 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09233669 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121703011 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098487444 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105813942 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111873966 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096482435 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092232851 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092461426 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162054026 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112094161 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155692901 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095641223 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13271591 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147521828 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072142304 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075719114 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076923541 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127691232 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080840917 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119352947 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.104754064 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257776206 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116967168 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130316077 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093345163 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069829007 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104997115 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124808828 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116731402 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092860761 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099328062 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14784702 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115139955 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076460672 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107149688 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110258503 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100343568 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161671151 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078999143 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104640824 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074697291 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077160979 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119112845 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140735927 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080526964 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10072472 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113788073 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106383371 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1195649 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094113859 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107054035 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124334148 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137894187 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119263927 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087047473 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105837524 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121099166 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143489025 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09966242 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096710108 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162712914 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141536953 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148151011 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084483849 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111272943 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108856665 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104716756 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129149006 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081466059 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14989064 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078508359 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124759675 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095778514 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085107327 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119083208 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106748435 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084287014 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132644261 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108407433 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079132093 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075500797 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255265062 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113985719 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098718049 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073136301 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12937555 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072400751 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127070695 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158595715 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077700801 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100645424 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091971199 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079253485 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098600809 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096935244 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08318112 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096085796 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157972938 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.0844299 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137007971 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124636338 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104972915 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12814582 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099641974 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639028015 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077572592 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141834851 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11003879 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164615665 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095083876 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112266872 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105582971 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114160805 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132943977 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09805395 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174841257 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122347355 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112389882 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076965461 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097369543 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098630059 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085790468 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102211292 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10868668 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10789133 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091197525 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112121709 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114983013 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080131155 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093081706 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14501623 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110202703 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132040983 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129200154 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08120129 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111269289 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126709808 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077341478 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.110158682 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137495285 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250309403 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097020893 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08148205 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09759297 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161247305 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071408628 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147085116 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114712079 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105716062 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111236692 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104602873 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122633107 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098748634 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114640773 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08989868 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104120715 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143441849 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080785675 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077054865 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101278938 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105541519 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094072727 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093795978 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095687056 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141406632 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070135903 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093997691 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109252125 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134806615 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159110686 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102051639 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081084892 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112630624 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113325086 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109095946 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114963397 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07889977 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078436947 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079147652 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097846728 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119945305 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108802652 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113402744 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104131034 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149678294 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081160816 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220585288 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092387231 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100936761 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086759889 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077851259 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092837075 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092181643 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099102939 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106031004 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162068846 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091979475 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086733555 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08892736 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072350944 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079871891 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116646762 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102930385 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109611585 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098574369 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079142615 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246474419 seconds)
  done (took 56.183799369 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103092744 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082443755 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097359984 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144656394 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120914664 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199783279 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150518114 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188324489 seconds)
  done (took 2.643501608 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067946905 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093480913 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103349463 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082760033 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067194297 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068179934 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222775297 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080877707 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066579186 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090643579 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077019622 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068566194 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.437387253 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069030951 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067679817 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075851172 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067280057 seconds)
  done (took 3.361576113 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378206122 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.607943545 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.344554497 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074888136 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.977920688 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088753443 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.22088579 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13763469 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081437333 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536187916 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366348683 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131871734 seconds)
  done (took 18.515493621 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083024757 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07676683 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091044804 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090929138 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078740196 seconds)
  done (took 2.065273401 seconds)
done (took 104.023641769 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081891441 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431393583 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069428106 seconds)
  done (took 2.094950701 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091779054 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089439415 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089188537 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087433887 seconds)
  done (took 1.935664868 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075628451 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077403696 seconds)
  done (took 1.719247092 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228118749 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176883532 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096850656 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083802211 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081464446 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08130143 seconds)
  done (took 1.820667413 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073337743 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073251438 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07361976 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07380835 seconds)
  done (took 1.863568016 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06932492 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067032743 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069830931 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072320021 seconds)
  done (took 1.848238875 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08489567 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085309286 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079784136 seconds)
  done (took 1.820226163 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10175866 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091820983 seconds)
  done (took 1.763837825 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081769246 seconds)
  done (took 1.654233217 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089293145 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099074146 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131654166 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115187941 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138701099 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115340786 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084987095 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085363778 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079345416 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086268863 seconds)
  done (took 2.595486648 seconds)
done (took 21.262630091 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079106267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37455365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360917455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091576696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669474384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358591434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969375904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09321473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141207565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068834866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085804576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650537749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960999217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3294167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.947644978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325893638 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65151353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069309177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069400098 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06892734 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.953801676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068697872 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069163912 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069541499 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651816447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373479182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070557306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32748705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070045778 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072261066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357927363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070615122 seconds)
  done (took 16.073333785 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071291882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122164417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073566812 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086001386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071696593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070623359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072561993 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06985803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121276673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069176623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086011229 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069141374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072771618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069722738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088977496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069766006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070360542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070632934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070310262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070320112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088743545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069844903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070227318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070968284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070361789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082217645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073373346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070537115 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070868421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072143813 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0730311 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070669203 seconds)
  done (took 4.035545022 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117942079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126038577 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074511595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107081423 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113248295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071467788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147494273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094521499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128198523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06948541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086617658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06954725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103924827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070064506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08994452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070512225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071229684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071014631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070404815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070546948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089261856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070088604 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070166398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071228479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07038601 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083924813 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070650372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070462078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070716591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072696638 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07373505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070854656 seconds)
  done (took 4.294101886 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071493172 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074094636 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080909666 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081750585 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067735521 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070615228 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071703492 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068461604 seconds)
  done (took 2.176179441 seconds)
done (took 28.157115748 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079376607 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068332158 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072203683 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087833764 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075105867 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079970404 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066037795 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075384308 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073341544 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072789461 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07447833 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068293257 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071528318 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066804713 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073537771 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067184403 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082058706 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071395796 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08093199 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081447125 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070722473 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073690728 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076168707 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081757052 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081805148 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081670184 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077637367 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07367529 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068664518 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071310293 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070880156 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079754229 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.08197785 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081675296 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067971072 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068362861 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073023098 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069967487 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082477081 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077366578 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069888367 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077475766 seconds)
  done (took 4.709002432 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085197631 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089451058 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083636824 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080430069 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090908902 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083336256 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087328976 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078348332 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078665299 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086402877 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074524834 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081747414 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07948503 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073542698 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078080159 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076017391 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081143745 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075442646 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07906781 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079371562 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088586954 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07342106 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088065706 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080382957 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075527747 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081085206 seconds)
  done (took 3.706407021 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074331298 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08613069 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093436031 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144296646 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11154261 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080876354 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082559411 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092478379 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097379552 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069353382 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074068108 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093706936 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093541579 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074961851 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069359202 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085117229 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085066664 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071267089 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075981343 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098348465 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089908679 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086550109 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095084117 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08567598 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068141 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071292921 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073440709 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084344945 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071079052 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080111688 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071297962 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0749696 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069785681 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078951312 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071217055 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068382116 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093570688 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080714775 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081890244 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069503726 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078310391 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070003972 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094236931 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129411872 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068435707 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07254827 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072378177 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079956762 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068460281 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096292296 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080756283 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068446053 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069399742 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068103519 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068341804 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071664893 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070549672 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071735118 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079141767 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075911083 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090787953 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074121625 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086358252 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068271519 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078752827 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068001219 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069902429 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067583827 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097351305 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070597851 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112605406 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069512212 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067514646 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080120298 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079026374 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074783627 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068435523 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085931068 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079926806 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072830884 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077408874 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071747374 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072352125 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099431717 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068944469 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068126483 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067531655 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072204849 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072293656 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069948242 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080577751 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068278257 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072440044 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087164642 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068756158 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06950454 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072605352 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071227229 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068591915 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079423873 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072546561 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069993061 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079529078 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069519402 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072285718 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081776478 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075185875 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067733427 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071038844 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072278749 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069902508 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070016169 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072535772 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070918682 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075734241 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075935525 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074353241 seconds)
  done (took 10.753761828 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164842254 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156752809 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071420461 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.1485367 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077496845 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080793025 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152818458 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095825549 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069024688 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07082952 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069719938 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110568965 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106313037 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116768398 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081645595 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069803794 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09201898 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115377119 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154604361 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148312544 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091872228 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077276452 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071936908 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07136785 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071257278 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078744216 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086350236 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078081706 seconds)
  done (took 4.41199941 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078424664 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103738746 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073514489 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091776723 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088930169 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069721693 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071234699 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071454625 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086265966 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078766352 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06943544 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075034591 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073535569 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073220109 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070618627 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075808153 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076308681 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068631996 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073513841 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074889137 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07936313 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094485853 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072904498 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069508079 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071849615 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069527625 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07742011 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081533258 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069504198 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104698406 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067188107 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074777169 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08643205 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069978923 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069302921 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069822505 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070346063 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06952308 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07087983 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067906189 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068564015 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073830804 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068277865 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077275381 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082210693 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071270689 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071488471 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072115027 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072519344 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067864782 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072459634 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072183493 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072231566 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076862313 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074042238 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072462813 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070422428 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095955174 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075141636 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069155115 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068373475 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067916698 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071439053 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078967333 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084787397 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071679746 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068289045 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069639143 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.08195011 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082409785 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069277681 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074021939 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067034845 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071246279 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071838782 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071863324 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070352433 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068071159 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069014479 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072720587 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070131511 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069058162 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069013135 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072595679 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067727082 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068129162 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070000401 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071107464 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077844526 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069563533 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073184046 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07033491 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068227759 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072293531 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074918172 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072816075 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080169377 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080954311 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069635126 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068076205 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08315359 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072357574 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069066599 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07506985 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074202194 seconds)
  done (took 9.406191086 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092158656 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069693669 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085760726 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092774868 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079224941 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074902788 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07958201 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069279676 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085615259 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074083602 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077338448 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068054155 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080633538 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07891383 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07000328 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079952288 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072624973 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087639526 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083583794 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068015205 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077924164 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081981164 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081529904 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083497141 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082793077 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083927946 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081613373 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079617735 seconds)
  done (took 3.86668485 seconds)
done (took 38.438899374 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.688630211 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.844131809 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.664200424 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.877096311 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.959924654 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.679922111 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.760684784 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.656586927 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.867835631 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.706363582 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.89397774 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.894072773 seconds)
done (took 64.230580845 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.683871835 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.815464887 seconds)
    (2/2) benchmarking "String"...
    done (took 1.917006384 seconds)
  done (took 5.331036098 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.860279061 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.323108686 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.895614739 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.658966039 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.666188932 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.929621275 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.443401912 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.10712805 seconds)
  done (took 29.624592336 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.810347225 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.885112161 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.378893824 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.391464598 seconds)
  done (took 15.11257758 seconds)
done (took 61.304483158 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.70781618 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.681720232 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.687008575 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.660596535 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.754261333 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.679963398 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.781092934 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.899298635 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.663045688 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.67252622 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.662299644 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.145620312 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.665821944 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.797928063 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.660241083 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.663344158 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.698110862 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.113408145 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.815740162 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.673841219 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.67182694 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.70848321 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.663802644 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.797668892 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.693680001 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.663326138 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.074786823 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.672879732 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.27110499 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.66403317 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.700775213 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.966735197 seconds)
  done (took 201.233659408 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.659884412 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.750691169 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.838859319 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.688131802 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.246233842 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.852551032 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.7636979 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.306829185 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.664933039 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.673205691 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.951922216 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.661259655 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.974340708 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.60780115 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.702741439 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.758372233 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.90267025 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.956738594 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.70573016 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.826928574 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.66827663 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.797008216 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.753546605 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.910404267 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.680590782 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.691065165 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.685080317 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.687300395 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.848074031 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.895997417 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.662725201 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.707918487 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.861669124 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.535882708 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.674751713 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.682959208 seconds)
  done (took 166.8387931 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.844063975 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.665025573 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.663648664 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.664958481 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.669079347 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.661871074 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784327089 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787630951 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.320369894 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.991693588 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.719154248 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.662875166 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.442594429 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.663680387 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.728907552 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.674169827 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.662780127 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.676907385 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.690243564 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.667446772 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.664035356 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.665265762 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784966405 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.678590607 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.674616948 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.66450028 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.669570566 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.052045566 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.663190452 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.665336761 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.800132957 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.667081657 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.670778995 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.903218899 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.665810372 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.665788183 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.664850127 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.489816718 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.697163632 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752090562 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.666058772 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.667981996 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.663831232 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.881133411 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.664931696 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.665632196 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.665814701 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.665673776 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.782039077 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.664260058 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789537304 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.664574102 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.147364599 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.664783899 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.666229938 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.664131951 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.873969839 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.483232433 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.664641806 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.66861829 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.666454166 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.666493726 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.677322782 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.854151867 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.742194544 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.665829989 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.666086097 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.669424045 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.664409928 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.673295434 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.664581879 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.175096712 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.679203178 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.788316369 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787117529 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669434579 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.665969261 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.729326863 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757791564 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.665859805 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.666309877 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.665843894 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.665825365 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.746963417 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.668048538 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.783343288 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.676035365 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.668624194 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.723003036 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.7362912 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.666445643 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.49239154 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.667538645 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.665940295 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916261266 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.73209841 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.668220844 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.668260044 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.755514064 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789059629 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.379101562 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.66750667 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.848139526 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.751733427 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.667360883 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.790264805 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.669656858 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747271881 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.675352765 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.670323087 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.703890016 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.667609272 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.679766792 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.668410865 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.039914267 seconds)
  done (took 388.028396387 seconds)
done (took 759.60343967 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.274419967 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.236301552 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.344165166 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.253244208 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.229196711 seconds)
  done (took 12.944639627 seconds)
done (took 14.551434116 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.751261675 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.749879488 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.687031192 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.747938513 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.683536869 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.747766794 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.731812849 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.69184207 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.717010516 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.691219945 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.717739792 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.690185656 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.675531117 seconds)
  done (took 23.891221198 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89188011 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.897265072 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.732707942 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.897590987 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.709576009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.907017659 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.821254439 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812009404 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.811131129 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.678859775 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.67729503 seconds)
  done (took 21.445322178 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.899023548 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.911290386 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.741550451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.900516271 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.712324555 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.901016927 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.831483386 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.822383979 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806389682 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.680334396 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.678124319 seconds)
  done (took 21.492753234 seconds)
done (took 68.436034257 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.673396292 seconds)
  done (took 3.282445522 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.685823616 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.842852826 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.667757335 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.667196186 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.668949279 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.666501429 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.66846273 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.668330761 seconds)
  done (took 15.146064229 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.669588053 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.67049041 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.670927224 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.67002866 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.670198693 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.67106116 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.670540531 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.669387758 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.671178159 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.670530603 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.66936539 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.670090286 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.671441071 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.671278075 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.670609443 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.670590792 seconds)
  done (took 28.331414646 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.671904174 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.66978915 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.670755808 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.671524146 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.671721649 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.672130347 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.671885236 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.671421611 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.671695885 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.671096754 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.670560735 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.663732417 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.664145163 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.664057605 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.665321433 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.665408401 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.664545988 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.664873299 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.669636208 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.6643793 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.665642852 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.665348625 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.665338804 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.665306299 seconds)
  done (took 41.640165187 seconds)
done (took 90.008690104 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.402039187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.265148653 seconds)
  done (took 9.26609357 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.670025444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.667592238 seconds)
  done (took 5.010020838 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.666586285 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.667278085 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.666901955 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.667256091 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.667742327 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.666867008 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.667638785 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.667734261 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.667586066 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.667103242 seconds)
  done (took 18.273904489 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.667163831 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.667224472 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.665167577 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.665847388 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.666810433 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.667198513 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.667181048 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.667082603 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.667315821 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.666188657 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.667267163 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.666465994 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.66684281 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.665657854 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.667314943 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.66594026 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.666031868 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.667194056 seconds)
  done (took 31.600705882 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.665907894 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.666458805 seconds)
  done (took 4.933331547 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.667030156 seconds)
    (2/7) benchmarking "second"...
    done (took 1.666039332 seconds)
    (3/7) benchmarking "month"...
    done (took 1.667515551 seconds)
    (4/7) benchmarking "year"...
    done (took 1.667723802 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.666206369 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.667110271 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.667697293 seconds)
  done (took 13.270629307 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.668273199 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.813396698 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.873033061 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.356701304 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.669574838 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.671672808 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.573592274 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.671502557 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.671892226 seconds)
  done (took 18.571811045 seconds)
done (took 102.526839098 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.52030952 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.664381003 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.935024866 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.774350491 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.684418629 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.956709188 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.669271011 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.922043375 seconds)
done (took 41.727420116 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.679360812 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.446732458 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.477049961 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.765941779 seconds)
  done (took 15.29216595 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.664356907 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.967417188 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.691701254 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.464650015 seconds)
  done (took 21.393766223 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.025756317 seconds)
    (2/2) benchmarking "read"...
    done (took 2.015106202 seconds)
  done (took 5.648035398 seconds)
done (took 50.616991138 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.669689607 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.669175986 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.668381166 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.668800297 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.670015275 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.668492626 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.669752945 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.669742632 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.669319291 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.669222168 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.668022297 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.670008239 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.669683179 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.669944812 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.669069691 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.66974278 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.669317387 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.670121161 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.670736342 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.669686144 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.668366972 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.669811715 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.670112675 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.670674572 seconds)
  done (took 41.67150767 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.670881159 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.672090268 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.671982653 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.671948134 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.671526073 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.672539297 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.670698699 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.670746338 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.669845916 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.67059226 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.671197856 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.67057925 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.67095982 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.671798176 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.670122238 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.671221632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.66902168 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.669934671 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.670348232 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.670362221 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.671136348 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.671278339 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.671200931 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.669702057 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.671525015 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.670369491 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.669409655 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.672400978 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.66989975 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.672048861 seconds)
  done (took 51.733850575 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.675684706 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.680031474 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.672487361 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.671824266 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.672096285 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.673142764 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.672182486 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.672506956 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.673702129 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.672918234 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.672430054 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.673771164 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.673134247 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.673159326 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.672963658 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.6731305 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.674237193 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.674158281 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.673217457 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.674404163 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.673049914 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.674824804 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.673958867 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.672842529 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.675172318 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.674051953 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.674180283 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.673955289 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.67372622 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.676953778 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.674022065 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.674130848 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.674205326 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.673483222 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.67423735 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.673227221 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.677556777 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.682422552 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.674314064 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.673486772 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.673709492 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.674117067 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.674471875 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.673567239 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.675364243 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.674524295 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.675010704 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.674429615 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.674902489 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.674815112 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.674691763 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.674654129 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.675989088 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.67515649 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.675110729 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.675005892 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.675452898 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.674978797 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.674858481 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.675252453 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.676364238 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.675812038 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.675641708 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.675116488 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.677897184 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.675387898 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.67600762 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.675590313 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.675696456 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.675931225 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.675701226 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.67594921 seconds)
  done (took 122.18166771 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.675505294 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.676195956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.675511448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.676365426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.675740369 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.675548043 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.675366695 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.67648172 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677345524 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.677053212 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676770081 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.677597669 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.675953252 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.676499486 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.677792634 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.676833965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.678208199 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.676917874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.678027668 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.676469706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.676726128 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.677065821 seconds)
  done (took 38.496745065 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.677215495 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.676939086 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.676998229 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.676233575 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.677752496 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.676419225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.67755971 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.678297873 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.677216243 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.677783873 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677535325 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67771806 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.678346529 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676293186 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.677360695 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.677613431 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.676080195 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.677552765 seconds)
  done (took 31.802154631 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.677966403 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.677846717 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.678974893 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.679223523 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.678977304 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.678032403 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.677844792 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.678823891 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.677701715 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.677818348 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.678495372 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678275828 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.678789809 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677952102 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678632214 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.678076755 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.678774038 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678489747 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678505412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.679603529 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.678822436 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.678146328 seconds)
  done (took 38.538415474 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.678743071 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.679495242 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.679782189 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.680439235 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.679487399 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.680005166 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.680035499 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.679699645 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.678595497 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.679605395 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.678850834 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.680208297 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.677619386 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.679108969 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.679229859 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.679597309 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.67896773 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.679717124 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.67881388 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.680044014 seconds)
  done (took 35.201027335 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.676714864 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.677326681 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.677265891 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.677314711 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.677529472 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.677865685 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.677311789 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.678772677 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.678320577 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.677060525 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.678117503 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.678193926 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.679377325 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.677883819 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.678738351 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.677808543 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.678121568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.678927298 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.678452867 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.678705737 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.677828801 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.67875408 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.679024265 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.677852743 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.678160799 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.67815545 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.678914112 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.678372422 seconds)
  done (took 48.601111355 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680192589 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.680039207 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.680859829 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.680178249 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.682150793 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.680513014 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.68112823 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.680154659 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.681790396 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.681692197 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.681366276 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.681146906 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.680285234 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.682223577 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.68189866 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.682075912 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681749022 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.682024533 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.681959137 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.681642615 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.683007027 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.682469014 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.683099543 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.682130174 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.682419445 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.682197324 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.68348399 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.683525893 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.681974249 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.682387496 seconds)
  done (took 52.067681293 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.703332334 seconds)
    (2/2) benchmarking "in"...
    done (took 1.702980687 seconds)
  done (took 5.022820865 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.682279231 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.681151848 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.680070122 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.683430432 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.683262548 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.681997144 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.682223956 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.682363138 seconds)
  done (took 15.073341765 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.680652492 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.681855901 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.682652644 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.682539915 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.682794284 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.679430953 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.686027758 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.680792299 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.68182419 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.6805737 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.686951226 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.687420593 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.683005547 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.67944627 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.679904194 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.680818977 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.682656833 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.682308285 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.682513654 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.682296569 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.683347909 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.681974435 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.682483254 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.682743769 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.681613431 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.691725088 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.685419033 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.682795069 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.681972373 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.684412194 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.681637456 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.682413485 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.684022095 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.683464253 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.683397663 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.684288439 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.690763199 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.684176335 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.687202155 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.684397822 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.684155943 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.683116127 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.683464893 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.682662895 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.681985712 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.683464659 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.683384363 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.682188296 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.680568685 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.685631279 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.692072273 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.681968823 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.683958959 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.685454317 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.682136978 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.687714933 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.684806296 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.684369768 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.691083993 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.69166192 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.69372839 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.691000328 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.683772103 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.685757173 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.692154991 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.707137379 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.690217217 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.685192965 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.684930482 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.685769633 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.689519274 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.695923949 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.692800839 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.685277638 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.686262571 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.685223351 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.685571127 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.685564484 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69152224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.686842229 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.685635566 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.687686185 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.693430217 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.70696167 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.683062109 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.687331066 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.68608708 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.685826145 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.684502259 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.694668178 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.687542626 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.686807816 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.683595593 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.685480437 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.686243154 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.687837697 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.682800447 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.684950307 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.686962511 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.687493394 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.687957413 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.686934178 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.693999553 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.687640093 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.687631106 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.691045535 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.687126453 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.685833843 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.690958438 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.688206587 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.687477593 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.6848041 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.691462051 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.686481351 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.686844173 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.692428266 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.688326387 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.687110187 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.687762444 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.687380849 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.694985041 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.712308523 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.688667072 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.687740996 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.690528174 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.700441933 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.688814328 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.687989124 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.687714767 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.688210829 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.688651685 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.687552819 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.688571548 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.687179552 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.688621201 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.688004554 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.687256086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.688852511 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.690504 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.687486977 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.686914663 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.687922673 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.687791359 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.687154773 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.689750927 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.688930757 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.694383067 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.687208471 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.688848671 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.689263403 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.688671165 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.689464071 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.689853488 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.688939878 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.687893653 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.690362508 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.687955595 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.690047891 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.692658342 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.689818896 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.690415808 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.688617059 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.693027558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.690689388 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.691472543 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.688384797 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.689458018 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.689544811 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.691707984 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.688216298 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.690492286 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.68726121 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.691446891 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.698167717 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.690310897 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.690874509 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.690813927 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.690306237 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.691135217 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.690746833 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.691340262 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.697728981 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.690966356 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.694722372 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.691577634 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.691755403 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.690763858 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.689335468 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.689913224 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.691757441 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.691189856 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.697582791 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.700737862 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.698797258 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.691084796 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.696646699 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.691546579 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.697701213 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.692176157 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.692869381 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.692705894 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.692149231 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.688954533 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.693410948 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.691225246 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.692383667 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.689353178 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.691695105 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.693416502 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.693586914 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.692304139 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.690920246 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.692155304 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.693323467 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.69224937 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.692736692 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.689504619 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.692899733 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.689790538 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.690673686 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.692388694 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.693772563 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.698027427 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.691283773 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.692533228 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.691600374 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.690241108 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.689586274 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.692716106 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.693821136 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.691880974 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.696512656 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.692320224 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.691367271 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.697110884 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.691384664 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.690059269 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.692332914 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.69278882 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.693886043 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.692705542 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.701252734 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.693878006 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.693448826 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.693458717 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.691797624 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.693784899 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.697932548 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.694005602 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.691652513 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.693889167 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.692810246 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.6947984 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.693249174 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.691771851 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.692949218 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.694305566 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.693871979 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.694946278 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.694404625 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.698001854 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.694656756 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.69432836 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.69603217 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.702867354 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.697419036 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.692651499 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.694825831 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.693569664 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.699535908 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.693613929 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.69611923 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.693374763 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.705627057 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.70460392 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.699822391 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.695407404 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.698593096 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.700766188 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.694432373 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.698306952 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.693929786 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.695160462 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.693922973 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.693907422 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.696635591 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.695490177 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.696831748 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.694660291 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.695648662 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.699475562 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.695791127 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.694521383 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.696427837 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.697028327 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.697391239 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.694521538 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.69646062 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.696611823 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.695935767 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.693714059 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.694384803 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.70105459 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.695733285 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.694895785 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.693278076 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.694759118 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.692216198 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.696351417 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.697117142 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.698603773 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.705189514 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.697443924 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.70489763 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.696356133 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.705220519 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.697737641 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.698203497 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.705562136 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.697164854 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.692906216 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.695395108 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.697395811 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.702876468 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.6981739 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.696598086 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.703700338 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.697249408 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.699624868 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.698265221 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.698224808 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.69893509 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.699580184 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.703245039 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.697375833 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.700565536 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.697192946 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.698072234 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.698463563 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.69900242 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.695176927 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.699766287 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.698566462 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.696686555 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.696031894 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.696063589 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.699186132 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.698087556 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.698176362 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.69886316 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.698513736 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.703847149 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.696245392 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.703256659 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.698904424 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.703755393 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.700271311 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.702831198 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.699648982 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.696326124 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.698942194 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.698524345 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.698561577 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.696256783 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.697304295 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.699439316 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.698428076 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.703773641 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.700030108 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.698788126 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.698114076 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.699711844 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.697695597 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.706415263 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.723431515 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.699144771 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.703562108 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.699988776 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.700834589 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.705143726 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.700253911 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.697759018 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.700441666 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.708778295 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.709230884 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.69882888 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.699823646 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.69900765 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.701304364 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.700931298 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.701042261 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.700873102 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.699842965 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.698630656 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.699988039 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.703281136 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.700445574 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.699634405 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.700274597 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.69886946 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.708832741 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.701324552 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.699032471 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.701538592 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.700273787 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.698988234 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.700199387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.701785687 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.69938704 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.701385262 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.700736762 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.706170979 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.705354531 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.70156877 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.699251601 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.70251655 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.700475849 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.699456582 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.702831704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.704324071 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.702001465 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.700668535 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.702058998 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.700182176 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.698252129 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.70160697 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.700761549 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.701966335 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.703019585 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.707463449 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.700869091 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.701362328 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.702559142 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.704579409 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.700047974 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.700745709 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.708506425 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.703935765 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.710656583 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.709627914 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.707697901 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.700759511 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.703797982 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.711003176 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.699689622 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.701897856 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.703847424 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.703448461 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.700491691 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.705388175 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.703783728 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.707315197 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.701063094 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.701736528 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.709742626 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.703299928 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703783443 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.702864944 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.705671639 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.70106279 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.703461072 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.704433659 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.702764826 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.708140808 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.704198863 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.704439912 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.703755684 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.700808694 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.703731036 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.709066377 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.703908024 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.70371427 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.704396269 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.703098305 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.704135007 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.704406328 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.704242736 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.701326974 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.701459936 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.705291288 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.709601243 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.704478535 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.705291864 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.703423094 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.703763188 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.705507588 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.705878925 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.705901051 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.705279629 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.702195928 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.705136567 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.705160991 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.706320335 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.702510607 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.703795246 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.709757243 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.707119422 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706216333 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.714562136 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.7133653 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.706624823 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.702765159 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.703320197 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.707944605 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.706490277 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.705560383 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.706036109 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.705520517 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.706591933 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.705916216 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.708375873 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.707602358 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.719751492 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.706999267 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.704623717 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.70438702 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.708444672 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.707688814 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.7061472 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.70638392 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.706503509 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.707319977 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.714641033 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.707194266 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.710446465 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.704708896 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.706453256 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.711732787 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.708320856 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.713352268 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.706146913 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.707618112 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.707268607 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.709469997 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.721597088 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.708199663 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.714271457 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.736878383 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.70525638 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.706461364 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.708687332 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.705136706 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.708691281 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.705597708 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.708082908 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.707643425 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707796399 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.708267258 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.707791719 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.712436215 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.707650638 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.709173471 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.708267766 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.70592341 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.706849767 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.708017401 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.709481004 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.707661807 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.708642776 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.708594657 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.709811368 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.707682496 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.718809495 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.716650581 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.7096533 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.710059337 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.708655222 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.710144552 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.710354806 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.717793179 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.716969527 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.710296028 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.711288019 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.708937769 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.709175333 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.709195176 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.70813414 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.708217934 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.707745086 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.708691955 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.719055542 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.718402219 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.712815104 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.708230792 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.710406413 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.710371299 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.709313125 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709802463 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.710062506 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.708928795 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.70773134 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.71372686 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.710410011 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.71043373 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.711412856 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.719053648 seconds)
  done (took 1013.141405983 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.710537941 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710746376 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.710977842 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.711123276 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.711307465 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71066124 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710410878 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.711556659 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.71052829 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.709489715 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.71110297 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.709990929 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.710107131 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.710357938 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711229364 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.711552799 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.710983465 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.712454353 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.710942929 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.712205959 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.711657111 seconds)
  done (took 37.572885177 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.71156044 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.711309463 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.712016996 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.711725322 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.711817986 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.71228869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.712616983 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711111328 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.711865969 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712218635 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.711827144 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712232694 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.712754566 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.711885529 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712313438 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712729064 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.713071684 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713251248 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.711106566 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.713348791 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712158037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.711354644 seconds)
  done (took 39.311380609 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.712667138 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.712864343 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.709856559 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.712325483 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.713550071 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.713076485 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.713634149 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.712940768 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.71434783 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.711191412 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.709817615 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.711104635 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.718206428 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.720871225 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.713179328 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.712817369 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.859159167 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.713834738 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.714035237 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.713816249 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.713169577 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.717493294 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.713546958 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.714167148 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.710516402 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.714559591 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.713871424 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.713815967 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.71474452 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.711553269 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.71890468 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.714525397 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.710894463 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.714775208 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.71225797 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.712246729 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.71826388 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.71447085 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.71492353 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.715141547 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.721037826 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.739170661 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.715293839 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.718955611 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.716127591 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.716009779 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.715497076 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.723839349 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.71662223 seconds)
  done (took 85.825961389 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.715284878 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.715104355 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.715064276 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.716720592 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.715957005 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.717532425 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.716477994 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.713605339 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.714829298 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.7154509 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.715561638 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.715705211 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.714889337 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.715208633 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.715267011 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.715351367 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.715439751 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.716859875 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.715563163 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.715164832 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.716816488 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.715390911 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.716911821 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.716351544 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.715468199 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.716248177 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.716833396 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.717682953 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.715414862 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.715561325 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.71453314 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.71522423 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.715914675 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.713912625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.713991032 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.714460065 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.714446955 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.715338538 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.715174292 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.714940272 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.715193782 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.714421195 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.714814132 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.715114489 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.715737034 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.715240451 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.71586128 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.716233371 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.715390721 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.715929958 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.716304225 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.715055878 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.71391223 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.71416025 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.715158704 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.714307649 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.714776161 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.715266693 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.713606305 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.714339818 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.715199224 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.714628387 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.714456001 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.71368505 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.713291302 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.713270492 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.714113041 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.713972301 seconds)
  done (took 118.285006929 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.713778026 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.714672623 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714047569 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713623905 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.715167011 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.71332451 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.715089803 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.715399096 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.71435985 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.714518246 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.729829016 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.710381586 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.708517627 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.711053768 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.711519413 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.710411293 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.710165052 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709470476 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.709518703 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.709610114 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.709678637 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.710506675 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.709623485 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.709467553 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.70978493 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.709901974 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.710427273 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.711572464 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.710900613 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.710886644 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.712044845 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.713344687 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.712370794 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.712677959 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.71199416 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.711597892 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711732983 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.71187446 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.709378621 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.710819033 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.710271917 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.710056386 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.711375298 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.710383898 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.711282913 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.710916227 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.711691876 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.712380485 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.712411305 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.71102033 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.711936198 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.711284767 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712511287 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.711607821 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.710886112 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.710577924 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.712357654 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.711694519 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.710644167 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.712447704 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712460323 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.710912545 seconds)
  done (took 107.78600319 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.710737682 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.710307878 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.70781258 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.711489646 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711295747 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.711842021 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.710966625 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.710437479 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.713293688 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.711766294 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710549544 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711972816 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711969357 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710554458 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.712419737 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712466461 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710386324 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.711500164 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.710079961 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.710549131 seconds)
  done (took 35.86755725 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.709204415 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.711534344 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.711511266 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.711009922 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.711301943 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.711412044 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.709339734 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710546379 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712796802 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713090504 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.712191094 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.711141238 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712471103 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.713828818 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.712785031 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.710841098 seconds)
  done (took 29.029393745 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.711823595 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.711495224 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.712296808 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.712662626 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.711515771 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.711817799 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.710993927 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.712660161 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.712181532 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.712233709 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.712259382 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.712643677 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.712544669 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.712562541 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.713527818 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.705845122 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.705829128 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.706176672 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.705973494 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.706546664 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.707905963 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.704667276 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.703957252 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.705191959 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.70334919 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.703916657 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.70595555 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.703534996 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.704373566 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.703977018 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.70347793 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.703273368 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.703961505 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.705307862 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.705323127 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.704361667 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.706250357 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.703141302 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.718722775 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.705219997 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.704316079 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.705046074 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.703523113 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.704568431 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.70372915 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.702291336 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.70447802 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.704450085 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.705602767 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.70488118 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.705771499 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.706956268 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.706046418 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.704770452 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.705274849 seconds)
  done (took 95.536555476 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.705814965 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.705808601 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.705159841 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.704480242 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.705210643 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.703934123 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.706747732 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.705312411 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.70573321 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.70491353 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.706517353 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.705537746 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.705779478 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.706153906 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.707407799 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.703530302 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.704646712 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.706705699 seconds)
  done (took 32.338788696 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.707940698 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.704447296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.707545889 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.706959045 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.706991249 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.708066314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.706083894 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.706034361 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705461992 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.709690488 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708962864 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.704428163 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705835821 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.707944062 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.706865185 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706412757 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.706295515 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.705911098 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.70490854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705366481 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.704504732 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.705765889 seconds)
  done (took 39.18232503 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.701652784 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.701639082 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.717345945 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.725333738 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.722809136 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.737198394 seconds)
  done (took 11.946676162 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703991929 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702574512 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.705800473 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705369773 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702311895 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702424081 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704301668 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701351526 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704746044 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702089697 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703576543 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701498393 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701226314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701503951 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703901055 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703693807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701530946 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701447114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701482546 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7007782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701659248 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701726978 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70162263 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701193569 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701934274 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700934228 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702780135 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702950886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702196772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702028457 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703041166 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702827752 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702782721 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701432064 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699151224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697193268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698273377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697494565 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697312489 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698451027 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.697166114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697727803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69959364 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696700035 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698746329 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697893181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698841914 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698029606 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.6981432 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698827402 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698571623 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698143759 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698038029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696765662 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698911709 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698753096 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699623702 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697931972 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697180254 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698456881 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697861012 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696600445 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698607324 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697995425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697649443 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696957801 seconds)
  done (took 113.86074217 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698361543 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.698105236 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696907795 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698751013 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696819283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696593231 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697011103 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698109419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697536259 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697679341 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697692031 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696779101 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698706812 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699514943 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69614973 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697958105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696723195 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697071773 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698405314 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697185058 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698100379 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69850726 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696984693 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69628266 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696962776 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695521961 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69652692 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696867899 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697751493 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695163064 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696064647 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697929798 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696871753 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.697653013 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697590529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697865012 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697269863 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69609531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697304941 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696486643 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696092638 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697334799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698041017 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696924006 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699183602 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695340769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695960531 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696296565 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696281647 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694668273 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695642574 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698362911 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696648554 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696009253 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697049598 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69573078 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694303623 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696822086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696092766 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695057805 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697809134 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696195889 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694093997 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695946777 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695579094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698396854 seconds)
  done (took 113.629611733 seconds)
done (took 2355.310800976 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.762223418 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.804218836 seconds)
  done (took 15.196048067 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.856243025 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.806739567 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.691222076 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.725150894 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.694297941 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.720763446 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.714096736 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.693026471 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.692681231 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.696014198 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.69273178 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.877109182 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.748382147 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.692514199 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.691645671 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.783194265 seconds)
  done (took 49.40981704 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.695014904 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.696981331 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.706068711 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.696576145 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.695013901 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.706904544 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.726730864 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.699331326 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.727980905 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.708112218 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.765044006 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.706937958 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.695483576 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.746067278 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.707248117 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.712544986 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.785117797 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.770550247 seconds)
  done (took 32.576940041 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.773974616 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.702469189 seconds)
  done (took 10.110943159 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.715835514 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.75648432 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.703382096 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.694426317 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.69746239 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.687434992 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.702876459 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.729851328 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.72153019 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.7138666 seconds)
  done (took 68.754461747 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.700115749 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.695066793 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.693898428 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.691660153 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.688011335 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.693790055 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.69185206 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.692196242 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.343433991 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.72827504 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.699014559 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.69701685 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.693301307 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.692685256 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.692347174 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.712773484 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.806293857 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.693604996 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.692705196 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.696439771 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.691757576 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.747473806 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.705872885 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.696123114 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.722519938 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.343434992 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.69929211 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.695525249 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.805385523 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.691787219 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.691988366 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.877770416 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.695100943 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.15208461 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.966207085 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.698433437 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.705545572 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.7007943 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.692986532 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.803072412 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.693040955 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.696671477 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.598664571 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.947167242 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.796888332 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.736561309 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.998220646 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.708133966 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.692355234 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.721354832 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.695911708 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.694618238 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.70423962 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.190919583 seconds)
  done (took 122.980106432 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.692194801 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.036883743 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85674063 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.694614199 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972633836 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.897007437 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.692667946 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.737461053 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.694125676 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.918178707 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.943708441 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792800056 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.693876547 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.688941885 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.69146118 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.689704243 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.844346965 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.76086899 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.692373635 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.689666313 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718661935 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930579428 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.814221624 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.69580449 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.71998481 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.899071075 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.814472606 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.793739 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.468979482 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.68940909 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754606053 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.693492375 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.692218637 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.692354054 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.864528307 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.78681729 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771220248 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.692561225 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.689902686 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.692286737 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.435209242 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.891357911 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.784979656 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.820359691 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.942611636 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.894871621 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.468569777 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.690931982 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.42251023 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.858402021 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.918793627 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.921281171 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.812625322 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.694396055 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.220562907 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.693291302 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.693756567 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.940373923 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910982683 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.789192117 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.695116597 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.693695102 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.692000506 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.97911333 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.694884672 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.786821221 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.695189093 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.693093415 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.787009506 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792187532 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.921034298 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904951571 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.722003061 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.029741062 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.210600106 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.938104875 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.756074583 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94161687 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.694128825 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.691704355 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.772833093 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.534055852 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.945268237 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.974036927 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.935223117 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726126685 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.412112466 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.692248661 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.9179384 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.912210408 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.950708264 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.936949267 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.929144604 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.02614493 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.692104213 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.693084489 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.918748988 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.816934525 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.696233402 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.04137177 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923610916 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.221753926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.720672629 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993469825 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.823058464 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.698688387 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.327278584 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.696575407 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.920278463 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.734489509 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.694682901 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.694452131 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.911136244 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.67935152 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.694971479 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.657959568 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.754082094 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.699544449 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923614422 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.699538869 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961944183 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.69779588 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929661822 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.118005238 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.723393807 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.923618604 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.939335862 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.696128435 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.932922018 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.93602972 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.807035151 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.96738414 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.592968336 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.697140302 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980665699 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.69889251 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.697934145 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.864008378 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.697309208 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.837381657 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.699752675 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.986264839 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71660481 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946283524 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697868291 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.946603415 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.727951895 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.74649 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.698436769 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.825317603 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.700060183 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.524579559 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.851043445 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700058254 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.695699469 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.501584099 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.696443453 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.260319825 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.920783602 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717045419 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.765567723 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.353739679 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.695792297 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.773695527 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.718305106 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.085506225 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.698423 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.946585346 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.700570417 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.695921023 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.696820609 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.984650446 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.931477269 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.700058195 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.698633641 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.601684327 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.700027924 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.696258527 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.877329051 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.020443241 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.69863226 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.896952913 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.699127068 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.823225711 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.700675403 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.770439287 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.034943479 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.698737569 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.698969504 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.697444706 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.699259906 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.697031631 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958071072 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.723558066 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.201089674 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.835618276 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966575917 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.004246443 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.937543673 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.739922235 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.703951317 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.949962165 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.700148205 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.759007584 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.701253 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.718086181 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.924238831 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.701471418 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906573968 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.966954749 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.551704862 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.744652036 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.701526193 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.699631121 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.698968902 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.843399486 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779875229 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.703356566 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.698681347 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.812984412 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.819829708 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.90724488 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.699449316 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.80784046 seconds)
  done (took 864.896072515 seconds)
done (took 1165.553057449 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.702179364 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.700137694 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.704181269 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.701523039 seconds)
  done (took 28.44326416 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.710723279 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.701208507 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.703971247 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.701884392 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.704129845 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.702099352 seconds)
  done (took 11.860839438 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.743369755 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.699494024 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.702353394 seconds)
  done (took 20.784396874 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.771806977 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.081321592 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.831169646 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.111545829 seconds)
  done (took 9.433885363 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.704512868 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.703830123 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.702641384 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.701007348 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.710204047 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.710709965 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.705113377 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.702987466 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.710738321 seconds)
  done (took 16.992563329 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.710830941 seconds)
done (took 92.861388478 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.078070083 seconds)
    (2/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.758555759 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.937144628 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.78416855 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.846998176 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.736823811 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.349064651 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.910335484 seconds)
    (9/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.731160015 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.01334391 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.740037485 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.709706121 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.730779543 seconds)
    (14/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.744335369 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.830435615 seconds)
    (16/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.796553257 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.931166812 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.713656791 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.712429631 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.716434755 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.12300531 seconds)
    (22/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.865734734 seconds)
    (23/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.798038736 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.739608185 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.71050875 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.622345464 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.720117048 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.844239808 seconds)
    (29/309) benchmarking ("sort", Float32, false)...
    done (took 5.441041856 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.9546842 seconds)
    (31/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.820199326 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.086805577 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.395666282 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.816994964 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.798632179 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.805554599 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.936231402 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.953790698 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.806539473 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.719479044 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.429300588 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.872948143 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.41050983 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.056959995 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.831888285 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.916850709 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.894229074 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.926548291 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.52186977 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.714101037 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.821637533 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.713430486 seconds)
    (53/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 3.503168159 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.045597206 seconds)
    (55/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.880117656 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.116407793 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 1.93560502 seconds)
    (58/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.896755358 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.720739033 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.942404432 seconds)
    (61/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.964008995 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.782777833 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.845282087 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.69925365 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 5.377271174 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.6383835 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.978076036 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.842264209 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.038783927 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.027034255 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.715725106 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.993085354 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.738385619 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.951591045 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.810453401 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.164639397 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.743455876 seconds)
    (78/309) benchmarking ("sort", BigInt, false)...
    done (took 6.712709184 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.719345645 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.8909637 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.824860785 seconds)
    (82/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.092511698 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.803347553 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.035891502 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.088162006 seconds)
    (86/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.71988234 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.557755644 seconds)
    (88/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.719819701 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.715345457 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.076930771 seconds)
    (91/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.824388608 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.020015344 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.098829801 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.719504348 seconds)
    (95/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.816063411 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.714861689 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.147990393 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.068777998 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.742077603 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.026649079 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.895907973 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.718533325 seconds)
    (103/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.853503605 seconds)
    (104/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.963469874 seconds)
    (105/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.034310711 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 5.455019796 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.717476183 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.855383228 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.976558958 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.042997396 seconds)
    (111/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.722036562 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.183018893 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.005618077 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.71558041 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.807606222 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.741421196 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.84187542 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.866886929 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.621810194 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.20904836 seconds)
    (121/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.645496047 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.725733287 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.109493054 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.017685012 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.101203035 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.751096198 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.011531471 seconds)
    (128/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.826677328 seconds)
    (129/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.716558751 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.051507166 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.86838111 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.952855258 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.715025131 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.311664117 seconds)
    (135/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.118321406 seconds)
    (136/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.729182994 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.292121428 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.910338666 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.944862281 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.743265809 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.716929673 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.165125681 seconds)
    (143/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.862124465 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.51512687 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.757695774 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.641807331 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.756450863 seconds)
    (148/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.736874425 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.020768862 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.181959956 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.041362668 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.076326098 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.078923304 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.45920112 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.821367918 seconds)
    (156/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.764531098 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.821576563 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.72547829 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.314178315 seconds)
    (160/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.029911437 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.040845389 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.735688198 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.718141177 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.721698771 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.856627539 seconds)
    (166/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.906477783 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.723455858 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.734997205 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.33816209 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.7480177 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.843953017 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.907887904 seconds)
    (173/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.81614533 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.123698036 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.988765864 seconds)
    (176/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.831131735 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.727045447 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.837903194 seconds)
    (179/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.947939449 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.961439459 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.81253324 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.586497103 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.633419537 seconds)
    (184/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.72477027 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.38126737 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.751333395 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.886869147 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.720685628 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.926697291 seconds)
    (190/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.729099659 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.705655394 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.725137164 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.051250338 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.789699872 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.856190332 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.355067599 seconds)
    (197/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.812609517 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.88606109 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.730223413 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.951527881 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.908867102 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.729708518 seconds)
    (203/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.803734816 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.721168508 seconds)
    (205/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.611848399 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.75061237 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.727646327 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.216728008 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.843504591 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.857125494 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.955980532 seconds)
    (212/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.788963459 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.982630384 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.790925043 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.736902011 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.733419429 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.371034025 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.925885569 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.883301105 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.728822758 seconds)
    (221/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.111914617 seconds)
    (222/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.925233279 seconds)
    (223/309) benchmarking ("sort", Int8, false)...
    done (took 4.596704089 seconds)
    (224/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.723982052 seconds)
    (225/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.11663986 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.774073203 seconds)
    (227/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.177624842 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.039514999 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.060716829 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.725988913 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.86470863 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.039983407 seconds)
    (233/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.903808524 seconds)
    (234/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.734961629 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.722473277 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.822469887 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.505119554 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.773919619 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.80351339 seconds)
    (240/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.892690797 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.84727649 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.407605984 seconds)
    (243/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.862142139 seconds)
    (244/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.805000951 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.971384343 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.76391017 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.937442205 seconds)
    (248/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.103403555 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.886629033 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.2201412 seconds)
    (251/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.82286647 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.113484709 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.737522237 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.74464814 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.123011025 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.727022171 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.839738222 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.101113029 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.071144299 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.83409553 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.757190338 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.476762646 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.725018353 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.142459566 seconds)
    (265/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.042959517 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.747320896 seconds)
    (267/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.877810416 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.734893359 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.770896622 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.744583007 seconds)
    (271/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.608466131 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.072333784 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.789800147 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.748537179 seconds)
    (275/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.979729761 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.730162603 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.470537302 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.912377295 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.990163872 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.731066735 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.80813783 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.524920027 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.729394413 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.046892576 seconds)
    (285/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.814620398 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.047021292 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.916386023 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.246893502 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.826860085 seconds)
    (290/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.861741105 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.050312101 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.531636713 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.732951474 seconds)
    (294/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.816908944 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.43541778 seconds)
    (296/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.847714978 seconds)
    (297/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.066132219 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.76779378 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.817865297 seconds)
    (300/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.282953523 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.670481565 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.741825845 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.826427649 seconds)
    (304/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.604951431 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.051740151 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.524651948 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.050114111 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.944250908 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.847778248 seconds)
  done (took 961.57941 seconds)
done (took 963.505082853 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.756287581 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.744710108 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.728805652 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.751253761 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.842324319 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.775884241 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.742670015 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.734030945 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.778786345 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.779366611 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.727895721 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.773644857 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.728278751 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.729858658 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.728520016 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.746845104 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.043799675 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.761966368 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.747641482 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.740870358 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.749955066 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.7299044 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.778615977 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.773315279 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.735287945 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.733164482 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.732541705 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.749841652 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.843314534 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.735645585 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.734760912 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.741350389 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.043845119 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.75964423 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.727097503 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.748896209 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.741796073 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.741432414 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.736234348 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.764354874 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.130863398 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.773471557 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.731120169 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.731356096 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.730439882 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.736991294 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.730651298 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.739227263 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.747372662 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.747120542 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.127005966 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.789830621 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.73384815 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.730888472 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.744435634 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.7303344 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.735458881 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.748882919 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.751924848 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.748102371 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.030860508 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.769433281 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.73500136 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.750307744 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.740221316 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.159080977 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.770403641 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.738051534 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.131240185 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.778388849 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.157974196 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.783547776 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.73394664 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.745381046 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.764742623 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.043973522 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.762482073 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.730817251 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.740791194 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.730073429 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.746530427 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.747233645 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.736861951 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.731994782 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.749446992 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.7786612 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.743996082 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.732302927 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.744614537 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.751618346 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.741087049 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.744582407 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.737258421 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.730896169 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.743764455 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.736690562 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.735189154 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.734911958 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.736893686 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.747133459 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.1319898 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.791227682 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.729658495 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.729782262 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.732557208 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.748527277 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.13202258 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.775724456 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.756799568 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.782811021 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.736633159 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.033417187 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.766892065 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.751953403 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.744212118 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.736161192 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.734500048 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.033590286 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.158741898 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.790261806 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.734705853 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.734006848 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.751492206 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.735512955 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.731343058 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.046805347 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.769291361 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.751944731 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.857945098 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.747992184 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.768948053 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.73265037 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.739646227 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.784918565 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.75171975 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.767917556 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.73793143 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.752912604 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.755252472 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.733800505 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.752195651 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.754568828 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.741478697 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.749407903 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.739458394 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.78957388 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.75873491 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.757744849 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.762946262 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.864514107 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.738010002 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.041713564 seconds)
done (took 273.258503452 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.822093467 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.740117668 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.831712405 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.744194743 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.831931682 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.816925287 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.745221437 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.744391426 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.74350019 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.226987369 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.74604468 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.749891731 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.740858003 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.743922041 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.812890462 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.746190953 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.744619874 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.176409799 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.745015536 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.820735299 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.741976232 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.744464997 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.74546951 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.225604287 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.741856081 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.743079963 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.822447321 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.743756519 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.174785711 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.741215057 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.739725224 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.175247665 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.819833196 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.772464556 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.753842234 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.751627208 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.831760511 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.757054657 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.810304902 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.812028905 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.837546562 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.779185303 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.742074573 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.741982385 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.748830417 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.745487057 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.744997314 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.774333285 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.742587411 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.752008609 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.177738117 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.749462159 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.752906043 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.7465113 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.745567421 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.773326513 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.745808384 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.747417681 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.822966095 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.748165359 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.812346628 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.228139208 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.229242476 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.747263669 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.741953539 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.746975377 seconds)
  done (took 176.721968776 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.810106567 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.818762877 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.808871982 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.748074919 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.792167061 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.811363216 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.748844184 seconds)
  done (took 14.215207318 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.751439696 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.747173356 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.794373495 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.791219699 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.745773604 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.899270057 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745288826 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.755538485 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.75135899 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.768903852 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.745516869 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.747901684 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.755292632 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.743313862 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.794982076 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.754581577 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.858604346 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.745746301 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.747177832 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.890876324 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754707013 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.755702041 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.771519231 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.75674786 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.744936103 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.75094162 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.314080162 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.748799048 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.74758286 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.747538665 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.74711594 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.788208404 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.747253428 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.742495876 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747447055 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.855791115 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.745168733 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.745732987 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.745216295 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.739858081 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.746141328 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.74565662 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.746941737 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.745842878 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.745833109 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.767453847 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.746885411 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.746706908 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.746739212 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.745721021 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.768544124 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.746137536 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.745964034 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.75166713 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.786493409 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.750510091 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.746985487 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.745640015 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.747749774 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.746490743 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.894995493 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.794122698 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.747377277 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.793613294 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.746013421 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.749268765 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.746397557 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.745933487 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.832553465 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.746390215 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.793816495 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.748501553 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.903013022 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.767178994 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.748147244 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.748033761 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.748572297 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.747221199 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.744274257 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.75307599 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.74717914 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.746088707 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.751052568 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.753153974 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.747552701 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.860199088 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.884729763 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.748015164 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.747433415 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.752276903 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.747207525 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.790006856 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.748992018 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.748005795 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.801033212 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.860932338 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.773958558 seconds)
  done (took 193.637444881 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.75245392 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.75197299 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.747838944 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.761452557 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.75153322 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.74801895 seconds)
  done (took 12.192297445 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.74928284 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.752686823 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.748087215 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.755228431 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.750360102 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.748760433 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.750339062 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.748813307 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.754578814 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.74923596 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.750577517 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.746754151 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.748161695 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.749931866 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.75049315 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.749100297 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.749608743 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.749051184 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.751685037 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.750195264 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.004562317 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.750422075 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.750666543 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.750427375 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.755090748 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.752460926 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.760348442 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.750016344 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.750133066 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.753946195 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.754086802 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.751308224 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.750545486 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.754430274 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.754040793 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.750653511 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755277446 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.747634854 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.749230944 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.751963954 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.748281149 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.750913605 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.751306849 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.747965604 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.750004466 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.754343165 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.752106657 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.759913839 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.751579591 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.748500353 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.748846655 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.750683611 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.75176589 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.749180744 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.752738194 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755783034 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.753285153 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.751036132 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.75138107 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.751847193 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.756485956 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.75247833 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.750679193 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.755938244 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.757075678 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.750057013 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.751673722 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.756956204 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.753164635 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.753488643 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.750712623 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.752230927 seconds)
  done (took 129.054032412 seconds)
done (took 527.512983641 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.009286172 seconds)
  done (took 8.691896627 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.875036026 seconds)
  done (took 8.612462714 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.244480982 seconds)
  done (took 9.929994776 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.761485111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.794417157 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.764348364 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.757768156 seconds)
  done (took 28.786297859 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.943399724 seconds)
  done (took 8.627103972 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.774674523 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.749542463 seconds)
  done (took 15.275541176 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.817472342 seconds)
  done (took 8.502652515 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.778451175 seconds)
  done (took 8.468024054 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.765707426 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.775120533 seconds)
  done (took 15.247276859 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.754224396 seconds)
  done (took 8.436233009 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.982271571 seconds)
  done (took 9.766517482 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.780329592 seconds)
  done (took 8.533417991 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.800325894 seconds)
  done (took 8.483010599 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.803782252 seconds)
  done (took 8.485918114 seconds)
done (took 157.52915803 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.751519988 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.751818817 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.751996257 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.749678838 seconds)
  done (took 28.687547802 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.786026047 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.785362772 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.787596758 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.797956102 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.788472641 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.785249399 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.778673677 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.778591377 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.796916709 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.788878976 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.788743157 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.78939994 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.78471262 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.780275156 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.787900166 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.787117056 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.796937681 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.787177625 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.778491301 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.788502946 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.753349539 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.796315501 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.788092186 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.753568784 seconds)
  done (took 44.51838005 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.942092907 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.82174471 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.904120119 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.803663436 seconds)
  done (took 9.154045782 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.805176539 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.806125456 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.818936947 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.856735889 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.880261184 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.814973941 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.77623474 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.77591882 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.76241241 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.806175703 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.881694172 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.800151487 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.895069588 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.754481526 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.939790602 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.755767588 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.754547882 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.805198105 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.85702776 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.872055517 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.754631035 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.806505906 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.80973974 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.802035459 seconds)
  done (took 45.276342254 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.757582539 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.763710314 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.763006126 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.756022004 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.756669193 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.756366386 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.762242273 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.75722485 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.777656962 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.75763353 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.755943976 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.758134863 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.763044346 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.756866478 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.75669763 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.770952352 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.771857466 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.756393983 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.761005334 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.762048052 seconds)
  done (took 36.90729164 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.752230728 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.599079591 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.097832371 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.004350507 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.752815105 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.754671323 seconds)
  done (took 30.646446837 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.765277033 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.760947157 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.7519618 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.809281353 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.897314257 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.762369931 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.755085538 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.76370181 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.800555817 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.820171125 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.774009002 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.781345835 seconds)
  done (took 23.127375513 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.754064434 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.750278182 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.7560473 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.764415871 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.762830797 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.759842096 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.758109556 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.752114392 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.763951545 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.770110074 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.759525525 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.762356416 seconds)
  done (took 42.804323126 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830143286 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628135008 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206680074 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216744042 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277993012 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957068028 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.749180239 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838914695 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.757496895 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024496648 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.104295565 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957194483 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996660271 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480130092 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.756988348 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.221803202 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04598594 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971915702 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785680164 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373220691 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860430428 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260720999 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.436771683 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.864600233 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956662703 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.874586049 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.011049504 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.709364397 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803006959 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757381134 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759581717 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.754162789 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025177266 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875956545 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825575747 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760048919 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.166518023 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.459535128 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.771323819 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.436392224 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.304264162 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87422993 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759569666 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.755592013 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.684094632 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256414982 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844932861 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.761114836 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.456002877 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.756468532 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.762149265 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83134703 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.757800649 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.563347077 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450107494 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.026681306 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.757422041 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755744063 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319061622 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768070243 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352769295 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.690571148 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.848889259 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.443380707 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214488569 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.915774456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.758978452 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760570202 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.68829379 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.440567755 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873524848 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897269683 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.775628288 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39999936 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044631574 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.16972915 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817981674 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033625988 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.528316134 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.690239984 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981030017 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.704933725 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687361266 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.591760485 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.686792146 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974723628 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800337999 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.354421196 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793008679 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842743755 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764567708 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776487082 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762549722 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97391573 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.65433989 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761139143 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.049670707 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015855166 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77569584 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846060768 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687088035 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.761626944 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005432497 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.963770091 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.978359189 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.237138595 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850853759 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.570606606 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.875095792 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.64827166 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.766325135 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.030269243 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823871527 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776728642 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878952991 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.709867509 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012354722 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.591494036 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.961075983 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.120017234 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005757733 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.106452579 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00943078 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823077049 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765988042 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.761808552 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.456167988 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377127538 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.97776046 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.77599168 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230439599 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.766475498 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.759196678 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.69735659 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.413840471 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.128324724 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.842939253 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976373242 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.69762852 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035490131 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689169346 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89878059 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.769820098 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.976398062 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.419193302 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.852261102 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011215432 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.852556251 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.948347761 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887006411 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776501624 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854455734 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779374085 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.049651847 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.110404191 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.764972561 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.763478842 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.457933191 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.824056113 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765171545 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.766413344 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28569814 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036032161 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.787809816 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.767876804 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.684009253 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.776046737 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824997966 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766699157 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.767759925 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.282361521 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274848821 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.769516294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.417455243 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980066746 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768248634 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.397668597 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944547495 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.776991112 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033553354 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831292719 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.690188536 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.466068439 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.463924123 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765095126 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691962651 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.765380422 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76780987 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769659381 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.948788841 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039366196 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818455922 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.465147438 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.873447994 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771162298 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.76713403 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766874501 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.256634955 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78688897 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276660139 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875068688 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893602294 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.777947426 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.693016168 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.767341371 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768932027 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.766777151 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.716568244 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81445336 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.441303585 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971449808 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01487561 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.168826313 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775160601 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.450067744 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.884884757 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.779010055 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.067383642 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271841603 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.86392721 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834283657 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.77161987 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.455255729 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503590976 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330461782 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059634183 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086191808 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114888902 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.119117473 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.083921566 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.853171266 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9936397 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.289473698 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824863022 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859893401 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704234707 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781945825 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42412639 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125368714 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77619045 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985699905 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055326549 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.138998856 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902743479 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972380035 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798616625 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.550797067 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.791760583 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.305121692 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784508986 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.22226788 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974012749 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854184358 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.073274075 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.853209145 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.765906389 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116807367 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811507172 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.471716073 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.12043466 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.136336219 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.229544473 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995690585 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.770633362 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.208911567 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118889486 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.920450374 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.883700276 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696960851 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.773405461 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.773934376 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.782734768 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.741476416 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.611280887 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.011712424 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774309409 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996201612 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.936801483 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132482156 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.718868822 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.773201633 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769848189 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019189866 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448257337 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921030709 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.044476257 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.334675182 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779655638 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.697267285 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697516703 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.470584819 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.774140985 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736748762 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983847651 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.878480654 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.461510992 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.127455476 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076788918 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.015387074 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.782367271 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.041846568 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047668394 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.266794379 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790845906 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.868776614 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.07336843 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.487544002 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.985583322 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998634845 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301808189 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989637537 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23334137 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.746807882 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.770423971 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978368545 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.987735964 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.14276796 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950052211 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.483756524 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.782117605 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119792672 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837424619 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.140172191 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961952514 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.864534204 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778045496 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852582944 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77665941 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.781282477 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.780753884 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78224294 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.141688356 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896684013 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.784963855 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848721351 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801483672 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.340311462 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.781100905 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043433694 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128376562 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.105017742 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839590592 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.773972525 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783026518 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699965617 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905378119 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.212919793 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044787406 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.89505785 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.904362163 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793382041 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.079020928 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.002368324 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078731518 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046219107 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.657470703 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372856608 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.888848632 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.991003284 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78036366 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.977154896 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993606359 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084752402 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337113166 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.877882836 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960276107 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046880254 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.131793977 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.773514809 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35824471 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.789401502 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177394796 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.814103669 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.147440564 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035097173 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779502539 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89553259 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.777640592 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.973861514 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.22605977 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.422615566 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123841897 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637473979 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.778614288 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049712123 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106108135 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084044878 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853252829 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781638604 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.466884566 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910780909 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.668719888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.993299141 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.777757895 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979306949 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.487150198 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.778237523 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048642166 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08507026 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.77773352 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.688075385 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810878401 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.780415299 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991359399 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99484898 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028096762 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779964696 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.779834432 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.583866333 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050945308 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840143004 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703985377 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.779607426 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822572845 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.003505349 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795639886 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.292727215 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.479777902 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062826142 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.688956052 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795813061 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.155184709 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150986572 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112510475 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.300941343 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998725109 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.334399474 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.598491136 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150397688 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.780560542 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.154277265 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151864172 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.779927031 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.247715992 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883189225 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.047030337 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107429333 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.791766823 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478986852 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.811021815 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993028533 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131369998 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70961258 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78331342 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.827367019 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.779658986 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.78090087 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788108007 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.724241901 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.230902027 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.612589011 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336458548 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.781606691 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.93073222 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.134029005 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28494415 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878811197 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795815704 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788820599 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.474393774 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.064130696 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022468111 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.248557668 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.868118652 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.78079144 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780438062 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698488816 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.962584505 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.965282857 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070004431 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.091158054 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.883544738 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78080207 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.987027537 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98263432 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.160072958 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913235518 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.872589447 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889444185 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.721572479 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.485556125 seconds)
  done (took 1611.528065477 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.799628595 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.80229343 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.796499811 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.809558097 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.804711235 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.800460518 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.798520899 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.798335036 seconds)
  done (took 56.121388638 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.780059186 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.939686291 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.784813071 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.781058232 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.785564341 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.781007455 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.944358473 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.79467262 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.784331973 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.784744196 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.780145768 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.779934093 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.069460195 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.799850448 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.781592194 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.784789614 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.252089766 seconds)
  done (took 73.133890504 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.84283625 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.847945544 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.850635058 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.782584995 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.858912459 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.784604759 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.876560887 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.808770625 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.786938134 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.040705035 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.080141583 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.812629652 seconds)
  done (took 89.088799094 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.794404456 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.784660272 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.784615509 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.785976554 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.784202175 seconds)
  done (took 10.657026147 seconds)
done (took 2103.351238809 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.042655801 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.981031096 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.031146734 seconds)
  done (took 5.727755696 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.925636669 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.976019407 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.089761586 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.096996391 seconds)
  done (took 9.809312064 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.088542548 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.173413729 seconds)
  done (took 5.978506875 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.106050656 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.813285185 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.19743817 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.789013071 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.791710782 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.794702201 seconds)
  done (took 22.097893189 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.789344179 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.789740714 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.787396956 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.788195091 seconds)
  done (took 8.873022205 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.784973008 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.479278257 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.785568506 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.797130867 seconds)
  done (took 20.565387841 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.935760063 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.904907181 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.930579335 seconds)
  done (took 7.48933219 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.92856358 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.015765634 seconds)
  done (took 6.662325916 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.948174716 seconds)
  done (took 3.665710883 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.817887346 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.058921638 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.274128704 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.307867484 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.374386682 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.667802083 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.108958757 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.009783179 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.228539857 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.24707384 seconds)
  done (took 23.813630163 seconds)
done (took 129.558430933 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.13121582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.816112364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.993190322 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.137470831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.02528314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.990089285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.002134971 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.128971721 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.823177034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.809276813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.141229991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.02337262 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.958090596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.808272614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.967287215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.808640564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.016686164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.153027353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.825448678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.070276955 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.013194995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.786520248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.980091645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.801938032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.023081453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.943463194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.331775693 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.815161029 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.95974391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.343046657 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947280059 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.205914286 seconds)
  done (took 165.499541766 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.790240615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.788638236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.787557672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.788652262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.308674936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.789791351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.790402614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.788237757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.227171156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.226125431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.790335481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.30990035 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.791025615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.789051939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.788455419 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.788413186 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.424668417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.788811176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.788691971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.787260642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.789722308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.136104975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.792244677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.140374824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.396120695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.790213485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.789373925 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.790666398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.788750327 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.787439366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.78923224 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.787808819 seconds)
  done (took 206.83578715 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.690883245 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.791644217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.7891325 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.789567569 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.790716551 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.792801581 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.791231697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.789121964 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.563396587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.55564392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.790888795 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.792090675 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.793376727 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.791384844 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.789717851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.789099617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.789591394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.746760008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.790954657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.791040213 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.79129375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.395238045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.791462664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.376626894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.791495087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.793973471 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.793865227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.79060379 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.790721417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.792496104 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.790763324 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.790280066 seconds)
  done (took 217.619920101 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.0357679 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.794376129 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.79548125 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.720917657 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.793464283 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.794083075 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.781059575 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.03938994 seconds)
  done (took 18.477915017 seconds)
done (took 610.159567896 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.17627739 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.017853244 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.97155161 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.817137307 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.075602852 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.858537661 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.814374891 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.881353647 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.62969845 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.88603827 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.473976822 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.835686348 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.569198186 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.842685304 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.935512821 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.876200755 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.366850767 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.465883901 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.990525112 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.892263319 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.988686636 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.732805939 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.897337401 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.660757187 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.591366285 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.773140715 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.824141544 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.36906996 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.825180884 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.971165575 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.453332269 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.068546383 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.828132256 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.81110668 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.872744403 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.844732155 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.009561683 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.825355951 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.939666409 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.528913918 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.895012179 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.527912298 seconds)
  done (took 99.343070256 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.80835376 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.803120965 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.805104086 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.803617725 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.813475395 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.80323695 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.802963957 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.80376338 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.804899046 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.803228465 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.80371242 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.811347688 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.805749573 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.81315188 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.804169059 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.803868914 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.803444898 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.813310628 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.804300853 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.804717161 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.803626003 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.802931006 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.794766353 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.804243044 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.805225951 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.803983918 seconds)
  done (took 48.673609981 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.797846909 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.954155243 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.037589552 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.814924325 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.794889848 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.798752744 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.812930015 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.803391721 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.798938975 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.798840118 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.899159592 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.804682974 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.813427745 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.040766075 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.812966781 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.797797482 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.800080709 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.797134186 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.961192081 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813215377 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.816037233 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.804219561 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.8152886 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.809791358 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.799305113 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.796431065 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.801103798 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.238712107 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.804810574 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.901000667 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.841929044 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.822277076 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.174255086 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.048479338 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.853291595 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.808804272 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.799104372 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.905270512 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.805358902 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.797235018 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.815177503 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.803922729 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.038545683 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.318028811 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.811657835 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.799427446 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.247837284 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.912973902 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.838137784 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.808245637 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.042905788 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.815846773 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.801239587 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.797941998 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.833531282 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.805329208 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.797929106 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.100783648 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.809710804 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.815869879 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.806025046 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.798669686 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.964084291 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.807407563 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.953836542 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.808563924 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.804740488 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.799167588 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.041129083 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.815227276 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.322425373 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.812338715 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.801597156 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.90177916 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.95814827 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.274015612 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.812105328 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.965031357 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.190705038 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.822903912 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.807571398 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.23020632 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.826611014 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.806314077 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.80423845 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.802832888 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.802297271 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.845678878 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.815354971 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.246953217 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.325807833 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.120274041 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.825688241 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.815739317 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.800863368 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.104284276 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.812271565 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.801257795 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.034124759 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.330974581 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.813846064 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.806820241 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.308594699 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.815363191 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.817799189 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.806832421 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.048742234 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.816031666 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.844328034 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.803518941 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.806525548 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.801695371 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.819339177 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.807084876 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.80307057 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.300662833 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.923414728 seconds)
  done (took 223.70312992 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.799578927 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.803664846 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.799476098 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.804815173 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.799495634 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.799834322 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.798708524 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.799741719 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.801181476 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.799489681 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.800414007 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.800776648 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.799130455 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.805811223 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.807160408 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.80211174 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.400519227 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.799263718 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.801689245 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.799713253 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.442874318 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.804289838 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.800962053 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.800125481 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.799925921 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.803173227 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.808529757 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.804064202 seconds)
  done (took 165.421990714 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.804125263 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.913715057 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.826233643 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.831013877 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.811041154 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.803621728 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.899479286 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.819320123 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.808917646 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.803889261 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.80503785 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.862363274 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.815886389 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.901782798 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.833773648 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.911475918 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.905117453 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.811202909 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.805802308 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.804976091 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.831245843 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.811534866 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.862858479 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.92794749 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.823198569 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.914981884 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.822716796 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.806243155 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.802131715 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.915316228 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.824262414 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.866680097 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.836286665 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.822366428 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.921298936 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.920708683 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.910815682 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.910297212 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.808588642 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.807156431 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.806277234 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.805017628 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.916992587 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.825478993 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.80599334 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.92028658 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.825439221 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.806549686 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.806934558 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.807215291 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.816003495 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.821897815 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.868598767 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.935741915 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.842208268 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.829925136 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.900538181 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.928045701 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.807745793 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.901328075 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.812488574 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.922173038 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.828221828 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.807681285 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.809565211 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.811649151 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.836739176 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.912352831 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.908928182 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.811772613 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.901638147 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.843131989 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.815014852 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.808148723 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.80789449 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.918025967 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.91957952 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.842853194 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.842210555 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.835696092 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.815954501 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.804592088 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.807985768 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.82250922 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.814122738 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.921560945 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.920393683 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.815014235 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.809692037 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.809279664 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.81100257 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.830393165 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.926684208 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.841313739 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.911405382 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.871749386 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.880641384 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.82486393 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.824086084 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.814110937 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.868659827 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.824476229 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.821845402 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.099522742 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.86641225 seconds)
  done (took 195.995684413 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.171100542 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.8537721 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.861641052 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.128635855 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.162654919 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.691367014 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.850974296 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.854419 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.878612194 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.039585965 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.929468158 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.871303689 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.840003479 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.82782302 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.855214422 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.877702388 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.867230514 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.210705254 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.067333567 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.973049794 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.842056289 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.133681769 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.170263871 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.430707402 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.902469912 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.240687387 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.427339609 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.987883555 seconds)
  done (took 59.692596036 seconds)
done (took 794.55453656 seconds)
SAVING RESULT...
DONE!
