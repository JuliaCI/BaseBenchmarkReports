cset: moving following pidspec: 8236
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.822224836 seconds)
loading group "shootout"... done (took 1.208219495 seconds)
loading group "string"... done (took 0.421346216 seconds)
loading group "linalg"... done (took 8.263216009 seconds)
loading group "parallel"... done (took 0.161135614 seconds)
loading group "find"... done (took 1.391527174 seconds)
loading group "tuple"... done (took 2.012686465 seconds)
loading group "union"... done (took 13.095880514 seconds)
loading group "dates"... done (took 1.410273417 seconds)
loading group "micro"... done (took 0.211064862 seconds)
loading group "simd"... done (took 4.581269094 seconds)
loading group "io"... done (took 1.026617492 seconds)
loading group "random"... done (took 8.965416606 seconds)
loading group "problem"... done (took 1.567039415 seconds)
loading group "array"... done (took 20.388144962 seconds)
loading group "misc"... done (took 1.539094602 seconds)
loading group "scalar"... done (took 41.474754196 seconds)
loading group "sort"... done (took 3.307860987 seconds)
loading group "sparse"... done (took 12.179823596 seconds)
loading group "collection"... done (took 17.919754002 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525558993 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122421034 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127090186 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119813806 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.181137057 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118346716 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12595395 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083651481 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.831275321 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141795812 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113399947 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428453584 seconds)
done (took 5.265875426 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.16837289 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093924909 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083383688 seconds)
  done (took 1.307065567 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065615624 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.136017048 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066204927 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066282884 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066556202 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065765139 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06567254 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066079545 seconds)
  done (took 1.662400539 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072452834 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06743986 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065182339 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067168205 seconds)
  done (took 1.406072132 seconds)
done (took 5.757460786 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.243147285 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.10191863 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.291191705 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.44264846 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.605254555 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.093628057 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073411382 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06911397 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126045707 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324334853 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101641537 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178718371 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088919151 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.169234147 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.000549539 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119769825 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086492763 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.124902912 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095121209 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130597707 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.386562634 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076521633 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074722555 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070728314 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067703353 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.639379493 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.646258581 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.122849625 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084060667 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160802712 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115161459 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.645822728 seconds)
  done (took 10.724029055 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094050745 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.090958404 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068942625 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123421722 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093898809 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070123874 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07510025 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06776399 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088949884 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1242026 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090218699 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09839913 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066478697 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068874909 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.07423158 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196819008 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078958786 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079955618 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067412882 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080756116 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106311629 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077564889 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078691766 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078392306 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129551018 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169784115 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095386309 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09726296 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071582118 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082242115 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11555046 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12606788 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067127072 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06498779 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119224508 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09561376 seconds)
  done (took 4.55659321 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.97639202 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.094838066 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100821561 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.630600418 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065568921 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.152391002 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241585207 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073119124 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.35014252 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.149778135 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.141734116 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147896014 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117199077 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068492913 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.242757966 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115179003 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.528937244 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068053013 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067312057 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06612278 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068011752 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067458475 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06404422 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069700898 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095843101 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088499198 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.152942531 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.955921644 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.288503878 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069383514 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.159575897 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083884013 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.354050116 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068126232 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080845374 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.444022526 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122007282 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08312105 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063775106 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168754197 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115040832 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063596738 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062980481 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.120436713 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078834804 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069429596 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069662684 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068033956 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071165466 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079471667 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101517799 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068619155 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065630224 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172669332 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065846142 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066231576 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06714111 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149343383 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065123404 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064656925 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.14227966 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06463716 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069088858 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.102270773 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068859838 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087330404 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.095046126 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.332663533 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.066196797 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066811919 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.211283839 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075569241 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067390384 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070894303 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067137812 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067681837 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06804477 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.072471677 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070880996 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069696242 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109664585 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067243299 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.07059065 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067598651 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072315439 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097820378 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066437527 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.497829652 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096311729 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064976054 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074146487 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105868243 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06606872 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069705132 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067881588 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067166422 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066480842 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067350172 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069363159 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064687721 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096752025 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070016539 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112997063 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.157862274 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068746099 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066986001 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.075506143 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069980657 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070044438 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068213692 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069402795 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06845568 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065653943 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.107545905 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067908374 seconds)
  done (took 22.089981262 seconds)
done (took 39.479216088 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.330377789 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.0789428 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079043082 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078924424 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07875667 seconds)
  done (took 1.879993657 seconds)
done (took 3.105240238 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.109266768 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063768879 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.10028591 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099593329 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063752175 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064024925 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.099239774 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064336089 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098759044 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100326218 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101861391 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101296837 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064072275 seconds)
  done (took 2.363199284 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070241967 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081830655 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08326128 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062101619 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071398693 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081869664 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06200926 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080989733 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087598971 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081575155 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081692556 seconds)
  done (took 2.064489872 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.072271395 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.08194294 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083567843 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061981274 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073346131 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081829594 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061792493 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081162411 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084280491 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08196642 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081577645 seconds)
  done (took 2.055816115 seconds)
done (took 7.699118236 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066852963 seconds)
  done (took 1.259212563 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.522205443 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.167385012 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066460245 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083524832 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188773259 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.09017905 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.193062525 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068978435 seconds)
  done (took 7.748518186 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102435054 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068389488 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068548728 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067381051 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068752905 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067607124 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069010011 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069506634 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068087349 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067454551 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068166672 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069429428 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069272614 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06886618 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067886858 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067384695 seconds)
  done (took 2.427780457 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098867296 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098145979 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072111555 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072599676 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070803311 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070224061 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072768712 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072327974 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069455911 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070924973 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072422811 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071538509 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07064617 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061852346 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072128943 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073391772 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069484183 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072041876 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072877765 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073624711 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072674535 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062179661 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070359822 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071662846 seconds)
  done (took 3.079895673 seconds)
done (took 15.726377935 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.173716974 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074125261 seconds)
  done (took 1.449361893 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068370117 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068843401 seconds)
  done (took 1.35750155 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073454626 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060453573 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.077728088 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069618714 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061152632 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060654339 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076933739 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06174494 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061185539 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061311167 seconds)
  done (took 1.885102938 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063925709 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068653754 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066759607 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067996578 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066738022 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06207588 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064737846 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062355789 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068637733 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061088931 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065547291 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08190982 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065118501 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082738654 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064798414 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066417222 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066929439 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065047718 seconds)
  done (took 2.434278952 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061876704 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061995762 seconds)
  done (took 1.354944965 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064687457 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061661772 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064055939 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063767034 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061253305 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060947769 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061483858 seconds)
  done (took 1.660158992 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.419245758 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121787898 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338153393 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068672921 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076948448 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252289485 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062564637 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067203765 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067867642 seconds)
  done (took 2.741152714 seconds)
done (took 14.116199627 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082677224 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.178171673 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.091368047 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.530561716 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091746655 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067028921 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112256014 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.166974056 seconds)
done (took 2.568300576 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.230163437 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.319416022 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.781960326 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064998799 seconds)
  done (took 3.397864066 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334990913 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079368715 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078353167 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067800122 seconds)
  done (took 1.805392182 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066129857 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071878327 seconds)
  done (took 1.376129779 seconds)
done (took 8.053949062 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06536513 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063600046 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063925013 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063419868 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06380837 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063900765 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063896795 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091694708 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063487719 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.063304929 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.063763412 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063903905 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064463353 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063811099 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063570404 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063388936 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06377064 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063811754 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064021622 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063893799 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064000535 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063621894 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063785282 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064240814 seconds)
  done (took 2.82521481 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080184285 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066106768 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066821256 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066748461 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066852892 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067394665 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06704859 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065356101 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066665676 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065281808 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066874518 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067744362 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065291117 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067413853 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065185582 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066947848 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06671477 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066055367 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065874043 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067135151 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066898052 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066443607 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066693888 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06639157 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066580564 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066723317 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065596096 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065910996 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066737813 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067115901 seconds)
  done (took 3.261767585 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068083367 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060331116 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061124502 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079746214 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060198333 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061036918 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06110233 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059713509 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059944521 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061097809 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060600453 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059800178 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060525786 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059757768 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060068959 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060670318 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064794649 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078863369 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059937674 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059648639 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064792315 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059845637 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059896338 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059896987 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060379283 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059401075 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059419146 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059870629 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059702449 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060298342 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060460342 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064238971 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065273678 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060044333 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070282596 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06496666 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060339191 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064520106 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061669629 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059718629 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059756868 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060271856 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060227409 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059974882 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.0700666 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060448674 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060899516 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060505871 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059958499 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.060220571 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060134854 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061527196 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065769538 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061197343 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060011088 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061163236 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059430153 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060681667 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.05974072 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059397076 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060074576 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063768915 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061410269 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0606964 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079457077 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060847328 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069553371 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059766007 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060136805 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063073668 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060543136 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07695911 seconds)
  done (took 5.739812884 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084686798 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086135622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065418728 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064678303 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060657352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06054775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067771032 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060092639 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065054744 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080931343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060222801 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064683826 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064627913 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064370112 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060528421 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06520071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068486849 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060746584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060222991 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064543917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06052752 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067567988 seconds)
  done (took 2.720404363 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13981179 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066317097 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105661175 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074000926 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068209001 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074014089 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065478556 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066115148 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065754599 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066150375 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066522282 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066242628 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068407621 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066391692 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067000336 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066598723 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066019815 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06671119 seconds)
  done (took 2.582348123 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077026568 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065764458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086731419 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066325413 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065440489 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065437851 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068758265 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06951423 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065109296 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065873295 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070037483 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065073644 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064930201 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065266072 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064709521 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065714618 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065409089 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065791814 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069442635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068731025 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068942232 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069474909 seconds)
  done (took 2.757255464 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076877841 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064428806 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079698568 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066454133 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060257006 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06040566 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065436826 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065048375 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06533627 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06456673 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064837828 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06027099 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066339657 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064857344 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066899982 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064569229 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064433011 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065232855 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064642337 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059896811 seconds)
  done (took 2.569684977 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086615216 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062538671 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062494183 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082035348 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062955535 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06346024 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081707088 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062622602 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062989612 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084522721 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063002413 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062715368 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081828648 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082246707 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06295922 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082273532 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082390306 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082016036 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063301666 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062942024 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084737405 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063649792 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082436015 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06286314 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063413336 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063345837 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063233289 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0827613 seconds)
  done (took 3.265171632 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065209121 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063782866 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064330747 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06360593 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063938808 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063879954 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063875235 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063919468 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063819865 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064136076 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063821723 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063257792 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063621635 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063319412 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063371008 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06326754 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063003661 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06378974 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064161391 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064084135 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063265273 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063565077 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063450455 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063721883 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063924772 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063435441 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063595641 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06372533 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063710196 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063928931 seconds)
  done (took 3.178769189 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074441738 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071969947 seconds)
  done (took 1.41361849 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062788115 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077688233 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059688009 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072460696 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068748649 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064448411 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068648935 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068812526 seconds)
  done (took 1.803302367 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066902658 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.090813872 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062207026 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062349229 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065228769 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121858626 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074485155 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073506318 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075294632 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064921855 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.06236175 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07351378 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.064137093 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074519213 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062968731 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070609681 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069109573 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074163036 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074093812 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060566154 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074260988 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062408808 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060720268 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06242423 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061560703 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068583309 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076880084 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073726855 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070551816 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059411672 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080133211 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060669842 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061469263 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070423002 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064937378 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060760915 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097076771 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.0612531 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065596668 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060370639 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072540734 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081316006 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075140342 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.079081005 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062354594 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063125421 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060111999 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062834833 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064857513 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069768831 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061025752 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068400592 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059850717 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061740064 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071299981 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061187849 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066035617 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069747395 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074419923 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071122062 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069542632 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076027921 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069166208 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068562678 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061457935 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080271464 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062457353 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074014015 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075418921 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061616027 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073964294 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060070657 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059536847 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060423544 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093154949 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062433558 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061091411 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060169539 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060582286 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061978457 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07013634 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065403616 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068519032 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063769649 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07634931 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069416334 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060419478 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066939079 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078174728 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063689115 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060271426 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076830545 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063702411 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060136713 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077710701 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069705059 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062566546 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061819603 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063979717 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074105219 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061566777 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059325335 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06890723 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061966631 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062944776 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064920029 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068586032 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060276453 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070714882 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065440095 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061627086 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058787699 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063938027 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061017791 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058340509 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069299439 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059649029 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073596383 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066299124 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073623114 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07406297 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070316695 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075654 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059861295 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058562371 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077241761 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069608328 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060989925 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077654607 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059328019 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0702696 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.193222078 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.063291638 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.071857454 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061850268 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064353444 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061901398 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066504962 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.06356215 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063642767 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065837162 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069656268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073642265 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062184462 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06966717 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061487473 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076749317 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071046138 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065874903 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064376395 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061342177 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073016585 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068772635 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070495475 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060611087 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061574966 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060857266 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071811064 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070451161 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062996707 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068317447 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065751497 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.062101824 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061180512 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.06229845 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064772321 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064091728 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061898829 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069324369 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069757024 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075209687 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06834218 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070441698 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060372201 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060593554 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06594975 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060310628 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065551059 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070462219 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076771065 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07245739 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081225088 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060807473 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070331768 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062147277 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077360507 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07399444 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061990757 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065528973 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059791553 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06213188 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07017036 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072206962 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074578554 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075882076 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065995423 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065401228 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060804875 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075295008 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061316963 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069490739 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070528887 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065540363 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061584941 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062085819 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069710757 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065790917 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060711758 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076503128 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06669777 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060735145 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074806057 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061836652 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071642178 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060425968 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064551419 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066249576 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062881193 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070302552 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076261514 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059879191 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061491904 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076511347 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062761814 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062530963 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06927141 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076132829 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065769013 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068804992 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071208206 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071027241 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065174426 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070250464 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061574264 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070080445 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063626161 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072931055 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060923253 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078799459 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05982495 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.075849489 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061487904 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071844476 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06117417 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070542464 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061314547 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077116028 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062355858 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061433725 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071907155 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05900711 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06925221 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059629898 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065109375 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067044976 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069642757 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062000938 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069017872 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061505949 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068664909 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065404785 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068451383 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.06939732 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065368789 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059814502 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068850154 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070917407 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068585001 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.2004084 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.064371946 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064213879 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072990568 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064003813 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063853243 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070964062 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06718327 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068342112 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063002178 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063339899 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062879603 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070034035 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071282365 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07986411 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070050477 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068875474 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07148342 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060472184 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077580219 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061567603 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06915605 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060646249 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06724437 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070454708 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060705743 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080339191 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062554802 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068900899 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07373052 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069783942 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064780894 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079059814 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.065204498 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070066934 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069661338 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065334456 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068125287 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063129286 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070298342 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071626917 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071609422 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061977646 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068493978 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070323143 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062778863 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068549608 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062990956 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06956063 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062945415 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060144915 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065913754 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072888638 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065791837 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066544097 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061606758 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.05998267 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061086594 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067736535 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065598918 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069474041 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07612739 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059986632 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061793637 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060866509 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064504722 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078986131 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071267896 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069139242 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066028174 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063247285 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062915225 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062692578 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.062097312 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064825078 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060131488 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06105325 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071636147 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063128406 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065273727 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061029721 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061886207 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070684287 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065475367 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061565696 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067803157 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060671902 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066308303 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060483446 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062562619 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065880853 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060487332 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064736574 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.071513553 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077590248 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067920105 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069778332 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062172076 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069243295 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076352281 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067927 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062193666 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071038962 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060545039 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078927198 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.0706981 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069870066 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070751733 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061912111 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077350734 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065248481 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070473006 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075909171 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061681684 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066767496 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060397955 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076339158 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065533825 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060670852 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068166258 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068356382 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065888799 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071401906 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060686009 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067668728 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065136028 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063626652 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061283692 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061176876 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068871261 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075569725 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060351999 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063540914 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068671549 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068579862 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064761217 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.214568343 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069798086 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062843254 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064291732 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06597326 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063256557 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073681242 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062115943 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066388552 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066547938 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062461242 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06814742 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07821987 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071800225 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071487898 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061393899 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060902949 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078846465 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065027155 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065670731 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069399887 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071153074 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073313447 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071159343 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078494788 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062216394 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067108898 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073453039 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062527031 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061318202 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065235485 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062888414 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070324181 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071647432 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069050447 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062968108 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068396982 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074487653 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062487617 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066167112 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065991257 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062246792 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071447418 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069352145 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069743514 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062413787 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06091723 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064801396 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070324026 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068878691 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070760753 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061929031 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067402469 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.075117279 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069023063 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064431397 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060864754 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064336862 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070570391 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065161168 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060651473 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065709265 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06494291 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067775684 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070743737 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065228913 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061160229 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077576672 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069718595 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070166702 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062471281 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063088046 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061672168 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061069886 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072096905 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060838162 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062707004 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06585573 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063062144 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078739962 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069565215 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07746299 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062302433 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065636806 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060706083 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070606997 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066006539 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061389729 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073577027 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060355118 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076753335 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073016618 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066372828 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060795293 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066124807 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069018621 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078531589 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070635942 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070088881 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064503182 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070476849 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062776239 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072054738 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061291739 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060232988 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071019025 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069817164 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07355559 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061118558 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070993103 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.063011498 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069128808 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069022804 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062430047 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063103965 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062511788 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07037536 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065962074 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070175009 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065587059 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077123256 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061860527 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071217907 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070025746 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071375582 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07477446 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072287503 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06839852 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061131552 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068191394 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068394516 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061612154 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065633565 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063397195 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081244591 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062087312 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061583209 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.214874182 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067662631 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061950874 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068709263 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067183056 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.07284416 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.081974129 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.072617319 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066066892 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062375192 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066445232 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066182004 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060464961 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06119606 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061465482 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07104259 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06595367 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061578764 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080253291 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063294208 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070093406 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072598601 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067874574 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062651579 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060071704 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062199863 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07513619 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076757012 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065852004 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070527767 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063280514 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071499676 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060432833 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070078011 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069547611 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069735373 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061204573 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061795495 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076703007 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076722612 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066827106 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07086834 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070184325 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062808231 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082976498 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070385449 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062242006 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.072436896 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063657488 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060692963 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060522894 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062447743 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072270982 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060894442 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063536738 seconds)
  done (took 41.954097226 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09962484 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06193093 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061170933 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061023859 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071782503 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061636866 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061049395 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061843073 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062444509 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063776988 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061011757 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061295986 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071808701 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074375558 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071463951 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064631408 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061204884 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062480269 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061268563 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062260871 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070796377 seconds)
  done (took 2.770258452 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068871911 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07622969 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072348638 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077057283 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068698375 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065342873 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072012525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065064866 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072637051 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070424188 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072000619 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064670095 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070246019 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070511074 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07051709 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064769275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072495198 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068666356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064505713 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071869339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064822955 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072274051 seconds)
  done (took 2.897221218 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063348481 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061167055 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070409606 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060629629 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060604935 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063897888 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060105262 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064980158 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065571631 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064780487 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070053118 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061294253 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060514608 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066519048 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.06023502 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061627155 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102960192 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061592079 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061543263 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060419061 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063411418 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069826519 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060486984 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060891863 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068544646 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064076474 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060531072 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062873825 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061322264 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065030894 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061430807 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060279185 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070081993 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069020509 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065105427 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065294962 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062022853 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061601382 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06105427 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061215094 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069381693 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061967994 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.061020265 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062080423 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069265027 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060604367 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060459284 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069640744 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060350565 seconds)
  done (took 4.516502153 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07177146 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11219791 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066636098 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092849911 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073315601 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066424802 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066754559 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095940423 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061958726 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062835364 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07422217 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074007357 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063986833 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065266959 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066234654 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06380892 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064177519 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062853796 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066556399 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063026183 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066196672 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067643587 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073014727 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073671448 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0645752 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062936319 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063352353 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064484259 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073851311 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067128591 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06505123 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06557034 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073936979 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068273767 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063189014 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063051528 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074249234 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063533279 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063369647 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061797732 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062988972 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064877606 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067637369 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074555693 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063629049 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068334441 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064049617 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061672176 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073775515 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063477647 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067826348 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07494255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06460269 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064034071 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064921359 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074282239 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064067678 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062792558 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063844528 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073675147 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062271243 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064507775 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074388193 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063320013 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066781914 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074854846 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068687563 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064479606 seconds)
  done (took 6.133808153 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071566307 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094766442 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072448025 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072003603 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071526935 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071455585 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071410672 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071637998 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071170836 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072015079 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071400573 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110620492 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067701069 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075110924 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071171689 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07133991 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07131763 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071419801 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071203327 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070855857 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071441078 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071953229 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070870445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071611469 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073615573 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067917136 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071059882 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070858715 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072059955 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071127622 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074175963 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071030715 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070990012 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071588712 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073998896 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071115794 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061457826 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0711131 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071321705 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071433864 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067475884 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071630333 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071151289 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067544449 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071840867 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070801601 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071837838 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073690004 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077837641 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071770949 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071547706 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072219903 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071577326 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071361655 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070739044 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076755842 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070384829 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070507558 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070239716 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070546001 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070617801 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075973318 seconds)
  done (took 5.889872221 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075473469 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068084815 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079630879 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061238994 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060699113 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070130218 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060719144 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062680705 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070371755 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067740281 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069053977 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070771944 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072406015 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069320478 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070222603 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071682337 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07014895 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069926461 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067340165 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068903651 seconds)
  done (took 2.768017048 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07669869 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079825604 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066984916 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069908719 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066711329 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070023496 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065978816 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0664903 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066976323 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067062076 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071203745 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071681121 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067212333 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070520354 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071285911 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069760379 seconds)
  done (took 2.496947129 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.068440559 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067996537 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067688518 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062726171 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065797695 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061362907 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061730152 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060284947 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061010532 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074914503 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062028465 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073902525 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061882219 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06066373 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.0620966 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067425645 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061118149 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061853955 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061471717 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066001695 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068264681 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062877355 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065773266 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06170621 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066886114 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068607861 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062936271 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065543433 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061684668 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062198163 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06749814 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06836652 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061859084 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062278319 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061292238 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061883496 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062323073 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062517551 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067245718 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061434472 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060294045 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066936689 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061693665 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062913965 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061137798 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062151854 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061232544 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067636784 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062111286 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067129723 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062127691 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063675847 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061888986 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068638339 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064415763 seconds)
  done (took 4.907777321 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078520368 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066526332 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061024918 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060675788 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065697595 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066950698 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067619052 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066363936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066746499 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061015859 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06701764 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065605749 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066805395 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065972073 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066737036 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066599486 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060439588 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066160159 seconds)
  done (took 2.581456936 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073100435 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065784396 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070731322 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065958502 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066058324 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066401234 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061428042 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061023048 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060729214 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066103098 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066060607 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065340854 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06138173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065338954 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065771107 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06552814 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06511876 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061301257 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066011608 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060786083 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065190978 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060915299 seconds)
  done (took 2.812878568 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.089288879 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084731517 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.127273534 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079931558 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088729678 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07270168 seconds)
  done (took 1.930527704 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094562671 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103456513 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06616426 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065453838 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074592135 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069221567 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068715634 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069016463 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073797479 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072667275 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068813231 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074515943 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074324529 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07045743 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074542033 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076344856 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06953056 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068779515 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065812252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076565657 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069014364 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074647084 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069032432 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068643596 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069345641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070966867 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076468911 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072557898 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068833696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074288625 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076541449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069220845 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074315085 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075726347 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065922988 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0746115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069235273 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076766549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074535329 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071361649 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065828114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074464443 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074768789 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07070844 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076939696 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069430446 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070893587 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069409888 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069874135 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079436997 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075303934 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071115045 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074934111 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077424411 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077359925 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079680302 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073427832 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070993824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075205343 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072972757 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07067862 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074383848 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071561396 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073320653 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076999712 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070609303 seconds)
  done (took 6.22055309 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101511415 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066784851 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069551495 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073741599 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071292412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069145206 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06924304 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069085454 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069310419 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066771038 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104244786 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069309915 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071124162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071508948 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069755082 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06957694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069412868 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071006456 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066410208 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078845087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068988074 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070794474 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070488813 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071077421 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072980682 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076954512 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06944329 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068784344 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069359682 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069129997 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071143344 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069073834 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070477339 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066491128 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070489903 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068800164 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068809721 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070549781 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0691329 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074149463 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070760232 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077752334 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069507483 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069335543 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072992189 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068788333 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069125947 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066601534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069330404 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066465601 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072936974 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073110653 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073199804 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071347259 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069232007 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069273147 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069671022 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06949973 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069561598 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077203711 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071162603 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068869001 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078964607 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069127101 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06918333 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071143844 seconds)
  done (took 6.134387424 seconds)
done (took 127.373325975 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213236082 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182275184 seconds)
  done (took 1.770467971 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075423533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097864574 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075799169 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135221888 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07078158 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104561456 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103775575 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074218136 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070636794 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070516399 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070594953 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074271338 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137434159 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070318677 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070643704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074907527 seconds)
  done (took 2.77265776 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108800326 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.186406836 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115083966 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070211262 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108240599 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077449023 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070466286 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08167982 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073898501 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081968451 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076887021 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075527036 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072053803 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075492389 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073968447 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076736993 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071799043 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076719872 seconds)
  done (took 2.976583107 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098299184 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.086128698 seconds)
  done (took 1.591341243 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156195116 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10378904 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141836637 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319056853 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127521927 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.1244518 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127329996 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.122711324 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.109387789 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119717726 seconds)
  done (took 2.849893919 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10654348 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175007277 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311245215 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12168269 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076782494 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098989754 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123746935 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082963098 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080580214 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080214842 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080208356 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077153744 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101623696 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075715001 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075446742 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079684813 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103159605 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0736058 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075205267 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076351061 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106647364 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070699038 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07627689 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074840758 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078072446 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078243347 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072115268 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071093556 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076352859 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075704527 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078488406 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096398646 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078057927 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099355503 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074824692 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100357238 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074812246 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074221293 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075461977 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074123288 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07694375 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077044865 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080448543 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077096102 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072301914 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074681689 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072551734 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070666614 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078812515 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07144791 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078635603 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078671634 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.09902206 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071433495 seconds)
  done (took 6.178966336 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109259178 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104549487 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069897343 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111355766 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103707411 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06910022 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103262562 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09864638 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106898281 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068576974 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067680838 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067893111 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074710838 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.07768437 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113978645 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106060724 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069780814 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068824356 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105708232 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105497541 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067429553 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099911529 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098621376 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104332143 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066981517 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068262534 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066894235 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067462831 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072210575 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073696075 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067413343 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073845081 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.078775387 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073582324 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066529307 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067191608 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067307055 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076372591 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07676893 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076639167 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075223361 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068227733 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068960556 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06903048 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069464882 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06831356 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075120691 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076142188 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07459077 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067174131 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067751614 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06686351 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067468407 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073428512 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073294531 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074543467 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073998157 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067649108 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067301951 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068689392 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075281218 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074606922 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074088513 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068404367 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075289858 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067354829 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075839189 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079183619 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067490497 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068458684 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06891697 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069056471 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069205877 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075036684 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074973897 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069738841 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069096519 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067424261 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076254966 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072730069 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067177328 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072216649 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066811254 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068613534 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069567325 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068789044 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073644099 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074136682 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06819485 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067066133 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067553485 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067216228 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066446369 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071919609 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073552759 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073550957 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072677762 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067191544 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073742762 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073118203 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067382434 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072052603 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066064188 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066506352 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066599107 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071686396 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070831974 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073400707 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066341449 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06597142 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071299256 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073666736 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065820126 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071361874 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073567346 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.206042426 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068514547 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077330331 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068538692 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075566941 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068985092 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07569167 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071334722 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073926273 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067875682 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066993523 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067598683 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07376789 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069898476 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070038415 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069825671 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069252583 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075861511 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079556031 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070278462 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076078848 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075466468 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07015092 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075683681 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069665586 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077217528 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069975492 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070055784 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068615049 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078823937 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069769837 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068877217 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069716885 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077996014 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069885411 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076854934 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074557332 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068628787 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079957101 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076145379 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073092883 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075688927 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068719504 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067491212 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067426061 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069247513 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075404043 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076065012 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070165936 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069057381 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074926279 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077132466 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068457693 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075056066 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07497311 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075567205 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069653328 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069119414 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078898415 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078161563 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075408522 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07402617 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075015697 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067275241 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072830695 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073595733 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067306261 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079546584 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067432849 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077543635 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075395691 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074628259 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075855067 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077512935 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077978091 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078011369 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077966577 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067089484 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069206876 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075165096 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068998685 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069374889 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07570436 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069798415 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069379471 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08076703 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067932608 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07639179 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067288785 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076247446 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068834105 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069795281 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080875959 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069626191 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0695023 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075141455 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069257203 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074795208 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078621156 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072931462 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067170077 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068947619 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075955512 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075163449 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068166666 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068259978 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068991109 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072305032 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.070982275 seconds)
  done (took 18.09866772 seconds)
done (took 37.656727847 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.221801243 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168170787 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199667143 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113832036 seconds)
  done (took 2.212617877 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.092999218 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099501173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.075590199 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065268297 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.080010625 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064245772 seconds)
  done (took 1.926946874 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256515705 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.186847254 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169651074 seconds)
  done (took 2.053996274 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218865985 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19351489 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.716078611 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300905462 seconds)
  done (took 2.977633465 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130005352 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078035282 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063770424 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.074061007 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.103540305 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.132462189 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.085847713 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.107754897 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075359409 seconds)
  done (took 2.359843336 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.129723789 seconds)
done (took 13.133200722 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106284197 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.236929392 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.205596355 seconds)
    (4/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.2770199 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.165856527 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074732053 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081254427 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09269633 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092486248 seconds)
    (10/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07689248 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.229078985 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080959388 seconds)
    (13/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073869552 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.121815153 seconds)
    (15/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.201622616 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094579378 seconds)
    (17/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.074269381 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074194556 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076585641 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.178288804 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.204452848 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089628598 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073640112 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089472812 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.174850568 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.198056173 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072895392 seconds)
    (28/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.076841863 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072172522 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.097841795 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.203422402 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074816269 seconds)
    (33/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073668304 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071274402 seconds)
    (35/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.201325075 seconds)
    (36/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07278411 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065413678 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072273782 seconds)
    (39/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.229960039 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071836269 seconds)
    (41/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064971474 seconds)
    (42/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067355942 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073898512 seconds)
    (44/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104977809 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126783712 seconds)
    (46/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.138024984 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157860095 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07306471 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.14376149 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063273186 seconds)
    (51/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.147277926 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.181817827 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086650984 seconds)
    (54/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.165243954 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069314207 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.174968625 seconds)
    (57/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.083944976 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.146384097 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120215091 seconds)
    (60/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.169924053 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075169404 seconds)
    (62/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.16853033 seconds)
    (63/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065138818 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156670482 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 0.065935003 seconds)
    (66/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.212372896 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.226507714 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073720011 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08773677 seconds)
    (70/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072573744 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.223432491 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.160430498 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074429214 seconds)
    (74/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.08486433 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063486972 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07288633 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155157986 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.063183841 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073566044 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061503379 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.183540094 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063741422 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129141288 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071333118 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.310308549 seconds)
    (86/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066262042 seconds)
    (87/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.076537364 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070638714 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068113599 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.090692495 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065989477 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07643572 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.227832369 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180637179 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073476135 seconds)
    (96/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064956435 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063875673 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064188731 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.228928147 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067036495 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065458811 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065238422 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.190085224 seconds)
    (104/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.065627349 seconds)
    (105/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.074194656 seconds)
    (106/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.095684764 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07743062 seconds)
    (108/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.198343234 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144546048 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160044214 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07242358 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06583233 seconds)
    (113/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073642221 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064302096 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063959469 seconds)
    (116/309) benchmarking ("sort", Float64, false)...
    done (took 0.136707651 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063644842 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073349435 seconds)
    (119/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.193455324 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065788608 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.141686056 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072391209 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140755765 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089697756 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.063882307 seconds)
    (126/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064961004 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076521051 seconds)
    (128/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071276111 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065717244 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156316908 seconds)
    (131/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.06396528 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074677998 seconds)
    (133/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.143294842 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072781412 seconds)
    (135/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.064851537 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064911639 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148785449 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068383682 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065635318 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065381661 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06619207 seconds)
    (142/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067369398 seconds)
    (143/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079046558 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075845706 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073204794 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064386728 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.210501119 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084830797 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081142572 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071500921 seconds)
    (151/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157597199 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070176537 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075195455 seconds)
    (154/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.136875117 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122936718 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063069043 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071343713 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091379369 seconds)
    (159/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065373771 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065773894 seconds)
    (161/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066957625 seconds)
    (162/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066762314 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092060095 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184240938 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065832309 seconds)
    (166/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07967389 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064557356 seconds)
    (168/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078541381 seconds)
    (169/309) benchmarking ("sort", Float32, false)...
    done (took 0.138018664 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.152551026 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064891443 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.1247405 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065514047 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.198646403 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081696283 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150870762 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092605756 seconds)
    (178/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141675307 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06617213 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088512959 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064738487 seconds)
    (182/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07447457 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067157335 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084605884 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088198346 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062676779 seconds)
    (187/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.062735021 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064479223 seconds)
    (189/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064550588 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166681986 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062975007 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154994924 seconds)
    (193/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.063846948 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089393218 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064602994 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07672081 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063922244 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064272215 seconds)
    (199/309) benchmarking ("sort", Int8, false)...
    done (took 0.162945094 seconds)
    (200/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066183557 seconds)
    (201/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.23283633 seconds)
    (202/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074088845 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069494006 seconds)
    (204/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.142059004 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065690844 seconds)
    (206/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.074360252 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073580433 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078439125 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072619113 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129473364 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079391787 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064933675 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065172863 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072685737 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.175965904 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065601535 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064982442 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06447118 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065399926 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08584728 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065451209 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076718994 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075517551 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066382656 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146029679 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064142249 seconds)
    (227/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072301304 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065629693 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072597768 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144787377 seconds)
    (231/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064818074 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180182276 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.140263301 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072386707 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.199067026 seconds)
    (236/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063688929 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173328756 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063724405 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.151235898 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072439546 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06674114 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114563627 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064398518 seconds)
    (244/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064677046 seconds)
    (245/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065234939 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086966236 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06838351 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086585462 seconds)
    (249/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.131257702 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134075365 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066932013 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063640044 seconds)
    (253/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064999008 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064922046 seconds)
    (255/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.079775122 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064204344 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065715395 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063913087 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119913394 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068521836 seconds)
    (261/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142618619 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072502379 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170835585 seconds)
    (264/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070988614 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123871285 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073563499 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073304075 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110397656 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067300973 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078033473 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064809865 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066897543 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.152858303 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064187379 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064243731 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077988457 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 0.258701409 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151908948 seconds)
    (279/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.06942141 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065042798 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087323899 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06701398 seconds)
    (283/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089487532 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064499987 seconds)
    (285/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065285044 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063739008 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064936157 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076199243 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085106186 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.1488272 seconds)
    (291/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.06514475 seconds)
    (292/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063432857 seconds)
    (293/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066985102 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089065831 seconds)
    (295/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.064939779 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065096323 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071415745 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063518107 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063857882 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064436547 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182700301 seconds)
    (302/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065542319 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064947932 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084454707 seconds)
    (305/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.065091842 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064037532 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064935959 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06595973 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064995653 seconds)
  done (took 32.786827719 seconds)
done (took 34.25049241 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088016471 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091514216 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074129795 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.085491725 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079962154 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097841054 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072448978 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076436913 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079279158 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077445788 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077380992 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070947716 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073519439 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074088862 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072356109 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088995975 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081595163 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075309645 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075448259 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06539727 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07512016 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066713699 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06584049 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073404001 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078802632 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07252018 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073919223 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073713311 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064997815 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06516356 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069923708 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074219253 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066473621 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078529005 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075173534 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075004601 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078988326 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079828274 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06596975 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066750538 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077401856 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066338994 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075025987 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072618106 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070036045 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072354481 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072886167 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07618427 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086540147 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068926624 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076140284 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075751046 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075426046 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070292558 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069898822 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072676407 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071418308 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086446108 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073349339 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068993523 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075310176 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073710186 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071353958 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072878052 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073182897 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076113377 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075985232 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071832922 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075426321 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072016424 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064665693 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072839078 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069402729 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064615379 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076301815 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07868902 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063128166 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068963119 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072792798 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072777855 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064405736 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068565217 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063489435 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069537198 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068977418 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071186199 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07046894 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072121348 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063445401 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073498907 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072452595 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072800314 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063625817 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076231245 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064007731 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071310102 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064893245 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064649588 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064582455 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072431756 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06633322 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07037575 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072738113 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06314824 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069614406 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07769148 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064712344 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072091398 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063932661 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063679125 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074624605 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075153876 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065162781 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069212756 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063566995 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070223937 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063718471 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064261059 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064495746 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066203955 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071472201 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066483986 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071470483 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072780209 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079004942 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066608263 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071528618 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071191614 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066363924 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073199193 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066708466 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066532603 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065031243 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079304577 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070874052 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065978128 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071831397 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070313244 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074607266 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064446777 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074584089 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070606009 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067780081 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070083606 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062012014 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074677061 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068069956 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06742266 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.204795212 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065851959 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064729589 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065430038 seconds)
done (took 12.636518257 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068183472 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.104386261 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072004182 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080062823 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076581633 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066140553 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068663134 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080771238 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068677267 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08375611 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091485154 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086291927 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090876672 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064114357 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065249342 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065762485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063619776 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072408441 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078961844 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.0880801 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093347778 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064863143 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.066905493 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081533969 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075615573 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080836802 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066698301 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066434077 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067710715 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081194035 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09007501 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065180201 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066049254 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077908507 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078435443 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072165394 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065683846 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069182033 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066137075 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065735856 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066773882 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078630625 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068421556 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068703223 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066106819 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066180777 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065497311 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.070564795 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078048755 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068090805 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.073056642 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076758953 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.0662434 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065045542 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064064388 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069263313 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064885639 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066140912 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065517209 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065084452 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065535553 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068454942 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065954336 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065991603 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068825711 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067073894 seconds)
  done (took 6.290426439 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08227407 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095067024 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077385958 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077124528 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065296455 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066005301 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065627571 seconds)
  done (took 2.095869899 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068300923 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07954244 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081161392 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081170803 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07476471 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083549067 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066505383 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095991096 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065159717 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.07924209 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110077189 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082146796 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06822728 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076799224 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065536737 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072665884 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066562043 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077513237 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074964272 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085230119 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071000581 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096671065 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081888567 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067801712 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.086760896 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069348819 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064617212 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065692383 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066857162 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066591464 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066754849 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104016781 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068952591 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077253262 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063797037 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.099690956 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.07137551 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069509358 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067644223 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073858997 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070717295 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067058513 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063891394 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066964004 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068186777 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06938865 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064140554 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067381212 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067088162 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078844312 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064745398 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.070072022 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070616554 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070695227 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074181411 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071567553 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077245648 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069214591 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079385607 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.07541986 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068789535 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074540338 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072873991 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.072685761 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075355089 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071705942 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.071533839 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.073057077 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068775396 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069319734 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069655634 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074912834 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067021326 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.069435126 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071428767 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069150772 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.071153984 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.084816453 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084329743 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080489488 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070042408 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068739978 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07159374 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.084877157 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071854657 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068623128 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071146422 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06682186 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071774513 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069218903 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074615244 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068942728 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.076617383 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.069932813 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072038831 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075876547 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066951336 seconds)
  done (took 8.695840017 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069994689 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068336596 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068220504 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067591919 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066922532 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067096812 seconds)
  done (took 2.01122906 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089651369 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066020685 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083105661 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066306516 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104039497 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072341637 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072179779 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073094961 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.072068768 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079080589 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071709833 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074483116 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072137243 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07032447 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072958284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067417384 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072058777 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06872874 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078935901 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070564536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078357006 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070281339 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070415019 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077061346 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068467886 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066944952 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066793178 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079354028 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078357665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073372759 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06983949 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068495987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073788747 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075660416 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072369737 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073508969 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065627781 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072479852 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068694053 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068400957 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073832294 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07018186 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067912872 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070872302 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072518526 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073592824 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071676647 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069655981 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071412753 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071352495 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073090854 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06873419 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070387151 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073244392 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076061278 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074108124 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071314235 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072107517 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070042637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073908033 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06570498 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068315006 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073226438 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068575103 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070168831 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071267003 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073830398 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070431098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070237263 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066041673 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070949354 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066164766 seconds)
  done (took 6.770943577 seconds)
done (took 27.418659821 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544628717 seconds)
  done (took 2.08853284 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.575078407 seconds)
  done (took 2.158970822 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.212728133 seconds)
  done (took 11.794780512 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.305280158 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.322907726 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.731456881 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130666475 seconds)
  done (took 3.119832959 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.75098814 seconds)
  done (took 2.344446991 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24206874 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227164816 seconds)
  done (took 2.072451451 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.344161439 seconds)
  done (took 1.927923567 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132806254 seconds)
  done (took 2.71271555 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225601288 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157664633 seconds)
  done (took 1.973700416 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.491737911 seconds)
  done (took 2.076776569 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.260912501 seconds)
  done (took 5.84925677 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232712546 seconds)
  done (took 1.861180768 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235450148 seconds)
  done (took 1.828712513 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.139699595 seconds)
  done (took 3.7249482 seconds)
done (took 47.128271786 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08538253 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086234709 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084514133 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080620781 seconds)
  done (took 1.89808897 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075673441 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.07051077 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.073869709 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074637587 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07136397 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072067366 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071395294 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068855798 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070505869 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068355274 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067109653 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.06862388 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07114247 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068822816 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.071088798 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071883033 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.06883576 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068823301 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071523894 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069154714 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073079613 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.071067287 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.069486865 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070840082 seconds)
  done (took 3.28773911 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080025156 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073775236 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076883921 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072918828 seconds)
  done (took 1.898959184 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077553843 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084593977 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085175967 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088659452 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075313005 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075366297 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081408228 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082897713 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064381039 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085114465 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067117875 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065602673 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065713296 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084305461 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081119135 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061338537 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062729562 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075709129 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074848655 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076715194 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068460269 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064756599 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075873746 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074537705 seconds)
  done (took 3.39616854 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080387363 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064805919 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07636663 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090089238 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092025422 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065300987 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077435664 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091674336 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122082329 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06441593 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070998897 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06436174 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102270999 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064300454 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078734437 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104913913 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10769681 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068228381 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096600659 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064385174 seconds)
  done (took 3.250945886 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077905705 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069463242 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069863864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066432937 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077012945 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072080183 seconds)
  done (took 2.038488813 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07056322 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069063251 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068604933 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068018441 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073681938 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06861456 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066016596 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067388122 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067273736 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066562623 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066012987 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065199414 seconds)
  done (took 2.413904901 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.166400574 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067978385 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069764 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065990024 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070302312 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066443639 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081091878 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069814088 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082873249 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065860992 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065974068 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068266119 seconds)
  done (took 2.540352104 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104690573 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099070499 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142802283 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114692822 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091901242 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.092847467 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.156796901 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.133798009 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11450277 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068025076 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085375064 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097958071 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097148982 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131651733 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110251303 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071963098 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.110708655 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079451789 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112635181 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12026145 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113467616 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119855203 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091445208 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096890647 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104428403 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11557783 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070614851 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069701466 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146431696 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098431667 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.090964498 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097472102 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107265162 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.067961177 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085436439 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.104731678 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081568041 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114278499 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085673638 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096970367 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079282984 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.129598006 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103961864 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101676187 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128554573 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091028069 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108653889 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104374326 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081200136 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116364948 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096632148 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089205875 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078545208 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.156714872 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087722256 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.10919184 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109328599 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079741021 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085943967 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098893102 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.126020802 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.103031628 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110461457 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.25661779 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.090852258 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091350254 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129191322 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084343329 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098663713 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128016403 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090702838 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074539403 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.094015895 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068535953 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09519447 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105513795 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09038986 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109734611 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076178648 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12564836 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106183601 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072389877 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.115451309 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09739983 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153120629 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093811511 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098908022 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089944422 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.147507357 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083732954 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079501115 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097551405 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126551645 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092340244 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094115424 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126233884 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09495321 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086429171 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073913747 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.088721461 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102405592 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106016416 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099560971 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087496736 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08522028 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094395763 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073629139 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079345412 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.099005654 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084133486 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122631177 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107338763 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121782512 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078053722 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103122754 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.09509776 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12589862 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115026107 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083107046 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105896268 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13811332 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.111509579 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083632512 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098734964 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108965098 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105513837 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094531735 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133644957 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11360009 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086909315 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090958179 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091873938 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.263963806 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153159076 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08910357 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103308574 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136246936 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.112395619 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089561867 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082976563 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094451041 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103982041 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142106086 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.09765212 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.072445953 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091717024 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129426971 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075984823 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097837538 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.095138706 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.085145499 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083095634 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069655826 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102906528 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137796868 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.115298241 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101289759 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.108349075 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070940239 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100380532 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106398136 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142854816 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119046443 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099527669 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.100310896 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106000936 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080331048 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.135127155 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.133281121 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092279479 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091991581 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122161507 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.094297804 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102739096 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112350823 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101744604 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099350203 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.13947593 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118711918 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.12264342 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103811911 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121973773 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082255765 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115934277 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072894267 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102981096 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075281511 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10369497 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077869456 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109773262 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079305635 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099149738 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067897744 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071827411 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106947558 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.243739934 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086997371 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.137060156 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.132704795 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.083895351 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103651257 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102208212 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103164596 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.110996823 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.092322058 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093281319 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0800698 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081163819 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101139789 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095278624 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107678751 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079898684 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075510313 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138303253 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104542097 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092066603 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097146658 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.121283382 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090524218 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088782843 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104912795 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136853065 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115798175 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079539587 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089737799 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068988596 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.08322217 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.075250278 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107941005 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073895443 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109171186 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067808943 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127862439 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085415771 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100723814 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096218638 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130577443 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090108584 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126240216 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085256552 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106521656 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092516229 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09339374 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108059406 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094513297 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103607637 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108900516 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091575962 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087833702 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119047339 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104006313 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115459597 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104071893 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133674724 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110296576 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073666494 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102572889 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098537152 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142673651 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097438266 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088265532 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093740949 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101087298 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079447183 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.293536509 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086477602 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.086259326 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111900267 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.08830199 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096768993 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075618854 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.099735425 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09289591 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111859182 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.097681521 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.092240474 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107760286 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108898674 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085395125 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085959984 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121633484 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.127686659 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100196675 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092609999 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087345131 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097069724 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092755962 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107421428 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080010719 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075006739 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.067568844 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071565659 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.115468609 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106125704 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097362406 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097055974 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100874166 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070993593 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086266688 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088620939 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081931566 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088580178 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113240647 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101968959 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127062812 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100016035 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084450763 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139566031 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125674133 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084569287 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090275201 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099619799 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073457062 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144812837 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117230961 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076573528 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083969179 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076621884 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082624587 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070864189 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102681073 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102476323 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074342886 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101310323 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095791138 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122217598 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095219609 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075266439 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078019778 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073785495 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074177093 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10064727 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076029987 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075588937 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126978754 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100576055 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104593755 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081798543 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073058117 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.28526499 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069609922 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131542376 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082196292 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10882379 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.080444617 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078825387 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088878805 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103698678 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103412288 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111120974 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069754042 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101281299 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152360322 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074418316 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07451677 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073434234 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108535304 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086159725 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139738226 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088582521 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091241633 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075629206 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126397921 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101926431 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081699843 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126276835 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078442399 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070063102 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085601849 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.110348143 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071407741 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07409304 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112880224 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.509606173 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089327423 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07482241 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087735796 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125584012 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082645828 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1067356 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116454573 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105391383 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.182697969 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073718053 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090242886 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102186195 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096580734 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091022469 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078463225 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087179735 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086365432 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.08388614 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104979605 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079134878 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089761279 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078473571 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102180006 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.127466201 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084353816 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.100220283 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08590498 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089247878 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096748122 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109902106 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103714172 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.085927038 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086120436 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106864585 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081626375 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07616229 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.255795318 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076915546 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077910348 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116357844 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.082076983 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093361155 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102350316 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.088665455 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11166991 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11584577 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109747819 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09552214 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077972549 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084678543 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086963607 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073354405 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077441076 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073883624 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.070088776 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105896294 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084291206 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080694538 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.098009577 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108084415 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098466092 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105320795 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089052825 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095986033 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098853079 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.125732927 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142865351 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097078442 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121737636 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129632917 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075631211 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074414359 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079650197 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12980484 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.08085898 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091733423 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.235781214 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077491806 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080110832 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089968406 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105445176 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082349997 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07933378 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097666759 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10960183 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08346281 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080247168 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092388255 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.107160917 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126596765 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088315012 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074861645 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106889221 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100759048 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122018752 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.072458704 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07982923 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126903739 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086554313 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103038801 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079055479 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12198589 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130106123 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072937193 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087525686 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072054131 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086102277 seconds)
  done (took 50.547869622 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151421993 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.141090372 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081724134 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.097223131 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185829448 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.195700436 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117696227 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094682782 seconds)
  done (took 2.823434291 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069559724 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.082136642 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100124196 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082867545 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066440161 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067590563 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.199763228 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080597819 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065512761 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104776676 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074582086 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068016301 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.359326298 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065527606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066612349 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074217863 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066537684 seconds)
  done (took 3.40272406 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37376341 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622914327 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.321122996 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073937203 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.979765076 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088170841 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.223679627 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137526646 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081416884 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543959563 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369313342 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130986506 seconds)
  done (took 18.665496544 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078573186 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076694977 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079263188 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.078649798 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073708955 seconds)
  done (took 2.099276681 seconds)
done (took 99.877143199 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08514191 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.17414181 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068916596 seconds)
  done (took 1.991606265 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.084125402 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079965883 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080469274 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.07714255 seconds)
  done (took 2.045139767 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075958026 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075491532 seconds)
  done (took 1.864041714 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231050134 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172564769 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088863686 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084281429 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080531409 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079627487 seconds)
  done (took 1.969376601 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07349874 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070938494 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070667174 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071992777 seconds)
  done (took 2.000639806 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069131628 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067918377 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068551714 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071175538 seconds)
  done (took 1.993148855 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084539646 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077760611 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077105063 seconds)
  done (took 1.952384343 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111260522 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095670456 seconds)
  done (took 1.919157129 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082175077 seconds)
  done (took 1.798200101 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090735027 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095974724 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138496505 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105601059 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138759626 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123763512 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075363896 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076163244 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072426204 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071250846 seconds)
  done (took 2.702676275 seconds)
done (took 22.526478822 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082115172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36914488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360805145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089639627 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674113109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355964562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99696571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09007081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097943175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067329377 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083707298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647174455 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990396939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329433988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.975758903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327803288 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648184975 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067623252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066532533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067670374 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979859642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066850541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070803281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067633178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647782407 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372680795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067728885 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323301718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067289503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069412435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354366573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067581359 seconds)
  done (took 16.23383577 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071355016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121254918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071640413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08366524 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069868936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069246197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070555833 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068051402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109140904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067492535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084037688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067093001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07128679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069388665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088154344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068808518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069645227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068817075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068577547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068690742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086568398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068114076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06877236 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071947291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06873873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081448345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070146159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068307779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068696521 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07086046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071545894 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069696787 seconds)
  done (took 4.125274784 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125150692 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128909486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075928684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110024095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118111443 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069169622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149156943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090274741 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112753084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068312837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084623921 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068401952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103613645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069556279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088279759 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069119688 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06968697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068775341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068214837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06884708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087102116 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067952949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068850412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068952378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068785232 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083047472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06931689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068445625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068259738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070985861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072507664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069379389 seconds)
  done (took 4.404480708 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071916969 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073071436 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081394027 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082320874 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068178876 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070632412 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072173314 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068483381 seconds)
  done (took 2.324254243 seconds)
done (took 28.820402801 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081249843 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070135274 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073229478 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089705713 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07600418 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071445577 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066447496 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076265367 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072542383 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071492353 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074706517 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068882809 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071795623 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066467999 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07415272 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068849043 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.073943445 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069861016 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070635731 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07185908 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068492789 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071743174 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075044163 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070454981 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070706359 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070445486 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074793348 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071251456 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066555464 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068474395 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068423713 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079290651 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072439235 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072022674 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066264728 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065944373 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070078706 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068452746 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072287935 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075080025 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067961687 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074857409 seconds)
  done (took 4.719378134 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088486318 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092330108 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084182128 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081623168 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103448053 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082382827 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088365915 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078819394 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076902517 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08722091 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073484401 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07846037 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078490971 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071798058 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077318351 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073742379 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078971216 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073385485 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078140208 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078144737 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089761559 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071310354 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078770673 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079067828 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073250622 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079552631 seconds)
  done (took 3.837421903 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074716078 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089117363 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090988161 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139631694 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110045095 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081807732 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082141687 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102354255 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100647905 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067977423 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071467597 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094046215 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096031122 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074844718 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107266011 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085654057 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078591571 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069583422 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074431257 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101773978 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090449017 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086812447 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101301292 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087792265 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06723138 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077013806 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074408972 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082648841 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075031104 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079255927 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071677009 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071974496 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068200374 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079037097 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070793582 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065022399 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088819003 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079497575 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082965177 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106081671 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076602587 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068488667 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096528113 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1344279 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066715196 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069689198 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070655768 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079552395 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068110493 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097098053 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084995069 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067649286 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.086639788 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068317737 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068976022 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08269875 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068802445 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068936535 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079500285 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073162015 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087677213 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072120227 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087126881 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06717577 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07841866 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068770303 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06893262 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06600424 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102530922 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073842684 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117912136 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068418409 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065374006 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079438605 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078135545 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074075372 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067284679 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08487841 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079753763 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072729361 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078551902 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069780037 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070566016 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103181501 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065835651 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064851476 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065174337 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069275152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070007718 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068004843 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08007023 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066812538 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06997976 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081377179 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066949198 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068265988 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068970002 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068462262 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066128702 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077539184 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070699834 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068397942 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079720523 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068031897 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070685331 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081855914 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075742322 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066654931 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067799185 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068968453 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068245994 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071236244 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070168596 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068598608 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073286317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074157212 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072188452 seconds)
  done (took 10.939019858 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162836895 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151285576 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068992195 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146044491 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075737845 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071637574 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146960165 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086546886 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067489195 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068899879 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067900677 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094663307 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090443764 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10175049 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071582846 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06819858 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093567424 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.100746558 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148853293 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14414958 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090787487 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075380818 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07023345 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069461796 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069064072 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076394268 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083812586 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075981019 seconds)
  done (took 4.421443833 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076413596 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110527225 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071744311 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092121976 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086279569 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067967594 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069678015 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069122269 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084862549 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074279558 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067818122 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072139701 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070945705 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069821815 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068139222 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075114642 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074888239 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067043124 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071261588 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071891667 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077403036 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092319539 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071329746 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067295453 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069418598 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067549345 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073501737 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076199069 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067404438 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097754679 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064710053 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071750638 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.0819402 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068487054 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066870205 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06833755 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067834066 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067937844 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068224534 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065607773 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066891711 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07452109 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068797102 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076089808 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083084052 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075218475 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068746029 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069850729 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069620224 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064839086 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070715896 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071718603 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070687789 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077611385 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074322544 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070508654 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069187963 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096715095 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073355031 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066962393 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06640509 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06878807 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068475661 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075160547 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084871327 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068588054 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066030112 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067656864 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072470248 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081351516 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06696178 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072422395 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064548213 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067433491 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069558809 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07015027 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069150282 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065945802 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066931477 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067528252 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067868078 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067199314 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066918718 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070150568 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065269593 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.0656478 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068034959 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.06852555 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073344519 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066313755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070053834 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068710195 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066245976 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069788418 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072491222 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070313186 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086647862 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075642884 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068147661 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06540575 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081497319 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069462946 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067168072 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073631447 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072138804 seconds)
  done (took 9.352119815 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092211721 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071475798 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089286916 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096226202 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080335302 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075040569 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083329156 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070771348 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08466028 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067147992 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.0772292 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066113179 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080490308 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075836878 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068731129 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077284 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070269818 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088173291 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081955325 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066161347 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076298045 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080180505 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080011531 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085881592 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086777036 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087665207 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080466274 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071049276 seconds)
  done (took 4.002318545 seconds)
done (took 39.002628788 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.814049334 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.984012084 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.812116795 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.009948103 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.958847663 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.933035101 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.933841578 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.810410807 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.978676091 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.845459138 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.136249656 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.212526778 seconds)
done (took 67.235672481 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.833692556 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.965424468 seconds)
    (2/2) benchmarking "String"...
    done (took 2.030478882 seconds)
  done (took 5.741760047 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.992040295 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.454425378 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.09010716 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.81290038 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.816057778 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.322439148 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.621466832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.299766579 seconds)
  done (took 31.165457289 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.953881875 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.039390874 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.52055702 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.542802867 seconds)
  done (took 15.847274993 seconds)
done (took 64.418934738 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.848804331 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.812356142 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.833521053 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.842944479 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.811217254 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.812755272 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.816457502 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.8148989 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.850696742 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.866989336 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.811210311 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.817741357 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.812804799 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.844541178 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.544388299 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.873206455 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.831165896 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.814592285 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.827586353 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.822279244 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.8147581 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.812395073 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.284801507 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.999043462 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.426010517 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.063762309 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.245572097 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.220768342 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.818660801 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.810600015 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.898042419 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.020483432 seconds)
  done (took 205.470656495 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.816016725 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.624007307 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.732938796 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.818918578 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.101183559 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.990030283 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.909089957 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.216652502 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.814580304 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.841100398 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.965381194 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.814549123 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.975414625 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.760116887 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.850707393 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.897414484 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.961589916 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.007202058 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.850590626 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.965746981 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.833856465 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.8130279 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.76495015 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.927488166 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.852467905 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.90113069 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.832389844 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.836439507 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.002155085 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.940964119 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.814544662 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.832635702 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.978721041 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.68632153 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.839090211 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.823630194 seconds)
  done (took 170.341563647 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.006420466 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.826061542 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.81782687 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.873767761 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.935972044 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.816761653 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.467424416 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.82473372 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.916757404 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.820440024 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.817435182 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.816449775 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.81572923 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.830363579 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.896570206 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.816908611 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.833100691 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.818524687 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.843917077 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.820570959 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.817622913 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.818145628 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.818046928 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.817993632 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818227255 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.816906481 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.004890371 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.056289775 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.815647001 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.819733447 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.315198944 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.828936383 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.955849737 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.821989607 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.913315924 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.874827875 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.929913771 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.817906386 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.820080758 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.038202129 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.891867095 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.816976085 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.821670512 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.819485999 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.883103448 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.830231137 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.817618946 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.821819968 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.827469449 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.885510954 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.060602037 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.817485033 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.943052305 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.302528464 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.816557871 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.819988131 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.822536361 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.392057267 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.817901505 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.81913719 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.821249526 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.828647418 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.828096046 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.819991274 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.823213703 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.207835299 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.890154477 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.027551792 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.91430232 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 2.006949016 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.644033416 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.885528684 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.818750573 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.821613717 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.819675741 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.821896565 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820310679 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.825145781 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.990635499 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.832777188 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.945408734 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.900744947 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.940445378 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.822257514 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.832628476 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.655341204 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.890832105 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.858068449 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.64686252 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.820681636 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.19212475 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.592740654 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.817661504 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.821072713 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.833413983 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.819408501 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822086793 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.821573333 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.901175545 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.818639266 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.819190933 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.944307034 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.556477308 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.987558014 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.821618075 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.82040919 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.833318456 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.906513748 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.938991689 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.823644693 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.888663905 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.826529079 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.824246339 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.967234875 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.819425378 seconds)
  done (took 405.304456993 seconds)
done (took 784.929069858 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.52308577 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.408623064 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.573258739 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.429926109 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.398758565 seconds)
  done (took 14.087375567 seconds)
done (took 15.834934374 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.836355353 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.829215566 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.884474852 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.90994924 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.842506595 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.841052556 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.907343292 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.842316355 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.870898034 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.879185701 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.910837204 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.906668905 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.848551777 seconds)
  done (took 26.06237645 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.831925803 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.973370422 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.046910025 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.861745135 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.830710284 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.051494411 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.887823336 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.960241124 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.96653596 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.045726453 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.09504462 seconds)
  done (took 23.309531084 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.831020166 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.973440068 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.047566057 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.867640021 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.83102185 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.055125755 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.895500678 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.965797558 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.968781856 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.05786009 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.06932697 seconds)
  done (took 23.329297896 seconds)
done (took 74.455238622 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.827754331 seconds)
  done (took 3.583421471 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.849466355 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.025515047 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.827099827 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.828760879 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.826958808 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.828048403 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.830830152 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.826883099 seconds)
  done (took 16.599989142 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.829913555 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.830061055 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.830130011 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.830310298 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.830229695 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.829253841 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.828936036 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.829743466 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.831260691 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.827386383 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.827674913 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.83090476 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.830920416 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.829144702 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.830099627 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.829926543 seconds)
  done (took 31.032677785 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.832498314 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.828164166 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.828570538 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.828814982 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.828829552 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.83026862 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.831411619 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.829396972 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.828594049 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.831499527 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.826510463 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.828576376 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.8308154 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.827708131 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.830976238 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.829107625 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.831416849 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.830401406 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.833453239 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.830849176 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.831125773 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.82967149 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.829700744 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.830624356 seconds)
  done (took 45.676733321 seconds)
done (took 98.657078975 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.6230735 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.584900093 seconds)
  done (took 9.966481836 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.830275929 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.829619047 seconds)
  done (took 5.425809629 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.830280498 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.83015384 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.83049698 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.828215947 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.831231228 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.830665807 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.831297351 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.83226894 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.831540345 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.82991428 seconds)
  done (took 20.066677555 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.828905244 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.830753803 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.829988733 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.830441037 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.828447063 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.831025937 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.830376046 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.831424899 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.830410842 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.833135433 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.833817073 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.831074476 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.829952365 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.831194425 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.832798052 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.831693806 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.831288799 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.833164415 seconds)
  done (took 34.721422858 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.830178561 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.829780284 seconds)
  done (took 5.420324872 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.828766559 seconds)
    (2/7) benchmarking "second"...
    done (took 1.832107748 seconds)
    (3/7) benchmarking "month"...
    done (took 1.82826663 seconds)
    (4/7) benchmarking "year"...
    done (took 1.829134067 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.831564897 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.831999433 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.831263461 seconds)
  done (took 14.571003163 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.833457556 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.977073049 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.032514762 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.424335752 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.830561222 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.834919417 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.697713496 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.832783501 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.836162327 seconds)
  done (took 20.061754335 seconds)
done (took 111.988890216 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.628966031 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.829548553 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.11052794 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.89656081 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.852434316 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.127688962 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.857000752 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.424769348 seconds)
done (took 42.483872626 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.872860551 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.83114343 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.858341891 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.857379985 seconds)
  done (took 22.305314779 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.834540496 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.139663693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.866674982 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.739981274 seconds)
  done (took 22.36832454 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.223998334 seconds)
    (2/2) benchmarking "read"...
    done (took 2.178963428 seconds)
  done (took 6.167133139 seconds)
done (took 59.471256598 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831926105 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.833871047 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.834903436 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.83214975 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.835479797 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.830458215 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.833830079 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.833652125 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.833197498 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.829515198 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.832292149 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833101123 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.833676357 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833750896 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835179164 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833717357 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.83477123 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.837180138 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834660583 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.835228307 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834419231 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835475017 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.835599144 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.833938491 seconds)
  done (took 45.771432053 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.833941113 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.832822801 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.833357537 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.832399878 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.832026891 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.834032178 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.83411096 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.834465574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.834616194 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.834233743 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832600708 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.834982244 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.835471666 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.834889319 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833309693 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.833037836 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.832801028 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832254435 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835264062 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.837603448 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.832818308 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835298326 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.834024653 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834139353 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.836232625 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835550817 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.834796877 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.835061279 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834126907 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.83513862 seconds)
  done (took 56.787534074 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.835664128 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.836047738 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.833897445 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.832361108 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.832951415 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.835222247 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.834708011 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.835869369 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.836180383 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.836623493 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.835884469 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.83376888 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.833972088 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.835180497 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.834625985 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.834388249 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.837303114 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.83569553 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.836449081 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.834772496 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.83810293 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.83562254 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.83543139 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.837530718 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.837187957 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.835653381 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.836406118 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.837606702 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.836112091 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.836176677 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.838174817 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.836180672 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.836785239 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.8392172 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.837699551 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.838616302 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.838944065 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.835859602 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.838137409 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.837886203 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.838304008 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.839073501 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.838275275 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.835075023 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.838767043 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.837533388 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.833368109 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.835820697 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.837688294 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.836625163 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.836891336 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.83782072 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.837302008 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.838343756 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.835147486 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.840472818 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.840097322 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.839287593 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.840159692 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.83813357 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.839304004 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.83823057 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.840274685 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.837752738 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.840988829 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.83801994 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.839293244 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.838030727 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.836855591 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.839698392 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.838882734 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.839327836 seconds)
  done (took 134.029374634 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.839899859 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.840004393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.838438464 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.839558154 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839844969 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.840633154 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.838886441 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839122684 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838281676 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.840465659 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838247357 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.841255589 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839243831 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.83980126 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840902807 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.837836387 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.83957629 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840654501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.841797263 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840302454 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841179624 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.841979257 seconds)
  done (took 42.243844684 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839879748 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841804792 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.838542233 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838884161 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.837348387 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840442353 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.840677074 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841170691 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841140347 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83963186 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841640399 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840341425 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.838996168 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840958162 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839252598 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839633667 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841966964 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.841009173 seconds)
  done (took 34.892523631 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.840155569 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.841049907 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.841045841 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.841282384 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.839590391 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.842042836 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84071372 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.839777425 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.841867933 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.842884435 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.842260219 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840097387 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.841587369 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840409896 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841726745 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.842585157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.841227481 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844115959 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841731442 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842535428 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.843265783 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841083703 seconds)
  done (took 42.280265207 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842230608 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.84217472 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.842591882 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.841868431 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.842989935 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.841655224 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.842809083 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.841989366 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.842118303 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.841826673 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841166978 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.842998493 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.84262586 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.843771198 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.841885881 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841420915 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.842839558 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841668514 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840924846 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.842326064 seconds)
  done (took 38.614158159 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845750363 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844096412 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843601284 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844671017 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842861538 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.844943863 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844221556 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.844959261 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845988841 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.844070353 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.843455399 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845226391 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844483137 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.845313447 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844514642 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844692409 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.846764758 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.847114681 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845400359 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847328738 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846217784 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84547896 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846377131 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844822641 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846076787 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844735424 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845082207 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846384779 seconds)
  done (took 53.435767884 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844444351 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.844719401 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.846359963 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.845298719 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.845010138 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.845388285 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.844963612 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.845475412 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.845466971 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.843811741 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.845100035 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.845662549 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845672727 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.84621239 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847380485 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.846276393 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846171653 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.846470979 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845889286 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846788711 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.845427995 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847208074 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.845897782 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.845462642 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845597666 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.848049056 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843608386 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.84532855 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846185703 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.845286618 seconds)
  done (took 57.144034571 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.868238787 seconds)
    (2/2) benchmarking "in"...
    done (took 1.869028304 seconds)
  done (took 5.509474483 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.845584946 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849646028 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.848486535 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.848837472 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.84863945 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.84779774 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.846462283 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847152038 seconds)
  done (took 16.554052915 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.846657874 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.851858822 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.848699423 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.847654267 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.850367695 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858028907 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.849084206 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.849799374 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.849334268 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.848600391 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.852598553 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.85207979 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.856375905 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.853045924 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.848037027 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.849375859 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.849905087 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.851969934 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.84882988 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.849354396 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.852018822 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.847251703 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.847428337 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.848106274 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.849785853 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.849604167 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.861812756 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.849808981 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85168431 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.849375161 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.860138222 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.849275547 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.849601543 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.852688245 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.851170291 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.849831044 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.859327294 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.84832999 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.850913197 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.850548727 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.852671517 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851873971 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.851192551 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.858239909 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.849182622 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.850476193 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.85136788 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.851449668 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.850226545 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.85425483 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.859549892 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.85188548 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.849758909 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.850061129 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.852905641 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.850092539 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.849449512 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.851888784 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858679093 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.857107768 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.854348247 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.875743335 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.861645203 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.851440917 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.850913359 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.862163297 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.877103762 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.853172254 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.852722639 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.850600295 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.859997505 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.849938848 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.850382331 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.851277421 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.86390283 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.859831753 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.851087742 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.851170706 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.851319427 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.850439516 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.854174037 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.851584828 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854275066 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.850459465 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862741174 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.878889194 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.851519352 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.851813073 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.854180287 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.85205544 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.856995628 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.854681188 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.851498335 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.852927728 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.85363309 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.855240984 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.853616696 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.851522963 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.854622396 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.86297072 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.853058253 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.852433097 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.856214141 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.863576515 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.852926336 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.853164452 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.855747725 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.85266821 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.862215401 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.854880522 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.85218236 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.852183696 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.85335496 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.856905097 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.853393221 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.857401414 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.86314295 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.861745603 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.855978329 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.85821699 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.856541119 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.856144325 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.864967509 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.881055297 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.854653393 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.857302379 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.85870446 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.866776383 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.858606895 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.852937808 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.858551268 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.852671658 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.854408141 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.857391096 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.854756299 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.855399961 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.854941932 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.854527104 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.855851623 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.854280022 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.860016872 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.857509504 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.856863167 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.854479124 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.85920782 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.854283996 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.857123381 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.863672668 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.856996306 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.854001965 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.855665881 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.857664934 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.85749778 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.856470708 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.854981373 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.855979456 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.854659233 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.856272941 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.858654148 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.855742503 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.856059745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.857006171 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.860013761 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.856661057 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.856531023 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.857046939 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857104142 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.85655516 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858096551 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.858941068 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.859822879 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.857065142 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.862023607 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.855808284 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.85735356 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.857326016 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.856867894 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.856625627 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.861733182 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.869009004 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.85965575 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.869177611 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.857587394 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.865647368 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.856291542 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.859989717 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.858989126 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.856594901 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.857704748 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.857453826 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.857693041 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.862279399 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.880815443 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.86970064 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.857628809 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.857807876 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.863768904 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.861801108 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.863230107 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.85598777 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.858322994 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.861176777 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.859007394 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.858349875 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.855728187 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.860789662 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.856981673 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.856382565 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.86114695 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.857021863 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.857969164 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.859716193 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.858393349 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.860048192 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.856770271 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.859042441 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.85831709 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.858733816 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.868136672 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.861144288 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.857661433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.858719251 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.861179245 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.857134615 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.859071743 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.861151038 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.862935703 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.857873751 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.859806993 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.868048903 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.860330485 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.860030487 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.861226531 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.861521054 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.862272044 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.858557217 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.863439226 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.870183035 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.863925139 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.857769069 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.867063386 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.858331541 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.864396071 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.859604202 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86305992 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.859009658 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.861892282 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.860489744 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.86238353 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.869072966 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.861255209 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.86300783 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.86138154 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.864541999 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.861921414 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.862827748 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.862127341 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.865823737 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.871446435 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.866691331 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.862924383 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.866324722 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.863611925 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.862554576 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.865923898 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.864180879 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.87661615 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.873104368 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.862219034 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.860881642 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.861521576 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.865667554 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.862449079 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.864525437 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.871529829 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.862069601 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.866945853 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.86871075 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.862966186 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.863009589 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872194306 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.86475696 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.866796328 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.864107671 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.864393636 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.864091283 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.863474428 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865497189 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.862723909 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.866651674 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.868087036 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.863558455 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.86480418 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.864011166 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.873966592 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.863325634 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.865877811 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.872954003 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.865767954 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.865754459 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.864918681 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.864020386 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.865512441 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.866403433 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.863928557 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.866732353 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.865453412 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.867503053 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.877624425 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.868810821 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.874365113 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.868041531 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.878194928 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.862604041 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.862587996 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.865218358 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.867490357 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.874004696 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.864528515 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.864381526 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.87589315 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.86547329 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.866516316 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.869879042 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.864421018 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.865017534 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.865196424 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.867614111 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.870641659 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.870221878 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.865291706 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.866360567 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.865239196 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.865613602 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.870597786 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.866686799 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.868591688 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.866500968 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.865742325 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.866899545 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.865900348 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.866311373 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.865118406 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.864540623 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.865588355 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.873926941 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.864045599 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.866989875 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.869825814 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.865052855 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.876014268 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.867049679 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.867212244 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.866833517 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.866921471 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.869098383 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.867144511 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.865495211 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.86757839 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.865910946 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.868191906 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.881335806 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.874142776 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.87069002 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.868799386 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.867580187 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.868590477 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.876060108 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.894079463 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.867651337 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.870206165 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.87326608 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.876411649 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.868724731 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.875145752 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.871533117 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.877829177 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.869382705 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.870737444 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.871655535 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.881804476 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868774461 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.868671244 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.868362649 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.873628567 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.870253886 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.867148387 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.871042162 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.873984793 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.869995217 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.882982624 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.869715766 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.871883555 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.869292652 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.869800424 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.868973455 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.868400194 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.868325161 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.870457629 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.868479545 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.871156259 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.871388317 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.873856154 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.868413974 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.872883897 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.879922833 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.868796856 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.86972371 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.871861015 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.868540242 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.870885712 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87065351 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.869006378 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.872194581 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.870230432 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.869744473 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.872071455 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.880125075 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.871949619 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.87067327 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.869960594 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.872499978 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.86880607 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.87037548 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.870694087 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.880057558 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.87378703 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.883999951 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.882746161 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.870425683 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.873382349 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.879963403 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.879724987 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.870932026 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.871443459 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.871654231 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.87541264 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.875640115 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.872813751 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.871646441 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.872594771 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.877987825 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.872404522 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.87156429 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.872936962 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.872506667 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.874444188 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.8730197 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.878775581 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.871959357 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.873487176 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.871403202 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.873311002 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.87557842 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.875024387 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870588052 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.872455709 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.874359687 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.874130286 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.87822337 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.872680949 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.872440823 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.874667643 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.871261238 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.872068249 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.873755187 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.872824186 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.872311201 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.876489577 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.883118433 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.874095522 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.875219947 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.875111582 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.876941264 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.873493109 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.873744438 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.872261617 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.87519289 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883269434 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.873278811 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.873542779 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.874545022 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.874615658 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.881240383 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.875486385 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.880272279 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.874449017 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.873936486 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.875699289 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.879273427 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.887844182 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.881582581 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.877892959 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.88289909 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.881999356 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.875845717 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.873905634 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.874442582 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.877039351 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.877269225 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.881169403 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.875273052 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.878496758 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.875741488 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.875644675 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.875575781 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.878386642 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.875155038 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.874572712 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.878178999 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.886953237 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.885463463 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.876395152 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.876786373 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.876438897 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.879661313 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.888754748 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.877531342 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.875206492 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.875877396 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.878626585 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.878986611 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.887094667 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.889148688 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.882047076 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.879337195 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.88462445 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.899053406 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.881217325 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.888087944 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.912046364 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.879639422 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.876912856 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.879528289 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.879389221 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.879491619 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.88217885 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.879715749 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.887852358 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.87976458 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.879298159 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.889254029 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.879935292 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.878784777 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.880387067 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.881960514 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.885550075 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.880483285 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.888449345 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.879744407 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.880817648 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.880445145 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.882400616 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.881162327 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.879708671 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.880512501 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.881324417 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.878777762 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.879865141 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.89093268 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.879868634 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.881254957 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.894482699 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.892936055 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.881787381 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.879790444 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.881546025 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.88733069 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.883614591 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.884022151 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.88234646 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.888802422 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.88312701 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.888132533 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.88120585 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.879771872 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.880374996 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.878117652 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.880529217 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.89439083 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.893776483 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.881545098 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.880648219 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.886354606 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.879482378 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.889751846 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.886970022 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.879717687 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.880836142 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878740652 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.88107452 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.88033111 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.880846558 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.885467947 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.889984723 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.881845151 seconds)
  done (took 1114.334667527 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.88053184 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881743933 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.882086288 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.881321056 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.885307612 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.880466211 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.881091084 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.880897653 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.880590748 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.880671262 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.879482415 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880745073 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.881100067 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.882378055 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.880874431 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.88015403 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881361785 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.879223066 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.879306484 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.880042507 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.883566289 seconds)
  done (took 41.311157936 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.88235625 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.881694061 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.880015165 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.881019634 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.881304968 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.881254153 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.881483208 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.882503765 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.882779909 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.882488211 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.881129633 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881741066 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.882945828 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.882045065 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887345458 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.881873925 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.882421557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.882535151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.882633427 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.883045591 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.882283806 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.882038787 seconds)
  done (took 43.217217428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.882026128 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.882730604 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.884029785 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.882495776 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.883414562 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.883418578 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.88288893 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.891094517 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.883594697 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.884807283 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.891656068 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.890844502 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.883886784 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.889936944 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.884579168 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.883792915 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.02978684 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.885513059 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.88364602 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.882269151 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.884527313 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.894015174 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.884390776 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.885883089 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.88374497 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.883617202 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.884264568 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.884953227 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.88434935 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.886194347 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.888106334 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.885573856 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.887857751 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.88836498 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.884735021 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.886158837 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.889388831 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.885387308 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.887142739 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.887664143 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.895435308 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.909474238 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.884392031 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.886114832 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.894578359 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.884838683 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.886055363 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.889389695 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.894674903 seconds)
  done (took 94.40846668 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.886030943 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.884695952 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.885056726 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.885081239 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.886822213 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.888366111 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.887242608 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.885404115 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.886469685 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.886078474 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.886404434 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.886926752 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.888416741 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.890376818 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.887560724 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885629799 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.88580944 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.887540236 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.885748036 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.885754465 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.887677651 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.88752882 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.886995668 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.885858916 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.886569255 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.886611904 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.885676935 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.886867322 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.885476553 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.887159973 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.88831562 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.887203701 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.886758057 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.886088504 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.886794514 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.885988403 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.889024104 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.887134682 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.88757884 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.887277606 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.886520987 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.887075724 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.886724781 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.887710694 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.888596969 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.887509183 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.887509409 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.887391366 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.888885191 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.888303105 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.889735118 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.889115883 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.889591834 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.888202833 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.889883049 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.887104576 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.888788395 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.888967019 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.890450774 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.890081265 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.888961416 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.88803068 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.889749311 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.888520861 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.889248838 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.888709624 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.886680445 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.890416794 seconds)
  done (took 130.161964375 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889143918 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.887712564 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.888398605 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.888882507 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.889923146 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.891204403 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.890345749 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.890194383 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.888715026 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.889396129 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.888701346 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.887922171 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.89084503 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.888982239 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.889027555 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.891539668 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.888909389 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.889814643 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.889605335 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.89055837 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.89184161 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.891475323 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.890907432 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.890134789 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.888838555 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.889741456 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.891735673 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.890413671 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890341697 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.889968148 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.891040765 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.891429175 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.889244799 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.891252253 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.890156072 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.891388782 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.89127824 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888994059 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.889490662 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.889616995 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.891973753 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.891665564 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.891327106 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.889857298 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.891383776 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.89204808 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.892537114 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.892803368 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.892892912 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.893526832 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.891931322 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.892549577 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.893833966 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.891412606 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.892509952 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.89180822 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893681095 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.893362331 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.892632485 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.892107206 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.890635794 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.891583085 seconds)
  done (took 119.046345096 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.895177593 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.891423263 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.890842905 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.891180278 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.891925615 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.893961481 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.892041215 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.891782923 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.89198544 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.893970195 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890252063 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.891812245 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894932055 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.89134074 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.894097659 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.892607149 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89451982 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.893031569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.892624228 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.893060595 seconds)
  done (took 39.670769317 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.892603951 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.894132932 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.892836094 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.89431401 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.893128025 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.891905208 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.892651777 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893748646 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892269636 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892946978 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.893358883 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.896213772 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.89354461 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.894950808 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.894493008 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.895512329 seconds)
  done (took 32.117175501 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.892999092 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.897082169 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.897277703 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.895198107 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.894087589 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.894124857 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.893489362 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.891479178 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.893147296 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.895140735 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.895603743 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.895094423 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.89518481 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.89304927 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.893873299 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.896212103 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.893091593 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.894005972 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.894485014 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.893902325 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.893742796 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.892774744 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.891261789 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.891615098 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.894256694 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.895855366 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.894757172 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.89362842 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.891821458 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.892715135 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.893196881 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.894120804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.893792114 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.893840913 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.898087975 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.892207613 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.894681097 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.893525213 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.89403746 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.893488816 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.893118066 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.894240454 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.892476346 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.891996687 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.894126735 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.893239326 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.893063969 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.896041515 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.893410941 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.893335504 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.892475054 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.895716439 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.896257715 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.893593328 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.893176588 seconds)
  done (took 105.990683363 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.893382231 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.89786462 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.893733216 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.892540687 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.892754632 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.894699296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.893776255 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.893582724 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.893248272 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.895038149 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.893924834 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.89353687 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.900309812 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.887573495 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.888061713 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.887800335 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.886799997 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.895496718 seconds)
  done (took 35.894157906 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.884641951 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.887972216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.887904551 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.8887111 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.886677928 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.887140475 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.885741621 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.886814987 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887889936 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.886925011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886723777 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.886905279 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886467887 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.885809588 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.891525402 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8858293 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.888642901 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.886856705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.886755991 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.891370321 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.887404792 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.888040281 seconds)
  done (took 43.334552304 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.887258385 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.887792852 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.903876258 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.912673924 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.907945981 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.928173557 seconds)
  done (took 13.240772593 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893445467 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887849982 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.885890731 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887420258 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887850797 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888040571 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885592708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88543287 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886969491 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886527404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884684344 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893792334 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886588467 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884094905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884882141 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88485028 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89204611 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883800995 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883723792 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882973983 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885209131 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886986393 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882979617 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882698359 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884085008 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884156633 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885085395 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883521269 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884356282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88478206 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884709126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885005032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888280308 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885073844 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883426741 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883210165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884848148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890411383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882935676 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884009878 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.882285176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885479174 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885436227 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884993806 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884962047 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885304148 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883442387 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884814702 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888461408 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886002978 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88517644 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884700182 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.885787088 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884073041 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.885037424 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.885048259 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886055801 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884880332 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890814322 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886518796 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884769339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885256622 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885714407 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88527138 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898383073 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885455031 seconds)
  done (took 126.280986551 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88528908 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.885913306 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887756664 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886275072 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885801519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886394857 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.887785259 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887700489 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885944426 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8867206 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885262113 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886014496 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887957615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89364223 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887244734 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88600861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885707779 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886381782 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893857913 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887638412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886089876 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88646059 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886784881 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888331653 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88580103 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884888618 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886299048 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886390448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887962405 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887604571 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882347849 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881992177 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881790332 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.883855309 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882114368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884019078 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878871436 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880286276 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879960293 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889412083 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87997562 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879225495 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881913687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879914264 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88264336 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875918796 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878965645 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879825667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878966936 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878249637 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879888234 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87791738 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877683218 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878271074 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877009376 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882205196 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877992038 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877336366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877686388 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875461186 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882693817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87405972 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876978436 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877269753 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875507482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877297999 seconds)
  done (took 126.091372301 seconds)
done (took 2594.129708608 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.960054501 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.92252696 seconds)
  done (took 15.684757606 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.046568246 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.9936545 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.877691044 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.92884871 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.875712737 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.877503862 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.874006675 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.874334462 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.882453001 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.879991774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.879438126 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.068181478 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.937319999 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.87341071 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.879015142 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.970092175 seconds)
  done (took 52.524235527 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.882849024 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.880634901 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.894459373 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.882750423 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.888612118 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.894671541 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.911322598 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.885708057 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.917414485 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.904327974 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.948827124 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.893232834 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.881947049 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.932318571 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.896273044 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.897270931 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.983560717 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.963436992 seconds)
  done (took 36.141123593 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.959535236 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.88628648 seconds)
  done (took 10.65344545 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.874709121 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.882283245 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.905831675 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.871576381 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.875991561 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.881059373 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.898567138 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.891010342 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.885812753 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.902097896 seconds)
  done (took 70.67261383 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.884220141 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.876913312 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.88087696 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.876212103 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.871711675 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.876037833 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.874098041 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.870904952 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.573493813 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.91382147 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.884924224 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.884058575 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.873731662 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.876977883 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.872474801 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.898400039 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.038900639 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.869946738 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.873216764 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.878583183 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.876323387 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.955758746 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.889327511 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.878988699 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.911320789 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.566325242 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.880896263 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.881335056 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.033739168 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.87297065 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.873895208 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.086636466 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.881020825 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.253775235 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.156274338 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.88234959 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.883988306 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.879974586 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.870887839 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.045491244 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.875103275 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.884355029 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.74839576 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.125890735 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.961347131 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.915655987 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.242301314 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.874167491 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.880676396 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.905303835 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.874734881 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.871462747 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.889219925 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.384202487 seconds)
  done (took 133.245969221 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867950011 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.11490449 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018278499 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.872137759 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123732728 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083365524 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.861271673 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915226758 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.87157011 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066465323 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.120933141 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975408295 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.872370831 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.869936368 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.867556258 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.86827598 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.017380827 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.939676804 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.879100436 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.866428347 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894792691 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075224061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.994475003 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.870952585 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.898037222 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081862496 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.994865659 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971771118 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.660369741 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.872285084 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931461192 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.872773949 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.871745822 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.869827244 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.025847814 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966841136 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953855298 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.873522427 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879588124 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871209122 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.542757757 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077207816 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.970874649 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.991508881 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125434204 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087855949 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.480975989 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.875541048 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.500916576 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042089373 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.077335283 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.079382223 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.987623569 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.876755179 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.152040842 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.872958041 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870944681 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092635444 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093215868 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.97315225 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.877572244 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.874703002 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.87111571 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114582036 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.872865115 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963104828 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.87505987 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.877627836 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.964908604 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971177698 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.103858127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095179791 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.901773328 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.214592549 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.388857485 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.077869647 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.940008972 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101622014 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.88089107 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.870632562 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950294341 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.716184796 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.138054332 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118072913 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070298612 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900833918 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.499864568 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.88327518 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.066201824 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.05965529 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108890193 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.122345508 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.111420396 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.186461402 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879603005 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.880616118 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.190690317 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.986435472 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.815303775 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.224917722 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113548463 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.359199225 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.903376728 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.162318243 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005335867 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879835737 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.518386413 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.875304086 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.087677976 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.914319834 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.881754646 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879030193 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.066913662 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.782889858 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.878013599 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.583392266 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.934875714 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.880228688 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078013372 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.87345653 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122060558 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875190596 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111456598 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.993322513 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.914081758 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.052667604 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.121740527 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.496981794 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120445346 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12020951 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988987542 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101788368 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.661223851 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.87901192 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.143776081 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.883037085 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.880684526 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.045073128 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.880662 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02187098 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.880254892 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14920228 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904615008 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107581259 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887823283 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.109986653 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.907115897 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923623584 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.881152783 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001756 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.878899789 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.68611699 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.034924804 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876690826 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872227114 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.469358177 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.873568375 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024669166 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.102094707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894755359 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947805396 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.419555774 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850891041 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961032269 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.904688789 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.176593442 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.879108798 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.132194037 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.862733393 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.354676496 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.881121542 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113881288 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.486443228 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.881679983 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.883585215 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.715551459 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.844511487 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880076986 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.038297333 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.253717145 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.642560452 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079854933 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.883767918 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004380277 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.889022667 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.951784531 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.211217195 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.877935882 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.880451543 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.881683159 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.878277917 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.884279872 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.088678647 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.907061083 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.315686455 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.023871906 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141624027 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.185882994 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.084570273 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.918552792 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.88859773 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109600995 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.884402606 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.944456394 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.882100712 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901174722 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109984836 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888044578 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094012586 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121237012 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.747785938 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926150386 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.881700599 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.880640762 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.809104004 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02762074 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966887527 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.889135304 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.886075082 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996682494 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.998750012 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067362824 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.569384021 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.054537727 seconds)
  done (took 902.098550946 seconds)
done (took 1222.822898773 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.882922411 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.885605993 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.889080868 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881447514 seconds)
  done (took 29.351691535 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.886325147 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.881248969 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.887651567 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.8857908 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.885494832 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.882029811 seconds)
  done (took 13.1197514 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.881912817 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.885149954 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.888331226 seconds)
  done (took 22.463479441 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.96125725 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.287635768 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.021522426 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.310057351 seconds)
  done (took 10.392045195 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.886146982 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.885229716 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.888630562 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.885343257 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.891304504 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.887977726 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.88645822 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.887420644 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.896711947 seconds)
  done (took 18.805967659 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.015943737 seconds)
done (took 99.960246785 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.183722983 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.259258643 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.25133607 seconds)
    (4/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.193796525 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.979426576 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.891738813 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.884556078 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.247379044 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.183472951 seconds)
    (10/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.901182729 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.189084302 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.891986826 seconds)
    (13/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.895369961 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.920782489 seconds)
    (15/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.973795213 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.477264673 seconds)
    (17/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.972268106 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.979040502 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.903342988 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.026557574 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.064415232 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.630035916 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.904855353 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.223644555 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.144115171 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.187230372 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.037492032 seconds)
    (28/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.019488695 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.895200952 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.83205898 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.200972622 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.908651788 seconds)
    (33/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.745868704 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.999202682 seconds)
    (35/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.050415096 seconds)
    (36/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.062979953 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.135616414 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.022444934 seconds)
    (39/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.201100983 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.963006289 seconds)
    (41/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.014279372 seconds)
    (42/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.954153212 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.891685436 seconds)
    (44/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.53162114 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.889103473 seconds)
    (46/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.014948269 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.02396851 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.02892301 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.014550161 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.974485033 seconds)
    (51/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.342932309 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.88460577 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.230147484 seconds)
    (54/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.309318802 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.960104387 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.974819785 seconds)
    (57/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.302140852 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 2.096388247 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.486385519 seconds)
    (60/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.117208719 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.882978374 seconds)
    (62/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.145508873 seconds)
    (63/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.651538686 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.972678001 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 5.519626327 seconds)
    (66/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.879474886 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.336953797 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12707406 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.88174204 seconds)
    (70/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 3.637339816 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.879412632 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.16642051 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.881619384 seconds)
    (74/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.614981745 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.989992265 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.901536424 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.144835126 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.083136023 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.433134564 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.072729982 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.730058095 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.261769334 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.004746323 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.964338608 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.979843297 seconds)
    (86/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.886736742 seconds)
    (87/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.066367048 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.962082868 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.944181822 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.202994317 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.383460063 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.999602221 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.242654335 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.880048312 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.964755741 seconds)
    (96/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.515431567 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.271863252 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171423617 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.883191193 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 9.382369262 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.325211266 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.024294911 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.895547029 seconds)
    (104/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.394328311 seconds)
    (105/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.270737716 seconds)
    (106/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.922317697 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.151057999 seconds)
    (108/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.270357849 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.881559035 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085519439 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.902478191 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.293387715 seconds)
    (113/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.886224864 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.885100221 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.07268495 seconds)
    (116/309) benchmarking ("sort", Float64, false)...
    done (took 5.607462935 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.184320536 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.45205954 seconds)
    (119/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.74133849 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.270387439 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.159216985 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.903856704 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.149768705 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.012457797 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.269742235 seconds)
    (126/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.987851407 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.891846501 seconds)
    (128/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.904924246 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.88892714 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.7318909 seconds)
    (131/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.35667828 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.18369164 seconds)
    (133/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.362892576 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.89823376 seconds)
    (135/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.046586763 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.063781165 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.89276141 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.89167991 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.210230486 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.027568927 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.891331779 seconds)
    (142/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.261214395 seconds)
    (143/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.892573371 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.972844479 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.899293178 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.968405708 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.109969666 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.803119289 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.149968262 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.973696705 seconds)
    (151/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.989160081 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.906152623 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.189455534 seconds)
    (154/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.040509079 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.585028554 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.344372585 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.916010045 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.903498597 seconds)
    (159/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.245546629 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.343437411 seconds)
    (161/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.687327675 seconds)
    (162/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.070589012 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.782335465 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.914827678 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.087327594 seconds)
    (166/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.394544758 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.931237148 seconds)
    (168/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.807475258 seconds)
    (169/309) benchmarking ("sort", Float32, false)...
    done (took 5.597831939 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.935718746 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.070575818 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.045316683 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.16973072 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.197943768 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.248904421 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.904222652 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.905447249 seconds)
    (178/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.357241089 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.209611063 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.795228101 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.587486948 seconds)
    (182/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.544941127 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.985464762 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.923027531 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.804644599 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.020773989 seconds)
    (187/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.980318716 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.908037967 seconds)
    (189/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.103305809 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.911212001 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.088809619 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.012050058 seconds)
    (193/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.627601347 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.569372097 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.222882609 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.380786886 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.161224984 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.933665056 seconds)
    (199/309) benchmarking ("sort", Int8, false)...
    done (took 4.836814536 seconds)
    (200/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.004037564 seconds)
    (201/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.0112137 seconds)
    (202/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.924196626 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.974711154 seconds)
    (204/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.110456704 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.216348838 seconds)
    (206/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.922913927 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.908216409 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.92237467 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.021575403 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.030810893 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.698669721 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.233115423 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.912020559 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.140978314 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.05729223 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.89653155 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.412306127 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.210525013 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.164137545 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.084883155 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.907258764 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.618693578 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.203432767 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.986875326 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.910392401 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.172723782 seconds)
    (227/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.995729531 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.942912745 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.928867085 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.931677353 seconds)
    (231/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.306839183 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.908473985 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.033541148 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.917065096 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.136258023 seconds)
    (236/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.191419376 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.909717884 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.111954589 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.911682352 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.121524282 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.909423637 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.675003175 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.304889829 seconds)
    (244/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.280172418 seconds)
    (245/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.036533228 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.800114977 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.912983671 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.807667921 seconds)
    (249/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.917574599 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.038216008 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.171235751 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.929908705 seconds)
    (253/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.225991853 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.318116288 seconds)
    (255/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.425131385 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.167858034 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.906627618 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.935221979 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.910996686 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.028382423 seconds)
    (261/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.192226317 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.917245232 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.852007259 seconds)
    (264/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.059599381 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.761533223 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.050091358 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.923718664 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.032284951 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.133713244 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.591922124 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.922601463 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.910240428 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.00211262 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.094477664 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.150725574 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.460846232 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 6.923273692 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.913481055 seconds)
    (279/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.040508293 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.909535368 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.842151316 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.591182239 seconds)
    (283/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.079371441 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.995107534 seconds)
    (285/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.916311331 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.063037809 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.016474582 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.758581272 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.916349898 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.910960265 seconds)
    (291/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.045374997 seconds)
    (292/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.666073669 seconds)
    (293/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.045649032 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.506586571 seconds)
    (295/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.13066941 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.137855276 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.931455722 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.305231461 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.9964502 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.223839693 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.913877494 seconds)
    (302/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.217410585 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.3294118 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.826125738 seconds)
    (305/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.045936202 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.128739641 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.130320454 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.915119062 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 9.720137556 seconds)
  done (took 1018.633141729 seconds)
done (took 1020.524717516 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.971273557 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.933910531 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.917812771 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.936120361 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.028503929 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.957170754 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.927293918 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.925143651 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.965281926 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.964942592 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.914780449 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.95623716 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.916684639 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.91549407 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.916035948 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.930111624 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.315535256 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.96159827 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.93690402 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.927789434 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.934649176 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.915607207 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.966701771 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.959231901 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.922809337 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.921111021 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.921206284 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.936876844 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.029865129 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.918944897 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.922989147 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.930175257 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.315711416 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.961034568 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.914856032 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.936550777 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.931979456 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.929236515 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.922344151 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.951240632 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.477342883 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.923735299 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.918409988 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.925525418 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.919002538 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.926948517 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.919842901 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.929329433 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.93504251 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933493939 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.465034083 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.939706054 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.921009893 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.924118898 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.930138513 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.921119445 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.923045218 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.934540434 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.943655853 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936018227 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.297201057 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.973680135 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.922138667 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.938973828 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.929240829 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.500187478 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.924287079 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.927113118 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.48110982 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.931485133 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.503188499 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.937182011 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.918186021 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.934070557 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.952543499 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.319835662 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.962489546 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.91895521 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.929185391 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.918975849 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.933255028 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.938856707 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.925914938 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.920743054 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935640631 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.961543258 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.933178869 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.922346588 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.939714478 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.939236077 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.928376596 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.934390345 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.926029301 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.920192293 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.934498945 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.9254868 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.926218952 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.923275764 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.927537211 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.934682945 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.477720883 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.946446586 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.919280343 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.921179899 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.919068148 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.93625685 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.479746372 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.926902842 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.943824031 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.970988605 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.924594167 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.301147091 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.970137853 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.943691353 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.933964482 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.925279557 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.919587521 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.300809054 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.517795465 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.945977454 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.923514899 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.919409504 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940127787 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.930528073 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.918967277 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.32341212 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.96842292 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.939190245 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.048201203 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.936584656 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.956627653 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.922717092 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.927099815 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.972990163 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.941368629 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.955906509 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.924895732 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.940844215 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.94088363 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.921195436 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.938837909 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.935967417 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.923154216 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.933614188 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.923375765 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.96995505 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940737901 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.941081382 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.948636241 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.045954021 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.920370902 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.303384784 seconds)
done (took 303.777027007 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.011936625 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.921114254 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.016455963 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.924682534 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.014213436 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.012576473 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.922133435 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.924870923 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.925286085 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.435533447 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.923876774 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.931192808 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.923375953 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.92199047 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.997073132 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.920599097 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.923478047 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.210657589 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.925664088 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.006777821 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.921081699 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.923730072 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.927896446 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.437711659 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.923795214 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.924419169 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.008785656 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.922394596 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.216780327 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.922042054 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.922558764 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.21477839 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.01434009 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.938525879 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.932401915 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.930841501 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.02706157 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.932213645 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.003863654 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.993988439 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.016171554 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.95879251 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.923157909 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.925012357 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.927015424 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.925361152 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.92281053 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.95914023 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.924234633 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.932169639 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211135652 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.930159339 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.933819292 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.924118476 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.924044839 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.939475294 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.923149621 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.925420294 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.0090531 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.922999398 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.002210775 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.441109473 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.437584882 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.925265234 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.925534966 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.923165427 seconds)
  done (took 188.394694402 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.029585141 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.997666229 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.02846064 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.933172117 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.974467636 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.033716494 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.930755273 seconds)
  done (took 15.777612819 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.934091976 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.924255982 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.987271012 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.984611375 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.92513157 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.102946679 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.935306538 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.931868962 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.951617581 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.927104803 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.563068667 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.986300357 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.931220775 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.924766417 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.938607434 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.991727218 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.924745848 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.92647492 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.037699296 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.075425468 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.935070882 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.933147366 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.952054495 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.939264709 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.929836933 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.929337999 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.928131599 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.933060284 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.926993985 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.925950853 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.929175345 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.991180687 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.927550712 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.929269226 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.925440916 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.925702551 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.927290555 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.92515928 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.932898801 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.92614819 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.928114849 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.928654888 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.927063855 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.927898236 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.926967578 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.950749721 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.925331039 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.927483041 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.928041153 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.929752081 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.953812685 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.93257956 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.928022186 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.93290879 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.969471843 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.936040582 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.929881452 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.92990362 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.929561816 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.927968269 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.929891022 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.078520028 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.988677156 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.928049857 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.988885725 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.087963886 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.932527841 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.928486705 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.929326345 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.021537953 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.927198848 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.993766787 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.926117386 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.049604204 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.930315767 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.107477936 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.959819572 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.92959252 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.934316288 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.929882294 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.938059587 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.927918973 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.932890586 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.938149378 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.93826625 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.929440109 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.9306165 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.932649267 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.938960945 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.929985621 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.981462395 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.930675103 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.93183715 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.070615479 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.927321019 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.037168229 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.957736163 seconds)
  done (took 211.77474721 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.934905336 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.93460661 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.932673525 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.944382152 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.930724444 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.929506409 seconds)
  done (took 13.459994383 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.931050023 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.935438753 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.929736297 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.929165689 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.930029084 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.931095639 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.930034472 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.933344449 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.93476054 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.928699636 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.932275084 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.933737472 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.933101989 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.929539813 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.931401376 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.932538029 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.930632877 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.927725127 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.931054846 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.932149066 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.065253269 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.930470668 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.932354697 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.935782495 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.936336018 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.932627097 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.947420534 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.931256066 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.930916028 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.939533073 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.938831268 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.935182941 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.9341613 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.939569612 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.938815547 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.942444723 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.932907269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.932304225 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.933921629 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.93391802 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.932024297 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.932828789 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.932719297 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.932859033 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.934366208 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.939568544 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.93864277 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.945400296 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.932173595 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.934785094 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.932541277 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.931906854 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.929360934 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.933204476 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.938384463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.937950023 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.937476821 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.931585525 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.931995004 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.936706544 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.93589569 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.934025024 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.935110618 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.936721784 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.937421403 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.933352523 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.940765871 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.931993165 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.932803731 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.92985317 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.932635523 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.932208432 seconds)
  done (took 142.236467458 seconds)
done (took 573.517462582 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.033577168 seconds)
  done (took 8.890913516 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.030242212 seconds)
  done (took 8.994333427 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 11.826759057 seconds)
  done (took 13.689650886 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.972069525 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.935482161 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.953504309 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.957364392 seconds)
  done (took 29.706373709 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.194643032 seconds)
  done (took 9.074202164 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.96070975 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.942328673 seconds)
  done (took 15.854235604 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.044334819 seconds)
  done (took 8.919955216 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.437686404 seconds)
  done (took 9.33264741 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.963205742 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.979619005 seconds)
  done (took 15.844740609 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.95197205 seconds)
  done (took 8.830603888 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.715160568 seconds)
  done (took 9.687175899 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.963348706 seconds)
  done (took 8.864949795 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.003512526 seconds)
  done (took 8.886184336 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.952958997 seconds)
  done (took 8.835108074 seconds)
done (took 167.269047263 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.952092708 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.952748938 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.955506089 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.95541559 seconds)
  done (took 29.696810656 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.985784709 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.9850953 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.994835676 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.984591154 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.976879896 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.977999765 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.986835758 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.986531743 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.977814801 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.985321684 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.984821515 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.983830855 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.987001011 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.995223583 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.995125015 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.984715167 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.985287964 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.987817552 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.97554377 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.99402998 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.983430982 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.986062224 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.953083395 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.952157063 seconds)
  done (took 49.47402918 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.139251384 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.018418223 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.104878377 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.000369502 seconds)
  done (took 10.143284359 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.950877255 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.016153996 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.004236416 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.006956447 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.03896429 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.057111808 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.005524794 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.1631582 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.067318257 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.077994315 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.959499972 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.973634971 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.977197459 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.006839536 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.05730422 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.954122555 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.953856266 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.070913717 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.01626555 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.163182075 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.952984425 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.006887333 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.045944991 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.010065899 seconds)
  done (took 50.419450449 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.955390653 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.963322869 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.961584657 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.956026398 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.956065673 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.956229148 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.960359493 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.955729875 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.976493807 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.957770887 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.955644009 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.956572633 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.96275415 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.95496306 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.955143642 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.968213501 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.968798135 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.954510992 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.959450104 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.962620688 seconds)
  done (took 41.08201543 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.951904866 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.801159901 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.298597306 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.205974738 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.954017909 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.956875345 seconds)
  done (took 32.053860863 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.968083178 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.959450634 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.956720251 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.01238385 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.093106574 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.960403976 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.95543219 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.965989145 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.003171418 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.020897446 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.97761364 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.983907856 seconds)
  done (took 25.744471113 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.95520181 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.956214506 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.957841413 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.968441492 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.965970197 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.962762347 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.962987473 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.953680312 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.969080083 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.977762573 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.968008882 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.96822777 seconds)
  done (took 45.457153798 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.16998671 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.17875553 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.174437054 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.533283098 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.94986578 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.854621272 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.625884294 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.659546791 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.25651111 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.937444541 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.921586149 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.84028187 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.198264851 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.954416044 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.21169037 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.883608348 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.952498055 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222904294 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.956281361 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.956763586 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.250766044 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.014208229 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.16687081 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.001389932 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.168018421 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.407969518 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.202062123 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.213733236 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.295141472 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.099529552 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.104222202 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.003827773 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.963504402 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.964179443 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.958410592 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.967338799 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224873174 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95710002 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.039903113 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.961687793 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.88248524 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.272320112 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.08312695 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.371736156 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.075482872 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.198211481 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.962658368 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.117336022 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.019977359 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.214720783 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.075564295 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.172641261 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.88129411 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.336403579 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.09689085 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.957413491 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.960479652 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.657501602 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.198783988 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.039004985 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.281744113 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.083491923 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.961303814 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.050212725 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.958210952 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.071177543 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.333874375 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.966967509 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.95897238 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.966541912 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.054783548 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.171954409 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.958948899 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960367038 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.979064282 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.961286694 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.317200639 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.493678474 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.954156905 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.527681332 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.40736953 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.932124619 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.415231731 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.007392921 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.24284021 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.182287799 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.144253813 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.204355263 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.842253554 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.963415296 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.765684235 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.039653042 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.03932781 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.962177556 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.108892697 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.265110121 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.091058586 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.96106395 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.88444067 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.971457806 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.161669368 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.464113698 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.019549077 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.958861463 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.958655469 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.964022198 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.961374637 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.977326694 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.972062142 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.477949689 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.247124286 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.068299271 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.220493904 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.955560432 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.638941698 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.232844388 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.092576815 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.536815239 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.099203056 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.959397365 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103253853 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.972667468 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.961457089 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.337710793 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.369844024 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.122606909 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.205798048 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.057689288 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.995400316 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.967881358 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.042992786 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.187342165 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.959301948 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.223618947 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.209728912 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.630981713 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.058806243 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.036941261 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.970672664 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.179098306 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.043531173 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.488877004 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.192912945 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.51002143 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.949353328 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.463949876 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.231668514 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359599138 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.981372362 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.120305912 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.998683981 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.664222469 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.890217268 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.968581151 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.312316821 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.009494045 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.052333398 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.967514692 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.963875284 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.972496424 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.046397864 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.034631509 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.039815773 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.890891166 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.969424622 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967507214 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.967421584 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.507760245 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.662668827 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.256339583 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.96699388 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.026096552 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.966375595 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.561681154 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.969951462 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.08873176 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.075014952 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.783137153 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.996855597 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.225105315 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.401001481 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.087603122 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.965811315 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.966777842 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.666473121 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.975359823 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.666065543 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.250303528 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.976007399 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.426233618 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.035861435 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.151461621 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.98706048 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.969534863 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.968144045 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.968816595 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.170771144 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.471463312 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.295730617 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.32258664 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.055586776 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.240545371 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.161469958 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.423404851 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.656551357 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.49196066 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.195203969 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.969667356 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96989267 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.616883847 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.976763057 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.183768382 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.172376981 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.244030392 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.27677242 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.386397893 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.974269959 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.983740158 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.209410805 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.966732813 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.396033472 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.047719336 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.331606093 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.793967332 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.23927294 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.042990993 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.978693171 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.619396507 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106808987 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.927162504 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.087605273 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.893788095 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.666577752 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264404876 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.243550264 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.954329324 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.311115544 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.270514733 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.231825947 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.608500872 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.969343217 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.019129027 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.050702062 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.977796332 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.483365454 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.013494838 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.015683155 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.974302394 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.970459999 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.972994872 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.641906279 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.047263569 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.089073894 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.693612792 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.449810596 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.880277517 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.245986382 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.031209029 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.434044586 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.016761237 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.185251982 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.975668113 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.504827158 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.022264661 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.24577485 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.936020557 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.183841906 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.176991319 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.000671364 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.977383738 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.896466352 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.837298181 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.975976018 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.130355973 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.858253335 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.972892605 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.262631593 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.554461028 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.00913209 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.973587053 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.299464055 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.393985503 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.248565151 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.97856873 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.185193736 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.09234499 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.890019956 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.448294689 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.555598036 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.670814829 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.989802277 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.175611066 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.330431207 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.24058272 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.0118915 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.04288865 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.249606812 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.959375424 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.975011347 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.494390369 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.071175112 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.215177711 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.290702464 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.47028655 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.407852787 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.419093256 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.035032604 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.188454474 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.357687774 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.228233517 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.97454343 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.065036922 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.186048255 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.263991373 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.869274714 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.682341815 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.215557246 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.977882553 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.924906052 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.176579466 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.473062032 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.32539948 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.5016449 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.144247373 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.00129831 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.448457667 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.98622376 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.904791809 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.971044389 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.917893003 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.184808672 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.121701544 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.009654866 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.527767256 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.257401084 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.386374141 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.179903029 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.012825865 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.895580115 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.680296026 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.920648869 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.065515543 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.01273296 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.042268321 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.971584919 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.175350226 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.411150807 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.016952826 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.502737169 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.183816092 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278204565 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.245859481 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.285816084 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.943091116 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243547704 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.922962909 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.578343466 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.0635742 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.064848951 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.970842785 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.979422448 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244201383 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.341654585 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.552817246 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.009263775 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.339498327 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.088105432 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.976876196 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.976099608 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.429079 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.208999547 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.184991227 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050568807 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.116449856 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.045739442 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.487914054 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.979317802 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.975925568 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.109679637 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.977198719 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.729019402 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.280660284 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.738618336 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.175838263 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.497536212 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.858730254 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.139184329 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.022774834 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.975795893 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.973694486 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.094584132 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.213824341 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.262309221 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.752126501 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.977195311 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.976126926 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.873118688 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.675964925 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.215539162 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.984783004 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.02113809 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.979953835 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.095511838 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.97885689 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.254916596 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.039667612 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.975593225 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.983187062 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.192436101 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.491211611 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.996205287 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.676548783 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.183442576 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.980337677 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.453296205 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.445049781 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.225763413 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.021676589 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.145898586 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.233683525 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.507152115 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.147306947 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.976149893 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.203766796 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.980747158 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247251037 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251026061 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.979591893 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.192318463 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.453185283 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273160726 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.986827184 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.856071088 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.99184635 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.251743068 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.044649903 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.978914559 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.9885145 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.519701042 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.672371804 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.472202455 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.136936149 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.334231545 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.785196665 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.737809353 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.981775527 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.985412447 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.671097468 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.703713874 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.191783278 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.267398602 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.926766111 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.182115983 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.68424269 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.98040619 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.24869891 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.906148933 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.986188252 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.580850889 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.25616148 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.917162419 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.986742239 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.569264619 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.982047842 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.063375326 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.982225487 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.097083489 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.258754782 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.398232248 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.106752689 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.616973281 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.686080746 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.960507188 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.027072686 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.788131032 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.55194301 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.684680593 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005848425 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.998372767 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.908590329 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.984342648 seconds)
  done (took 1696.627037927 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.987999169 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.054386705 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.086872155 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.997324322 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.985190549 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.109901311 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.028569728 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.995852558 seconds)
  done (took 58.158240891 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.979011094 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.998216645 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.984203218 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.983167597 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.99870757 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.9838244 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.208553853 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.000552042 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.988903586 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.989337247 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.980910562 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.99343391 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.320194869 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.012057711 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.985951203 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.986647272 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.986687145 seconds)
  done (took 76.367718133 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.985970793 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.2652237 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.03181226 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.98236338 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.820900705 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.988634213 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.043592423 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.996644925 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.988642779 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.127859398 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.279113944 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.03193128 seconds)
  done (took 91.454012649 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.990142916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.984398014 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.98478137 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.985672544 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.984554742 seconds)
  done (took 11.845828916 seconds)
done (took 2220.411186081 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.227152526 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.041873833 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.081942518 seconds)
  done (took 6.037133781 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.131773401 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.17627652 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.289640537 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.055107776 seconds)
  done (took 10.572153072 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.263906135 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.352293031 seconds)
  done (took 6.528221811 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.341410992 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.996173659 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.367515205 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.98719975 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.987813345 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.987670184 seconds)
  done (took 22.880962061 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.988704461 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.984537467 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.986762395 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.984048891 seconds)
  done (took 9.85644575 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.984058378 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.659039032 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.984140778 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.992487968 seconds)
  done (took 21.532982043 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.129145436 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.995689183 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.122314408 seconds)
  done (took 8.158595236 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.132320398 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.820504359 seconds)
  done (took 6.865368159 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.12831802 seconds)
  done (took 4.041118708 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.01297969 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.260506299 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.475925408 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.511815292 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.580471075 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.74435112 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.303518597 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.251857005 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.388289489 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.418140774 seconds)
  done (took 25.861522373 seconds)
done (took 138.175695907 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.343517638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.000118144 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.185364695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.344397726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.214177945 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.181778301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.208771331 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.333745463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.017757128 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.007527979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.347876118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.20822672 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.152279593 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.002295375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.159360438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.99756236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.206802297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.347861938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.019596313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.26146162 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.211844196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.994007614 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.186729712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.005833552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.207482698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.134140876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.533812964 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.999351922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.172833952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.543192671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.137000427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.412943996 seconds)
  done (took 171.995537508 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.987165454 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.988032884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.989337887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.987268202 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.309079086 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.988413895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.989487934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.987207923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.309687288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.29854863 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.986111739 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.292153364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.98985688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.98902005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.991357456 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.987659247 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.46478757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.991054727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.989010054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.988063355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.992150591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.145217979 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.990026558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.159722968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.449363917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.992501493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.98756693 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.988238897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.990020926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.98882023 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.989189347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.989232122 seconds)
  done (took 212.083253139 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.988671125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.992031944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.992278178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.988896538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.989970659 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.992929523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.989407531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.993155199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.740811762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.732513508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.988214175 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.991643336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.990568354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.989536562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.994625092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.991560002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.991687548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.991217249 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.991943754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.99340992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.995741406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.689648793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.006907578 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.709561977 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.990431547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.991976339 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.991296749 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.993493683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.994014954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.992560024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.990365042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.992089811 seconds)
  done (took 224.57074603 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.23090269 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.993045089 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.99266482 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.000819161 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.995262099 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.990059183 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.982975499 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.238751497 seconds)
  done (took 20.346491843 seconds)
done (took 630.920920575 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.361452919 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.75891899 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.130229299 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.014996081 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.264103565 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.059351803 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.014602285 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.074108606 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.842018982 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.083892985 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.418765961 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.019308201 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.804352475 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.041247105 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.131235742 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.0695725 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.357868313 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.68742646 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.148286702 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.676586225 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.168920716 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.943350982 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.089164243 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.874148674 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.439816229 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.971670689 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.026027112 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.358945999 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.019975247 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.16688341 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.629949496 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.278409942 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.027924566 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.010360599 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.067315673 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.043185435 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.215070622 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.023914959 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.129797067 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.732075957 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.667966566 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.730161715 seconds)
  done (took 105.494540129 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.003333573 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.000271706 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.999950676 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.998978727 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.008440291 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.000808545 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.001839767 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.999935381 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.000258518 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.000478655 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.00155705 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.011499894 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.001354661 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.010593065 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.002569112 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.00355118 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.001374299 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.009348586 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.001123962 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.001029849 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.999844535 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.001884651 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.994901694 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.00079365 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.002457414 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.001052316 seconds)
  done (took 53.992655401 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.998027275 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.156612146 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.238949676 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.016697221 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.998567646 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.000173767 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.026490389 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.003307405 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.997816843 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.998097851 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.096074659 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.001842369 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.011088953 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.236350628 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.014551672 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.995752322 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.997164738 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.998222693 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.165520945 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.011820896 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.026638288 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.001491889 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.025806984 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.016106042 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.001330545 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.998878454 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.001535043 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.413181119 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.009451128 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.100849633 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.042786593 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.03363008 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.348381099 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.248900427 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.053004322 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.008098168 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.999656231 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.10585213 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.006971772 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.998440737 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.026641564 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.004581445 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.24130178 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.527230159 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.011821674 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.000612374 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.410186907 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.114928284 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.037729411 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.010781241 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.247094888 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.014831936 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.998826325 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.999489223 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.034632265 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.012659954 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.999977299 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.260310297 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.015794568 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.027802466 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.007463691 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.001370585 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.174587288 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.007982552 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.164795702 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.008470209 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.00577076 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.002769273 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.240408105 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.018928781 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.535104773 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.012697061 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.998701121 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.100733167 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.170833536 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.439703691 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.01486496 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.177885252 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.364770369 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.036784247 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.011961344 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.396175743 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.042954047 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.010839017 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.99760388 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.999477642 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.998391847 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.045084587 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.026767059 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.451097771 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.533963252 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.276884678 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.038647065 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.013522676 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.002193107 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.260169481 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.01001937 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.998995159 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.231681849 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.544404939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.013791555 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.006951462 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.514975862 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.015989245 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.03054693 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.010677505 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.251865416 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.016737768 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.046231705 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.000920231 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.008281615 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.004439417 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.029393042 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.010784663 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.999521138 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.508504234 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.119148392 seconds)
  done (took 247.292222277 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.001310489 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.001791117 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.000224871 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.999991605 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.001385912 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.003660437 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.001989579 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.001627071 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.002473687 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.00083381 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.999744419 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.002268297 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.001319278 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.000750505 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.040560916 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.003593214 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.491716015 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.00205576 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.000868118 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.003006986 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.563582303 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.0064078 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.002086821 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.002124515 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.001097866 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.002515081 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.007867447 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.042834041 seconds)
  done (took 171.120487432 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.002841082 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.05709533 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.013801257 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.050791949 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.01498787 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.00325887 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.097878023 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.020471713 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.006903754 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.003497703 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.002356113 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.034364617 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.009687089 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.099375046 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.034039362 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.10767375 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.104143395 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.009203214 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.004012794 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.003434239 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.050626166 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.017094478 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.034941928 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.065132713 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.015266539 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.059548793 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.017220316 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.00425152 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.004197597 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.113946261 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.025464864 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.035186614 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.039879415 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.025960813 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.119649398 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.119184485 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.105677007 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.105822896 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.010247614 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.003240513 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.004515154 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.006656817 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.059992667 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.016350916 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.006701048 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.118617993 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.025316177 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.006998344 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.00464795 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.00455216 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.017671221 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.022143392 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.041418257 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.125634672 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.053860898 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.033388282 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.100255614 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.124024497 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.006459723 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.100732423 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.012473178 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.116712266 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.030006152 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.007227242 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.007437763 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.00893832 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.052997509 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.113771289 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.107580402 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.014086664 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.100625615 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.060203973 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.018846937 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.006781844 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.006089753 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.062048173 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.114330562 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.060918615 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.064587793 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.042293196 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.01552424 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.007488039 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.008541473 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.032412304 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.01453146 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.116726933 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.120286419 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.013525061 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.005506728 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.009140189 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.006958134 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.032833672 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.069336871 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.045678651 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.111048926 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.043499738 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.044263237 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.013923475 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.021668492 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.01050951 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.03960436 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.014563465 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.018761964 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.28177935 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.038034414 seconds)
  done (took 216.610217023 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.378195856 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.051082803 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.080753227 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.282807442 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.356470411 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.926488154 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.046218466 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.05590872 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.064083187 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.182423507 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.11110162 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.106343412 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.044625765 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.032733556 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.049974112 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.068418634 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.079339994 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.359182939 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.244161273 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.522255571 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.048677015 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.334028322 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.389470907 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.411723874 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.099670056 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.434274915 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.631716414 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.15136872 seconds)
  done (took 66.48144766 seconds)
done (took 862.911025503 seconds)
SAVING RESULT...
DONE!
