cset: moving following pidspec: 16060
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.316804215 seconds)
loading group "string"... done (took 0.585559471 seconds)
loading group "linalg"... done (took 8.05038734 seconds)
loading group "parallel"... done (took 0.17878544 seconds)
loading group "find"... done (took 1.220856565 seconds)
loading group "tuple"... done (took 1.92461313 seconds)
loading group "dates"... done (took 1.29193927 seconds)
loading group "micro"... done (took 0.269563863 seconds)
loading group "io"... done (took 0.918793853 seconds)
loading group "scalar"... done (took 39.264807611 seconds)
loading group "sparse"... done (took 12.213342396 seconds)
loading group "broadcast"... done (took 0.95405 seconds)
loading group "union"... done (took 13.842444884 seconds)
loading group "simd"... done (took 4.794373385 seconds)
loading group "random"... done (took 9.253112379 seconds)
loading group "problem"... done (took 1.597044332 seconds)
loading group "array"... done (took 21.503677633 seconds)
loading group "misc"... done (took 1.618083029 seconds)
loading group "sort"... done (took 3.350429031 seconds)
loading group "collection"... done (took 18.139207829 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535229053 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126004493 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137666848 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120565933 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149941642 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117876839 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125305292 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08434555 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.847093813 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154255484 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114828231 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417201002 seconds)
done (took 5.291608738 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172471878 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088282121 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079482706 seconds)
  done (took 1.199907358 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066197577 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127585284 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067457853 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067611982 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068209231 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067153243 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067502046 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067475588 seconds)
  done (took 1.564305315 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073327518 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069229734 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066763493 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068353706 seconds)
  done (took 1.311572351 seconds)
done (took 5.356030997 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.800134914 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212085636 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189674059 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413416683 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136544838 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180434174 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650311988 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327951758 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204244862 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095336591 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114121278 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.363072996 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12421408 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644558705 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081641344 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097377492 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141721408 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435556826 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071785549 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085574017 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093312457 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133379039 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090028635 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077001457 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151332261 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070442708 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145091985 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084221802 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069130969 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221252542 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175554631 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663045363 seconds)
  done (took 10.413858333 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102661286 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099942527 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069845794 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126246601 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100700604 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070508626 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075871349 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068283586 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093211201 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129665375 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091822627 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108837643 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066681158 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070150028 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083604571 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198614603 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083106009 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081863863 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069383938 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079110843 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108147964 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078578881 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080696232 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080405986 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133699178 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.172537734 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098394575 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098747767 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067380268 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081888818 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115809182 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131341916 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068657986 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068811365 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126221183 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097357644 seconds)
  done (took 4.551508796 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.020030747 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152062024 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090678955 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135400589 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065977103 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110379693 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069054854 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083416011 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239002257 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.36555763 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.632248956 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.148005371 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117286581 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105208957 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071399006 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069715211 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068130588 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.285549832 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099171021 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113784605 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084144608 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070938829 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070021444 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065424573 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071940439 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064812287 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069935477 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088341326 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076097477 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.331051612 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124595234 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069226027 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951088861 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166239263 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068114148 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1056001 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166554722 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097478993 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140006757 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067552756 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064211 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.294875518 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065621157 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072304198 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094073971 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066886059 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085446998 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109831618 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123279406 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066102574 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066662636 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169591895 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067737013 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085254724 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.228272558 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156639638 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069233533 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.304995668 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093105189 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072809864 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065875162 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190495628 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127743934 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069529293 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069016011 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069590145 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069099817 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.376224239 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066485866 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.937189466 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071258051 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076965681 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070896814 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071999727 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079940154 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079934387 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09157252 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064517496 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067481143 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074337573 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070263866 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066629624 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067399094 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093619868 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.388686984 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068218198 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072417742 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065715367 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092263574 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099551622 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069683506 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066513433 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101926299 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064779725 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069603777 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065757144 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067934122 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117143408 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063875689 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069464 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.214635128 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07099337 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085398685 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102739544 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071040359 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101812321 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083502426 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071852958 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.46678675 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065870207 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07381741 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067448949 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068620269 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067550651 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08220591 seconds)
  done (took 21.896467438 seconds)
done (took 38.914061198 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242596937 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08355499 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083758113 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084308432 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083858325 seconds)
  done (took 1.703830229 seconds)
done (took 2.809216803 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126201167 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099151219 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064974473 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097908839 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064918172 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101197842 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100565713 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086250369 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100005582 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065109247 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097537112 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065568123 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065075066 seconds)
  done (took 2.254967683 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082633021 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083077136 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069777775 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081913189 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063173457 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08176286 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081075391 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088657423 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08093919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072774213 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06291019 seconds)
  done (took 1.946553336 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081864294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083744718 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069450558 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082009742 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063551736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084672959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081510968 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085208919 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08159892 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07365448 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063030577 seconds)
  done (took 1.946005324 seconds)
done (took 7.237749275 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076748538 seconds)
  done (took 1.162827644 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533142986 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.613684118 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079071256 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100820296 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.1926192 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109630019 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235946144 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.081997177 seconds)
  done (took 8.206169121 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096172424 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07051696 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069172781 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069603537 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069532327 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081988174 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07030637 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069474891 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069507384 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070036089 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069830969 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069494577 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07056424 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069247539 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070966176 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070748829 seconds)
  done (took 2.330859848 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09748418 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096099868 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074262786 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075618526 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073291008 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072220018 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075397234 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074478602 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071222882 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073161931 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075854945 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074111638 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073605979 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064659614 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074895666 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077181041 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071967982 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075107041 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075624804 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076332313 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075794273 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064613136 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073650476 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075038896 seconds)
  done (took 3.010282862 seconds)
done (took 15.805442916 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116689814 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078787567 seconds)
  done (took 1.29008264 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079494571 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080810446 seconds)
  done (took 1.264863181 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077428318 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063168156 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084951085 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074473419 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064045864 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06341499 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083297301 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063900165 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064147968 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064431604 seconds)
  done (took 1.808318703 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066158938 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073789672 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070149414 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079660486 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070933521 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065092337 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069086772 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065694614 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074117623 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063625681 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069241453 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083618806 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068544589 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085317825 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068791495 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068387892 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070547205 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067264671 seconds)
  done (took 2.388223896 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063184322 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064639379 seconds)
  done (took 1.239452457 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066921759 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064033517 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067473944 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067087699 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063717539 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063055791 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064422025 seconds)
  done (took 1.564841808 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404413448 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121796863 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330748222 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070513198 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080032363 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256750924 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06478243 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069609688 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069562435 seconds)
  done (took 2.618720002 seconds)
done (took 13.283408154 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080664835 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086049605 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098329187 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412045377 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093783159 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068203306 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114065719 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182317656 seconds)
done (took 2.257210231 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.2128793 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.073754011 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.481416706 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207263129 seconds)
  done (took 2.875908246 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.457422246 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08085264 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077010289 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066969532 seconds)
  done (took 1.806374699 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067426932 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070177493 seconds)
  done (took 1.256186511 seconds)
done (took 7.269762306 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064932195 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064383077 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090623049 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064951096 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064989605 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064933903 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064873116 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064716569 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064748826 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064853563 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065009075 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064881569 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06456447 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065052433 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064936739 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065219627 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064551732 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064591937 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0651005 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064941176 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06506064 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06462607 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065128184 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064627002 seconds)
  done (took 2.734343533 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081185965 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067444487 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068634236 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068369799 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069566126 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068555489 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068533612 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066999339 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068914812 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066759806 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06885889 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069399258 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066726558 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069314201 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066937861 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069373399 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068669918 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066935803 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067274973 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069107514 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069097023 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067365824 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069360277 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069079374 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069157718 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068960095 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066866105 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066752028 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068771388 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069105118 seconds)
  done (took 3.189409928 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06488008 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061498815 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062197339 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071063414 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061685654 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062303831 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060692333 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061517615 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062736658 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061775578 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062403013 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061076947 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061172606 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061849001 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061918209 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065456291 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07862642 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061594367 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061533844 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062316938 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06523903 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060973813 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061246945 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061032346 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064197896 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061676322 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06185797 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061224637 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062078535 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061452677 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065455305 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065588914 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061218927 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070011562 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065906698 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061508172 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065121084 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061214181 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061890497 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060959721 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06097328 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061465912 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06117255 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070037182 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062129213 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062456963 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061382746 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062661575 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062021952 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063161765 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061055861 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061264639 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063133183 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062317687 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06666309 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061226818 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06185352 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060957132 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062075483 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061463063 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061307119 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060939557 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064242283 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062049727 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078477357 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070326787 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06141016 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063367538 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062120402 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064544018 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063213811 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077186096 seconds)
  done (took 5.696003582 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086126064 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087795326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06626078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066657805 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062177271 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061975607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069947934 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062288775 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066590511 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081748282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062191422 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066748574 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067136265 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066324298 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062365215 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066979011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07068278 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06223694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062230066 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066103772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062392153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070068103 seconds)
  done (took 2.64143225 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146976882 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068199193 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105886525 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072663216 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070970029 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073059155 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068212094 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06797078 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068108113 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068416997 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068595165 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068054651 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07084453 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069264535 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069154586 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068511209 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068131117 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068654416 seconds)
  done (took 2.498374933 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078545876 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067128614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08694315 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066956183 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067718353 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067391928 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071481075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072578682 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067018984 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067976496 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072605591 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06727042 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067118743 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067557953 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067320747 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06724759 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067172569 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067820579 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072331294 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071534583 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071252193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071935273 seconds)
  done (took 2.681685421 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087571092 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066381999 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083312758 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068405072 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062230131 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062301635 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067758327 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066447792 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068278389 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066462243 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066783943 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062414328 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069209168 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066783764 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069773376 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067224567 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066773189 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066827512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066406687 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062228856 seconds)
  done (took 2.502800469 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083797397 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065747244 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065471077 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071462329 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065743315 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065208375 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071681407 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065182034 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065336271 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086513763 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065345243 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066017975 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071748302 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069159347 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065102655 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071477173 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073916382 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071693951 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065244271 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065453624 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086231697 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064928291 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071816671 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065419022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065178916 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065042859 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065525279 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069460567 seconds)
  done (took 3.084361309 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065663151 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06460428 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064953968 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065275262 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065024608 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065307364 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066862775 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066993695 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066438569 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066830124 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066774917 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06622666 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066491087 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066253202 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065815488 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064899411 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065121834 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065181736 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06527803 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065627616 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064723976 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064589197 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0646912 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065556859 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065174765 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064754792 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065279601 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065337179 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064785641 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065303262 seconds)
  done (took 3.110064449 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075685126 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074264981 seconds)
  done (took 1.29331798 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063938779 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079485963 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061440086 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073232772 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070796654 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065622343 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071676574 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071200678 seconds)
  done (took 1.697441516 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085590739 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076068503 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064575074 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076161389 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075375122 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0861039 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128350911 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064984251 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074539757 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065436349 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082563729 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066623093 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074562698 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069387854 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074385665 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077888265 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06215652 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069102502 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065617774 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062813704 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064660579 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077349398 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073525247 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062157527 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069569247 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091321063 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080330287 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063629042 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071115146 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076179143 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073959228 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060910764 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063764121 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06469598 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062265467 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074654752 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082677873 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071455346 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076249038 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064286841 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071935004 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061812856 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072792281 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074304885 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079705759 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063974566 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063873336 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061643279 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06482576 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069917777 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062330165 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068363599 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061683377 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075645475 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071359818 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079085924 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062631683 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069643046 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070694285 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07096488 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075599478 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070406761 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073482732 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063579097 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079355995 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073674881 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075676696 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06168952 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060914375 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061872401 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077652681 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092315695 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073734596 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064301622 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064548225 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061834055 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071035743 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064524464 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072679154 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075215466 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063504338 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06841512 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075560329 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068275049 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070118694 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06995091 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06208192 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067200831 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065102011 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083697689 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063049278 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06185916 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0651186 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079293266 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073930293 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06376688 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065233555 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07579856 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060932354 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064127794 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064658999 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068763287 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075709482 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06680483 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066937056 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075949531 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071707918 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067677854 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069200458 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060033727 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063425766 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064954139 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073486904 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059739605 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069212329 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066448695 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062890292 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073967648 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060906987 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062702065 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075109748 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07371611 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060743641 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060059398 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069383605 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062267999 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065154267 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075673914 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061340313 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06116834 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06088538 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070020953 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062170028 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070489384 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065966281 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07008504 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.185309965 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064279715 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069883618 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077614885 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06854742 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070993863 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075092886 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070750851 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064022914 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076917953 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071339381 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067050027 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073608154 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068028082 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062341908 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066524517 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070638137 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062677209 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072031603 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066701662 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070898307 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065117361 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062810557 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070290936 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064760556 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066477711 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069207697 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063231215 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079720043 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070307238 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062034173 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061887385 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071332752 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065431558 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06369675 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066053199 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070278579 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064571512 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062438785 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064564098 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070794797 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072119619 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066890629 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065622971 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074040781 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081467853 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06352651 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070809257 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063598154 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065193211 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064493417 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078375324 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074477983 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068141329 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070799519 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061136892 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073186833 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076258885 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066548821 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062294658 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066214959 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067843319 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075537149 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06783914 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064526017 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062427505 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069848259 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066540082 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07139979 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063930879 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067342911 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069154572 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062698963 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069874406 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064539817 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078246652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071326866 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062006048 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066307246 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062348672 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074874234 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062109847 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064930624 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066582637 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064602723 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063092558 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070533477 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061370867 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076291904 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076357012 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069035962 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066654304 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063142966 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075998788 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069721823 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072177705 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07123445 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073350857 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079175039 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066969182 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070428927 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078687391 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063635174 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061246224 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073520784 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065221014 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06288952 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063176301 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062619021 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070754182 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070071322 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072821971 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059968796 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069155286 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061505317 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065539068 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061288748 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071364087 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069050847 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066809047 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074602853 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063191398 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062299708 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069683909 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.061885083 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062776478 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063248721 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069373948 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062906234 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068818904 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064786102 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068151882 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064844545 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060890751 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068277036 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062578855 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068316406 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071533677 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0621376 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068828907 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069544701 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062593996 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.198547732 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069359742 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067629843 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072753166 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071227953 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069710018 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071471062 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062759197 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076632845 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064685214 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076943582 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06941317 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06200064 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070419935 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071636944 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068629696 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065227357 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06413687 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069642934 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064385195 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070580791 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076699423 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065389703 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080303743 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075359823 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070163072 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071311186 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06932469 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069916449 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066704024 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068303996 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064830032 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069530677 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063749437 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07259391 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071332684 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068841338 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070355219 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064419646 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069739866 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065805708 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061290108 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066393717 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067285615 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063645679 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077360536 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064249201 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06710774 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063288625 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065382564 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063808084 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061497818 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070856693 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071863551 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064595598 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074649318 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066640512 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070716469 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079558741 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061325954 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062430011 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062555083 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065162386 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076233475 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064238849 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077251897 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069363911 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066382721 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061771756 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064568462 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062580914 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061498937 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062337176 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072159172 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066466718 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063279573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063916203 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071314912 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06530565 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076389434 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063314327 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068494502 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064417311 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061648726 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066752965 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06618609 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071137596 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065061071 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065355473 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06198353 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063514959 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068434443 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06986744 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063633643 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069924012 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075825686 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063757673 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071185865 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06644054 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061838148 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070779062 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06414587 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064323137 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066183558 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071612322 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071748877 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064570558 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077844352 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06353459 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072546654 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063987447 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062076964 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062829108 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062989394 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.062989608 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065630731 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064084475 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07641329 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061340146 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068935599 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068218958 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066580046 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073010133 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063427 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06880376 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067990753 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064568397 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069001041 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075445018 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065618415 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069444256 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063292668 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067965686 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071936366 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064652881 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074071569 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067812098 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063583474 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068207671 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063899973 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062635541 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062304922 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06170628 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072314981 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.195157371 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067779592 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067588176 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06365792 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069494459 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067589888 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078071292 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071825415 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071696283 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062672552 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062870884 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065468434 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065282317 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070643655 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071964953 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073915532 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071082603 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067774693 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063120301 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078479684 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074002586 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072197418 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06577357 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071895867 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064772424 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070926118 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069361861 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068938486 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065570519 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072195725 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069865044 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067357898 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074584542 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072517702 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065007337 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069929605 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070593902 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069130505 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061978363 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064333942 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070928813 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073364145 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070709546 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064098637 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079206506 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065385696 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06929244 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066890502 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063449394 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072980494 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062269274 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070457112 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06498736 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064879806 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062592407 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066811397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065770781 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07095446 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066751738 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062286529 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079562092 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078615412 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070540128 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063570462 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063036569 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062416554 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062733026 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066759347 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064979997 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069982772 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078899213 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06652072 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066923271 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062857877 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064214252 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071840379 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072015923 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061981738 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062338596 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066349599 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070332301 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075634937 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062972239 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063896004 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071350759 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070701668 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062780244 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066766306 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061471695 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071753231 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080842094 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064894628 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070065058 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073909684 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076871825 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064695815 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062526537 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064317232 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070628548 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069422665 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064885792 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065215407 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083262294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071083292 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066181998 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063089389 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070591905 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066526044 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077656269 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064482939 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064441789 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072315758 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0729836 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07090186 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073673099 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074144758 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06944327 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068953541 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062274259 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068388654 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062217563 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065665213 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06379982 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063094375 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066809856 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069013015 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06528423 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078017612 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078329733 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065532384 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060262016 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06524639 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065400909 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061959036 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063702226 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061740747 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061855096 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061364299 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061862316 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068401789 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071286167 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066427505 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062786787 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062143157 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.190492239 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07505733 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071714772 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071286399 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063015131 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065249181 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065148794 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073488562 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068261251 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066676852 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07112736 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069860935 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070194963 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062557131 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07555536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064124273 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070613761 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06638866 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064069937 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064716382 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071896144 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069227026 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065867303 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070962681 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070781843 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066063811 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062196434 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062090794 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073664865 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06310126 seconds)
  done (took 42.392221423 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101207168 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064521071 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062847016 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062466489 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072698998 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063750646 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062298448 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064021055 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063891533 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066312444 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062901122 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062540591 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070012286 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077812638 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073525033 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067026982 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062176452 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063459197 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06252094 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063769892 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070784793 seconds)
  done (took 2.657091939 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070748769 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077861767 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075079243 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079999834 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071785755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067703884 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075310065 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067692585 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075515381 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072784687 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076153803 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067870339 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073194054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072950367 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073199863 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067879492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07668751 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072128878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068484293 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075734779 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068274509 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075713515 seconds)
  done (took 2.829184897 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063886706 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063264109 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07033588 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061467333 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063178683 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062052342 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066305871 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062058944 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06566207 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066216719 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066212401 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06608822 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070379147 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062389093 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067076717 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06212158 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108318413 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066055099 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063780666 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064322953 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062472998 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071037545 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062014133 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062402788 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065823956 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066276923 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06359514 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062361958 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063348685 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066606872 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063450151 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061797756 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07042058 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069383045 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066175183 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065569238 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063032525 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063799983 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061958337 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062307156 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069338606 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062846695 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066722317 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070177536 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062292026 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06219412 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069888931 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063231169 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062284256 seconds)
  done (took 4.453101664 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075220493 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110652337 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068729673 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091594232 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076927584 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069446242 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068806522 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092455042 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063661774 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064825659 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078676255 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078031614 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066108923 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067344234 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069900793 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06641785 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067072921 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065108572 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069272139 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065429964 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069250189 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06993197 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07685621 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077560546 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066835616 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064744706 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065300486 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066983126 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076785323 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069767405 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067740571 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068770419 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.093366952 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07055458 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064844175 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065127878 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077804547 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065834929 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065367078 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064040167 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065138008 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067085204 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069783234 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078404213 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065839988 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070358353 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0655225 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063274437 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077382557 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065367583 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0700086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07804174 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066477722 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066303221 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067162604 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076809215 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06570645 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064255585 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066172736 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076551966 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063558401 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06649678 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077675409 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065345943 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069663479 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078132175 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070752322 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066630807 seconds)
  done (took 6.196055279 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073020509 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09433771 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079782457 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079418642 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073500176 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073782189 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073620146 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073964274 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073113068 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077314951 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073441156 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114332836 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069161891 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075330548 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073612856 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073571777 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073526482 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074067706 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073753826 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073572664 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073495769 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079920809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073602534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080217358 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076273886 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068878021 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072859765 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073151528 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079831729 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073223251 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07639686 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073257366 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073342961 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08026935 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076466802 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073431817 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063739551 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073709406 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07331574 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073244127 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069474319 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079864507 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073406164 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069517104 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073561243 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073524342 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079720585 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076043863 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074933415 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077225648 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073525662 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079813291 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073425319 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073449081 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079644258 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083126059 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07939644 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079946474 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073365868 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079175396 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079674387 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08246823 seconds)
  done (took 5.993118715 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07800317 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070222267 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081460152 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062085758 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062054042 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072421389 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061974686 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061897096 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070422701 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073181211 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072523311 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072212575 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07477912 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072994735 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071985881 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074610357 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072235592 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072258066 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070405552 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072026388 seconds)
  done (took 2.691566689 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07671735 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08131046 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067825734 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07211717 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067223649 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071870842 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067152082 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067816779 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068041731 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067639879 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073533401 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07382756 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068602397 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072311249 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074216361 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072790076 seconds)
  done (took 2.401497545 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083601682 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071527642 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077485192 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063901306 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067218 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062701172 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063194183 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061963243 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062666078 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076408286 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063799331 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075078059 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063422026 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062375704 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063061955 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069165104 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062761433 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063740396 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063710809 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076697055 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070608606 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064818014 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067596194 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064340726 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069092841 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071299025 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065172246 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067497905 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06379619 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063801206 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069284285 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07031342 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063122317 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063825811 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062614355 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063215542 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063484785 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064480188 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069853476 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.081645849 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062355556 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068714765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063447592 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064696957 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06235768 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064061041 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062591254 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068963729 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063790398 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068799521 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063321896 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066019612 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064176459 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070788729 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066246727 seconds)
  done (took 4.934225068 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078879831 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067699456 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061852682 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062301673 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066936473 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06789632 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067897767 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067517438 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068424165 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061991621 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068488934 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066963889 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068915564 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067803357 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068149808 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067728566 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061985151 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067790736 seconds)
  done (took 2.482199484 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072843017 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066719751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071806717 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067167792 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066423745 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067047648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062263023 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062186736 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062384441 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067226488 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066725196 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06649612 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062203717 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066513113 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066837728 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06687438 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066536315 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062875935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066922879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062710639 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066602392 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062363668 seconds)
  done (took 2.714053677 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095721961 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083526015 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141165574 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079752336 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086940597 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072303451 seconds)
  done (took 1.825566435 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092319675 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097622702 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066986941 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067201222 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073172641 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070199998 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070173899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071271813 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075603574 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075418597 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070752936 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075520059 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075076223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077670434 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073153181 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073316717 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073061577 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070524844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067238507 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080491566 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070675344 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075468389 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070797819 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070852097 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070883469 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077713071 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075144782 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075378321 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07082728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075323206 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073647488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070929415 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075721639 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075753881 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067912354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075107673 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071260532 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080337739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073380109 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077292185 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067117832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07302796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075572026 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074561485 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07591384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071035177 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074350407 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070680538 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070991201 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082306444 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07337514 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07706891 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073432376 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075357422 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075184688 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081697509 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075469 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076869561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073124483 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075383207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076877825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072921576 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076933485 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075464635 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072979736 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076764704 seconds)
  done (took 6.184747355 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104341461 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068214961 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071658349 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07536481 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076981616 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07088816 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070957682 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070694709 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070922883 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06793383 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105800585 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071083524 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077748383 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077501711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071481603 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071020741 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071060989 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077435157 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068287692 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081865152 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070800846 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077673058 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07745858 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07741066 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075829701 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073252136 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071054013 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070571264 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070719863 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07049782 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074642281 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070901801 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077073133 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067784157 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077257072 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070816731 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07054997 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074709249 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071004021 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073387642 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077283087 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080358858 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070541002 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070689721 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075735176 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070855891 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070409082 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067421741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070786053 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067754399 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075293462 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075096538 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075369032 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07660781 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070633174 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07042911 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070422434 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070424162 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070676997 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072998506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079118174 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070516178 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081912737 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070908561 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07081685 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077607412 seconds)
  done (took 6.17406293 seconds)
done (took 126.178472148 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210120038 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185226629 seconds)
  done (took 1.65078716 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07362141 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104654725 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083253703 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133837653 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071172216 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105224605 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104240963 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083455016 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071315176 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071168513 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071187868 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07369326 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13671721 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071573993 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072198321 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073692822 seconds)
  done (took 2.674505931 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104089234 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16624502 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108758007 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069056313 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10434858 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077467676 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069143246 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082311108 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075933955 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0709047 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077319386 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075467543 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071045516 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077654292 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076059376 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077414567 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070821306 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077170559 seconds)
  done (took 2.807025598 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102923755 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094147512 seconds)
  done (took 1.475149515 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173545684 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133350212 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201879698 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350707925 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156462042 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.426032514 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138621123 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140589301 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112331943 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136304197 seconds)
  done (took 3.24494901 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10342046 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192451999 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293663265 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119899469 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075737857 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.112550684 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122207758 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081856589 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083726833 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083290971 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08381203 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078379736 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103423219 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076917443 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076168012 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078397812 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106357827 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074749428 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076313481 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078663628 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106067794 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070158763 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076713044 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075264169 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08109059 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08180312 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071937389 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069946066 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078468552 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075801895 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079077385 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.110248021 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080853032 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106777232 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07412106 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10765497 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078618504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076432636 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07574164 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076477499 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080119125 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079858274 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078276691 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078451778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070745023 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078708575 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071067444 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069716176 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080261166 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071143791 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080267915 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078853607 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106398686 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071405487 seconds)
  done (took 6.149920047 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108677133 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106926853 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071127787 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113104572 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1040927 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070183061 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105623285 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098973534 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107991651 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071171174 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069656834 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070798114 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079563489 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08166337 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116131028 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108199775 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072903599 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07031692 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108859514 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107794156 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069889303 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102534175 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09815817 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106991901 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068832345 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070695442 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069358338 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071331506 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076497781 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078262946 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069598273 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079366659 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083611109 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077421678 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068271594 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06946088 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0692104 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078238089 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079305256 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078714477 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077089849 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068309465 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069356399 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070513967 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070259178 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068792644 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078149972 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079320644 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077583592 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069174446 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071032433 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069208638 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070070603 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078412908 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075942276 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079197046 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078682967 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068999857 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068847477 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071923942 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079311961 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078688151 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078434329 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070306522 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078817998 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069650308 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080003523 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083485007 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07164221 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070376706 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069393019 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069309649 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070187495 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076531783 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076693854 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070696618 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069058453 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069281039 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078807906 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077478933 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069154882 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076990382 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068177734 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068892283 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070672506 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070546284 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076565636 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079118311 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071013691 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069787456 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069682827 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069137851 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068352425 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075765096 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078499502 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077146226 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076614992 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069355477 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077451497 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076345582 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069599028 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076938827 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068501578 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069598392 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06896464 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076366862 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074968061 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076890643 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068074754 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068215193 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075206438 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077266668 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068125591 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074709444 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076935841 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075141194 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066971709 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078238781 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067912568 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076320311 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068231413 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.20980557 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071016545 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079110976 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070695669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069484316 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0705539 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078668453 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071400089 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069931006 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07072791 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070048582 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078230015 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08174767 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071545418 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077670307 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077901361 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071785803 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077759079 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06972002 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078132265 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06930828 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070961293 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069148531 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081590147 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070032591 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069658483 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069480871 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079391169 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070177256 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0793757 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077318206 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068354382 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081283714 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079925248 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077355499 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079818873 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070893869 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069905528 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069199129 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069292447 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076905137 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07894826 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070671024 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069211661 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076896203 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079046916 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06871222 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077190161 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07771721 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077713842 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069621449 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06960051 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080368008 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080194477 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077596488 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077625869 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077832454 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06983309 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07694111 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077595206 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069667616 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083294179 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06954739 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081601843 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077653925 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076437163 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077871452 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079088285 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079098169 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079439858 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082033715 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06863241 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069660058 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078192718 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06974103 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069266243 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076774827 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071071093 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070793173 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.0814405 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069915803 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079113628 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068885151 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07777057 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068443906 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070415432 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082021845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069597885 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070292443 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077501358 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069066481 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076588846 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079250271 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07763898 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071923953 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070759657 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078679877 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077871851 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068962264 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068670231 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070338169 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076639648 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076073346 seconds)
  done (took 18.454182422 seconds)
done (took 37.745158785 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208412038 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154382961 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184437538 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115668881 seconds)
  done (took 2.043851255 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.109942953 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099068836 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088511716 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066340209 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094565521 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066425699 seconds)
  done (took 1.834669956 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288338681 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19702289 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178845996 seconds)
  done (took 1.974467641 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210496612 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191238181 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465336762 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28603788 seconds)
  done (took 2.55934003 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142574189 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083030738 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065444904 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083351364 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125145462 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150806988 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093781134 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119198429 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076617676 seconds)
  done (took 2.302695896 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147695041 seconds)
done (took 12.201933747 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.276432449 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.19736949 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.15085496 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.18179592 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098790269 seconds)
    (6/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076197009 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069508064 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.128188347 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.209072833 seconds)
    (10/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170367579 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.444242282 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13381023 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.17793498 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104527889 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077456455 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.241157197 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.246318196 seconds)
    (18/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073282516 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076233419 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.177822485 seconds)
    (21/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085863675 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088763094 seconds)
    (23/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.165698808 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076022694 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078642436 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.108092423 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.207172616 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070253361 seconds)
    (29/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.180167872 seconds)
    (30/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075931746 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.220976597 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.194633493 seconds)
    (33/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076035955 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085727298 seconds)
    (35/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076021881 seconds)
    (36/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066640755 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.19986136 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.24223009 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.19529451 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133306251 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090511346 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084806126 seconds)
    (43/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084067047 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067341033 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099683405 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106826129 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.121317132 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.233722509 seconds)
    (49/309) benchmarking ("sort", Float32, false)...
    done (took 0.132514287 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174759766 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175044464 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195274255 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074508203 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137428038 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.17774995 seconds)
    (56/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065154504 seconds)
    (57/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.136515436 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072527838 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074455379 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087602763 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065496885 seconds)
    (62/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189931703 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 0.155731615 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.216304439 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176657774 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.066466569 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067649656 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088078592 seconds)
    (69/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066432409 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.196997258 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073390759 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.12720503 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065697544 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074663431 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065738339 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117514209 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064654808 seconds)
    (78/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.123077285 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107240831 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066707316 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065637976 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.176545936 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065442624 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069337224 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076416061 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.321725205 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149461192 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082639002 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086844128 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067870687 seconds)
    (91/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.14217561 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067753728 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.132884969 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068527064 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115421737 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078013394 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130288424 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091215999 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076449125 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067102765 seconds)
    (101/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068185915 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067697631 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19821934 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.0668054 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067172398 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093699344 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091508749 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066943008 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088751882 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073486587 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093429453 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.173565162 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136374847 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066945441 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070393165 seconds)
    (116/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.197038754 seconds)
    (117/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067251033 seconds)
    (118/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075725779 seconds)
    (119/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.07921392 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067040938 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066588361 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067246708 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074766767 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183527798 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075878379 seconds)
    (126/309) benchmarking ("sort", Float64, false)...
    done (took 0.132252886 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.173540813 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168973368 seconds)
    (129/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.195598885 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06761974 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067130736 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076334729 seconds)
    (133/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129914008 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074997596 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092301043 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066686554 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07492786 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073984473 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075049314 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066838639 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070121982 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06683474 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073689383 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.06680147 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075293411 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066925108 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087772251 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125108221 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.179584286 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075668951 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129034759 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120592379 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104302058 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080744946 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066263263 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083199696 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065692962 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176084198 seconds)
    (159/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138738949 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087447736 seconds)
    (161/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065378816 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169561761 seconds)
    (163/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090843308 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066214458 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067167437 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077620596 seconds)
    (167/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078896302 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.194336118 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066890622 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085814208 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140957437 seconds)
    (172/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066531752 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072890307 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069386476 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068953775 seconds)
    (176/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079439789 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182808778 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068917034 seconds)
    (179/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069949481 seconds)
    (180/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078701671 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171455028 seconds)
    (182/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092977167 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078406061 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.21558131 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065951466 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065950011 seconds)
    (187/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078441064 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066329151 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065987359 seconds)
    (190/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086698224 seconds)
    (191/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078539729 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086466054 seconds)
    (193/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.13451505 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073107485 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066924035 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071827551 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089795772 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066004907 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076669845 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066760812 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065391412 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06510773 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065429911 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131753351 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072596982 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.065941193 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066955012 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066379588 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075354312 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073972533 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.29385335 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073561952 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07778163 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090698646 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068034477 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078673529 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075145577 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068313655 seconds)
    (219/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.140417301 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068492098 seconds)
    (221/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.120221575 seconds)
    (222/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067977109 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076756064 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075309901 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174651529 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068199991 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066921769 seconds)
    (228/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067496818 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070074056 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137945016 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145071744 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119119439 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068270683 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077894519 seconds)
    (235/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067781452 seconds)
    (236/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075185959 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06788702 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075200202 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075649704 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08119136 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069019494 seconds)
    (242/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066802427 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077294937 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067228164 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073780392 seconds)
    (246/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068541905 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067433096 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06690654 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074827611 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12409432 seconds)
    (251/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079985079 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090866614 seconds)
    (253/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078777303 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081718237 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067519259 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0655856 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066137621 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071121161 seconds)
    (259/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067413825 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172791989 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074673136 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065621251 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065776999 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120818585 seconds)
    (265/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068658879 seconds)
    (266/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093514613 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067105312 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067385527 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067000736 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067563738 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066633255 seconds)
    (272/309) benchmarking ("sort", Int8, false)...
    done (took 0.147326379 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182853839 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067000352 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079696234 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119677465 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067332999 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075600472 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066786427 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069094835 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120105287 seconds)
    (282/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073467263 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073026634 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093109225 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065897483 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07483915 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06672676 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091100749 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087805119 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067131281 seconds)
    (291/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074915513 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065822681 seconds)
    (293/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072948166 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074343143 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.0668172 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086486338 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06723484 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065721317 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066508566 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073614823 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074833844 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073084016 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071246032 seconds)
    (304/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079745561 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078177559 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065613367 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126649811 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069524202 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06713132 seconds)
  done (took 33.028657514 seconds)
done (took 34.34879452 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086706723 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099165654 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073603229 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093636075 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081572846 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095934595 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074298824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079655514 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081678903 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080421415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079705851 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073166343 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075510438 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075750423 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073867684 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097090292 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080654174 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074616261 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07439532 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066682696 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074704631 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066516695 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066173344 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072535366 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077762098 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073837417 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075704196 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075632242 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066449853 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067420766 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071301973 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.0754711 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066525676 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079207678 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075312233 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075096895 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076522497 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078705541 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066270771 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066997457 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076991248 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06697416 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07466837 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073069205 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071263743 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072748757 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074958956 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078544044 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097582235 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071091285 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076609969 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077455799 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078241978 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071693818 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071756491 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074393398 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07278092 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097271571 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074955682 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070906461 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075678832 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076118601 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072853207 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074310043 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074633284 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07694535 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079064004 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072900782 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076498817 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073318512 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065955283 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074614689 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071514956 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066284419 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077191632 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080146011 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065828841 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070781785 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074107275 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074921332 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068858957 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070633156 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065739566 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070938651 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070420984 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072108194 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071528525 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073483596 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066060704 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075320647 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073556753 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074398645 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066207258 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079435519 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066444956 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072442712 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066902889 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066745169 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065763236 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071382934 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065967887 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070963183 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075083598 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065434736 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071098573 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079673572 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066958192 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073499607 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065767353 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065887211 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077217563 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076502159 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06590746 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0705283 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065809384 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071762071 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065411165 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06616314 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065729802 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065761915 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07047609 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06583115 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069935372 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071374019 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07790875 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065926106 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070525752 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070448364 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066042974 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072891295 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066667266 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066307903 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065625204 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079241805 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06969431 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065365929 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071157478 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070147953 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073736376 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064294852 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073294509 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071139598 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069498576 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071249791 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06420519 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075811322 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069791848 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069070178 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064703797 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065019444 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064283155 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06439535 seconds)
done (took 12.52178154 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070569434 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117789506 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094040576 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093036566 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083277773 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06757658 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074171677 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092033376 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068510382 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096361056 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088585396 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088930702 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109647431 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065933205 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066757009 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067991403 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06846837 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078714313 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093978772 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088475016 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106000959 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067014526 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086283387 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086965515 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083879009 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087961595 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067961378 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068336442 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070032591 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089938331 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092308219 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070187149 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067946046 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090218516 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085067063 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080060676 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067503098 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075610483 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067748038 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067136225 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068555893 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087870126 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075297923 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075885214 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068691572 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075343069 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068739934 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08286239 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087651599 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075609699 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081898081 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091121618 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070891017 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083087365 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066025804 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083031919 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076376814 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067607672 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067625527 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072165223 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067669581 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06972219 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078427863 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076486639 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071913712 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081979009 seconds)
  done (took 6.604868233 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084581137 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093930975 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083534759 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083537946 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066560481 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067227324 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067449236 seconds)
  done (took 1.966374127 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070264736 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087694125 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090535991 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090660453 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080894603 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091060001 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075584344 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067753585 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096095526 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06636573 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087562822 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097593288 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071216113 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078577938 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09164216 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067332603 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091782879 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067744377 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068297615 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092013301 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071853437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094426204 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079103936 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067940519 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080029667 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067539094 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100383448 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075398322 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069089807 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068737247 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068901399 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093978616 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079843009 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079039117 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069598161 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082286452 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081503247 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071071133 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078416642 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079148567 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080862496 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068930036 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066698863 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069055546 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070252442 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079123969 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066390669 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068919705 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068988198 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086980623 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066622061 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079291399 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071708285 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073789905 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073564458 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072370954 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075482332 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069389591 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086782715 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068571829 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084421816 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083776545 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08041415 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084048073 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06723883 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079563778 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081140697 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068468988 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069214678 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069081276 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083859965 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07074033 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069049709 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078914056 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067511715 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09147549 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091239058 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067304324 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080631758 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068482379 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06906474 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079198503 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091299525 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072842521 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068574407 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07212891 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070218658 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07121333 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066660424 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071285523 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06882816 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072954115 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068510121 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070503825 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069595723 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083987286 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067135603 seconds)
  done (took 8.827801884 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070270046 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068190553 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070112298 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068281007 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068849332 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069038189 seconds)
  done (took 1.860648149 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091599442 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068238359 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081596213 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068571743 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103801325 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083959288 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083855484 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07783648 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081747497 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079930001 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083786455 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08682638 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087708984 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070339461 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083039816 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069933367 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084010544 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072530132 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079394955 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071174043 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081204692 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070721953 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070876288 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087747912 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072230003 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06978245 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077221032 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08005658 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07970637 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07808711 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070376039 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071987658 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076101307 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07804 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083401579 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07614349 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068188897 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075298229 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071094909 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071788961 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086473827 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0704211 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070948337 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075009096 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080196018 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076560591 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074304927 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076746905 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083602806 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074803905 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074262132 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069251687 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071783617 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074411648 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075709154 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077242604 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075176094 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083804519 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070583333 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076392943 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067901228 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071888986 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077584961 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072071815 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075968996 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074655256 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076513236 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070790005 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07066921 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068418065 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074768493 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068279037 seconds)
  done (took 6.923401192 seconds)
done (took 27.624462653 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516490103 seconds)
  done (took 1.919835902 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.627821987 seconds)
  done (took 2.06092495 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.722103487 seconds)
  done (took 8.152480739 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383864483 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.456387688 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.753321855 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136853746 seconds)
  done (took 3.198607656 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705503097 seconds)
  done (took 2.147667755 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236700217 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225317897 seconds)
  done (took 1.9141539 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348517789 seconds)
  done (took 1.780146577 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.054682293 seconds)
  done (took 2.486837702 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236528832 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160468395 seconds)
  done (took 1.836969052 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443538953 seconds)
  done (took 1.881755399 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.214549947 seconds)
  done (took 5.654174271 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220099539 seconds)
  done (took 1.697661642 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235962742 seconds)
  done (took 1.674501234 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.748308427 seconds)
  done (took 3.18316743 seconds)
done (took 41.02975408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083947383 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086131862 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086105 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082363771 seconds)
  done (took 1.756632052 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075709877 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071253948 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075903863 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.0711798 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075462815 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071458852 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072919902 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074120713 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071338234 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071605253 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071528903 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071358665 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074386096 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072968228 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070127714 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074282125 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075320499 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071565544 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074482183 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071764182 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069569694 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074358125 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074869401 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070814455 seconds)
  done (took 3.185922679 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079220946 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073605568 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076342733 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072766965 seconds)
  done (took 1.745237106 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077568859 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089231575 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087230678 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077928848 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.08920444 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084398054 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06861662 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067821995 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069097468 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077105772 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066866277 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093455769 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08646212 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077836967 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079736484 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064255152 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066167492 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085845899 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078092088 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078495736 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069718201 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077736128 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067408668 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087581795 seconds)
  done (took 3.308548616 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087554225 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067334041 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086556469 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09244387 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094209419 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067055722 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085225652 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094416361 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141974189 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067127166 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07297624 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067352837 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105563104 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066854097 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086346 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109844549 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113843229 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070739453 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099568812 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069759805 seconds)
  done (took 3.196911476 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084328018 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070877041 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071416458 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067264788 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07684194 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07382218 seconds)
  done (took 1.895562074 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06979107 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068955883 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068686265 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068173191 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073459898 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068575957 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06735597 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068874154 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068671115 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068326981 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067794946 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067545605 seconds)
  done (took 2.271636535 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.196219051 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070709754 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072891605 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067194204 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072954576 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067970166 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082688945 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069751291 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094279823 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067598891 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067662713 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069831196 seconds)
  done (took 2.448243751 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194911445 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074461103 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223626984 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145210735 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102839646 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110339435 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111504583 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108659381 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134831061 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098383603 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154070515 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160868429 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103979591 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130023163 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088126608 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119913539 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14522706 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15660413 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09998053 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155476153 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135563329 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122941271 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14286588 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097609959 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102243066 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114110868 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072934002 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078163545 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159835875 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123633401 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137238861 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105789608 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090678575 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165978374 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158352951 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137745238 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142489941 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082374308 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11918583 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129845462 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192026147 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08679458 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14916435 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102557198 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078074859 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123750959 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109571845 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114937841 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100034573 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086757306 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275877174 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175319272 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130280892 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084858976 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118546495 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106987482 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111384582 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115794075 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170553471 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151930006 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122246854 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070724786 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108447572 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14398159 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127967359 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1059522 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119630749 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091125434 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125774532 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152373349 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119032384 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134253042 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113133363 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085621588 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115701097 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131276895 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121411327 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163455686 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11964364 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071975318 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116547119 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096191439 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078977822 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143333283 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074609192 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165533191 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096616399 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121700576 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126185977 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10568083 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105985697 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151066001 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135072008 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101911685 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084887123 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100125168 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114658038 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136157546 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084433373 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103951065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109950151 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077728487 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126279302 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072995576 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115028329 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092866872 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112575485 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118918929 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07691228 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263796514 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101788955 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101522027 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124219818 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150753686 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0873727 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079946546 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158616747 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11867026 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101765408 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136696679 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150439632 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11942228 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096147445 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139258096 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164909734 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088383081 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153678588 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100278892 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082499711 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103647377 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119043666 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107352358 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119796635 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080123195 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116215426 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155014806 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073207583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094648852 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127808194 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080901998 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079605995 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102415668 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100942679 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094615474 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099109941 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101829317 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131362349 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118736084 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103347717 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119075955 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097262343 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157204836 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085844467 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100249167 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101934965 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07170534 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127542792 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148089264 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077339471 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150300128 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116128251 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111299544 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113353079 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081256209 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129360273 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076702337 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070842478 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132472929 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108015117 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10338647 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290539118 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111355943 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120702793 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117356017 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127168822 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124290403 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124913483 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104012632 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087408363 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11170392 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124701158 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071938074 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091014375 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080933234 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100740544 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092165609 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082122417 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133811083 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117484473 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107398754 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110495376 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094076462 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142133826 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077552842 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119294995 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117869097 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092947565 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146522479 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144826357 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127484345 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098544214 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130960527 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072475161 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073449538 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087285179 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118739469 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08310556 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082141105 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109766279 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142250723 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120647654 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130535235 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119067696 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112637009 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149675433 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071725319 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117606007 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137090993 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11674079 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102172018 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088616054 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096260292 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135579517 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099050494 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170431341 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109024676 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117293071 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147405266 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098528163 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076888173 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099767654 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271943627 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101219415 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138894528 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097694706 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086209542 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105259885 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077963709 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098030839 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123481539 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114754435 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130484801 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10929961 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124885729 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076388171 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109158701 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118895269 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118097625 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082876075 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113184311 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157809135 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095173524 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112005619 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143222946 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07800289 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135378881 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164044522 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136904294 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083131272 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101940517 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117426542 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121620476 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113643586 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132183868 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101359302 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131699719 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108037712 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083220385 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084526449 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093289297 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100504066 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109885171 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101458938 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110984696 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093421656 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123915052 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099940003 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107613376 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113751044 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09811723 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093869415 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09408649 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164569031 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112988886 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157823857 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096771228 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134294635 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149711146 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073193409 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076641145 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078555031 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128354534 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081046377 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273084734 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110635449 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113660182 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120443136 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133706757 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094845055 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071683916 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107152688 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128770179 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118699375 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0942231 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101458505 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150396418 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.116472592 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077797598 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110242206 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113515809 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102135313 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165568303 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080470915 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106789247 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075606932 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078374588 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121076865 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144329217 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081656707 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1017186 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115489696 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107691875 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121181629 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095822091 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10816784 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126326073 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139721194 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121975708 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088185915 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107339121 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123362436 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145886041 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101559518 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098042081 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165438019 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143972799 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153261131 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085935093 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110734826 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110557815 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106329774 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128939797 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082818419 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150767926 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079498448 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126488796 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097396025 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087087709 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121555313 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107884193 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084685409 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133089875 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260740016 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082833799 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080061343 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110416793 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115497104 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100714732 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074615559 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132449888 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073689561 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129767614 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162497429 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079562473 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102237809 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094125465 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08126557 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100629324 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099501392 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084525156 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098315719 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161718449 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085710644 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139813134 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127018048 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107023961 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131459444 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10157697 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641398794 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078539739 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144187424 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111786314 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167723354 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096462993 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114178882 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107389327 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116919336 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135361089 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099135596 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174917435 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124066437 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113769254 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077620073 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098798007 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100643763 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086986411 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103813074 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109935367 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109720137 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092494036 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113887241 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117201119 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080868642 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094166674 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145856687 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110568909 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133244629 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13096584 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081831974 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112113596 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126175476 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077083361 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.262136489 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146041652 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104309313 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098618768 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082020488 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098778061 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165076796 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072755184 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152060339 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116133097 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106908791 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113273577 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107027642 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126804928 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100813626 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117597465 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091751304 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107724911 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147003571 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082525052 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078151334 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102647987 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107147566 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095938673 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095900727 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09729327 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143918666 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071307259 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095476994 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111183118 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137163051 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161988271 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103776269 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082016795 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114823466 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114656306 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110698859 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117387034 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080160815 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079857766 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080514354 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098792695 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121266476 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110177327 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114670495 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105420402 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152384028 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082825012 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225071987 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09389329 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102675045 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087671007 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079011444 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094018799 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093618205 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100744229 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108075097 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162989143 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091822739 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086630247 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089035916 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073425549 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080489894 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118491311 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104632263 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262389173 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102956838 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081935451 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102626191 seconds)
  done (took 57.135262059 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119358255 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.09849108 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098927488 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145166757 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122225152 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200443029 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151396613 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189983809 seconds)
  done (took 2.67798364 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069119538 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095442615 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104528939 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08359545 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067785521 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069118014 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227235567 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081843772 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067474844 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092104116 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078347614 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069395671 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.446339884 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067092544 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068270716 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077838069 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069013494 seconds)
  done (took 3.379010527 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.386846273 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610119897 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.356790089 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076815205 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.982639651 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094280616 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.192172726 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141936765 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083702625 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539114932 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369490089 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135447811 seconds)
  done (took 18.524903428 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083051699 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077443407 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092024797 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091763491 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079182998 seconds)
  done (took 1.976606414 seconds)
done (took 104.990318602 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082687045 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.447642879 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069906 seconds)
  done (took 2.092285142 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092039615 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090487318 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090129573 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087911909 seconds)
  done (took 1.921188755 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076301147 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078273198 seconds)
  done (took 1.706743825 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230080845 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17659397 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097845367 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084581275 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081569058 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081982469 seconds)
  done (took 1.808512854 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074329023 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073643951 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074007248 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075189496 seconds)
  done (took 1.852125414 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069512605 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068003189 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069768233 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07287899 seconds)
  done (took 1.836596214 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08510182 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086113416 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080211774 seconds)
  done (took 1.806990307 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102423722 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091935086 seconds)
  done (took 1.750835762 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082166496 seconds)
  done (took 1.638994446 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.0916251 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101929425 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134322453 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115805077 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139624656 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115515572 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085058838 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085720796 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080126911 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086747532 seconds)
  done (took 2.592256834 seconds)
done (took 21.143933454 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079815642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367763815 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360862096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091689658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66923803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357562192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994715776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093820079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144374508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069810027 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087267483 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650821127 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987975038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324123881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97464281 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324242241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653735753 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069674626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06897111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070125765 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980475524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069063801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069777567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069788466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650176553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375316159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071338504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324665778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070552577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074176866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359614491 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071726365 seconds)
  done (took 16.165976049 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071436559 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123204933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074095054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08707641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071561597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070916353 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072802097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070145684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12411506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07039585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088246182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069656105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074084595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071127557 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090212194 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069510723 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072441118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070579996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070124874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071926237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089614897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069956157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07105418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073301006 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071193654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083721776 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072010803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071139842 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070629155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07475135 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075883511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072435995 seconds)
  done (took 4.049160132 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118122764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127619593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074702645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107577377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11320708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072037425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148097951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094387807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130762913 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070234906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087484166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069994671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104969868 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071686955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091828705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07081016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073851402 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071486623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070545219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071688831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089799352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070072004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070854419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070949296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0716245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085729308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072425537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070603574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07101576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07499924 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076513863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072115855 seconds)
  done (took 4.308382045 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07160691 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074646745 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081651977 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082926536 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068919343 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070940825 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072265531 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068865313 seconds)
  done (took 2.164552319 seconds)
done (took 28.251165214 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079393701 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069447972 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072878313 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087433315 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075087513 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080318379 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066225125 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075886709 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072845722 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073084193 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074707 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068430282 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071481496 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066207574 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07356501 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067520054 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082095885 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072017803 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081555513 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082115457 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070659374 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073728485 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076065842 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081939319 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081665913 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081570265 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077347053 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073915036 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069242115 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071387573 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071427816 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080228645 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082560434 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08243743 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068268765 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068543651 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072511186 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070081281 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082818558 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078030085 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069841529 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077566596 seconds)
  done (took 4.699090889 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08628925 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090176544 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083987342 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080602902 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090909618 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083391459 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087417547 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078678093 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078375817 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087119362 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075060193 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081953638 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080125384 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073423878 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078406139 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075603038 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080368783 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074989844 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078814987 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07901583 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088558715 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073901725 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088590517 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080808881 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075778506 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081038179 seconds)
  done (took 3.696169749 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074593658 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086714629 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093850054 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14486915 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112130422 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081738387 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082768723 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093079723 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098079029 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069359832 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073766869 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.0940206 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093822871 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074998492 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070165302 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085116746 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085052949 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071332682 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07593796 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097835254 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090267343 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086908877 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095490986 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086302856 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068552722 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072573227 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074050586 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087339916 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071763779 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080383258 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071812284 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072925329 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070473874 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079727537 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071626856 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068486266 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093368446 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080292435 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081553928 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069411678 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.0782971 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070162151 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094383838 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129737469 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068223941 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072719329 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07288504 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080110704 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068429437 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096290469 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080742167 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068534905 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070062331 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068311647 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068133509 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071446293 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070828085 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071260985 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079014097 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076039466 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090955508 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073690933 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086463781 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06861872 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078920561 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06799442 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070044249 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067675889 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097390092 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07021057 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113070397 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069618592 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067400775 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079994654 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079235782 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074783207 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068827108 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086312402 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080202428 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073349206 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077121126 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07228834 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072332912 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099175091 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069114185 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068402735 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067642331 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072510261 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07256525 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069467707 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080929852 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068563866 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072712203 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086754148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068725819 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07000349 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072816116 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071553333 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06850677 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079315349 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072947456 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070145141 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078951445 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069711663 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072943154 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082517849 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075512225 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067941733 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071137024 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072771291 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070182506 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070298981 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072543908 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070898936 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076077014 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075477509 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074529806 seconds)
  done (took 10.761901048 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16658299 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158268332 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071447036 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149566313 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077793845 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081279813 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152419825 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095917187 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069083578 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070655248 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069719672 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110889154 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106462689 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117293608 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082238885 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070448449 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092244194 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1152256 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154589348 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148095803 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092532554 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077504721 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072024918 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071312753 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071222684 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079619466 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085975276 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078342285 seconds)
  done (took 4.405819562 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078806988 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104581195 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074011071 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091928556 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088981576 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069836182 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071071826 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071476879 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085982677 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07886198 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069520548 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075158317 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073995547 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072569374 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070234716 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076153893 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076747461 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069187044 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073814864 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074975379 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079460768 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094742342 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073229087 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069650261 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07263575 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069135353 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077833807 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082504098 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072115988 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105573492 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066995168 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074196408 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083702832 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070415093 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068863402 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069902151 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070011751 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069595532 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0708343 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0682367 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068118075 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073025519 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068676134 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077470003 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082562044 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071430817 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07157524 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072803715 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072799312 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067094977 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072394578 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072994079 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072051441 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077269378 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073754127 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072600761 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07096953 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09600438 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076204518 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068730617 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069158603 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068448553 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071814407 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079649288 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08498 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071855675 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067981815 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069844554 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082763416 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082672802 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068806064 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074116815 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067621013 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071407285 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072586406 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07216426 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070038545 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06826585 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069430573 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073451526 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07063372 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069381204 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068677272 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072191498 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068120119 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068417515 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069964469 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071334327 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078430949 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068527812 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073458041 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070601786 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068616389 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072324043 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075024113 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073112808 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08030903 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080741688 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070035089 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068429078 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082891847 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072504584 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068771005 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075959217 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07409011 seconds)
  done (took 9.410300672 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092370391 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069999183 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086440121 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092797558 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079481735 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075424449 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080256922 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06929644 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085649572 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074834837 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077430728 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067981385 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08066651 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079254356 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070079419 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079657296 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07212977 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087242545 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084010358 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067807475 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0779842 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081785984 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08120144 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084215897 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083153295 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085020397 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081934965 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079518852 seconds)
  done (took 3.853944445 seconds)
done (took 38.390832249 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.666689917 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.901297106 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.645755615 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.871678405 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.692899979 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.867227129 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.736366796 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.650086136 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.896597147 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.687543029 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.988366265 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.884124798 seconds)
done (took 64.209205801 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.6676095 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.795115248 seconds)
    (2/2) benchmarking "String"...
    done (took 1.891141691 seconds)
  done (took 5.267542624 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.830521042 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.346307189 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.871724105 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.639631819 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.64725142 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.89412764 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.423516218 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.085471393 seconds)
  done (took 29.490212756 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.84858851 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.865873798 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.35317941 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.394382447 seconds)
  done (took 15.092005259 seconds)
done (took 61.024524224 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.667517121 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.681858381 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.650237375 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.640753889 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.733783837 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.659254735 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.816931935 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.679594914 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.641311193 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.652699545 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.642909257 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.059068212 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.645404024 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.77821341 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.644700577 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.640025599 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.641189944 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.157532649 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.793854422 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.650923809 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.650318848 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.702348534 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.64757581 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.642814118 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.643761054 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.642387581 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.029009769 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.643162018 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.46257079 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.646282908 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.693957064 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.03390244 seconds)
  done (took 199.497019105 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.641972054 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.634100305 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.69661774 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.663895343 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.207136442 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.832594946 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.743711417 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.21786893 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.643047833 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.650903321 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.757827967 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.642439691 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.779180432 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.583701916 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.677278119 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.693017893 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.819975347 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.79573232 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.680754739 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.803430236 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.655736066 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.665924029 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.616131819 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.743495293 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.647979717 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.736075427 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.651762397 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.647763502 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.832560639 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.77617032 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.659931576 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.681753591 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.845366166 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.511224345 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.667217185 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.646073464 seconds)
  done (took 164.735211895 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.838276059 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.643608169 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.641477189 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.641712067 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.648203674 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.64305028 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.764453189 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.76958337 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.308041418 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.98904678 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.701198185 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.643779755 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.43171716 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.647079686 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.709300624 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.653786914 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.642244226 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.65689872 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.669387784 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.645048975 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.643187168 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.765707599 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.658562125 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.642296216 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.651141376 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.641978776 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.648971399 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.029520071 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.64246292 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.822098172 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.645693427 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.649216462 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.884093172 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.644254223 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.643446253 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.474539025 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.540419542 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727091896 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.645734342 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.650880044 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.643134229 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.863064709 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.644119428 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.645062686 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.644027968 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.644509636 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.644823347 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.76290107 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.64747412 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.76668859 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.646410955 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140264166 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.646864735 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.645977189 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.88337077 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.253006423 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.647370287 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.646487475 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.644105969 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.644443227 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.649834267 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.828611373 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.717485091 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.647664563 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.645342377 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.651019846 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.645213073 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.682086784 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.646199072 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.969940471 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.660140533 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.765268529 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.767089829 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.649067416 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.710435636 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737342529 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.6448266 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.643972242 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.644593348 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.645234722 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.645638515 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.725071532 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.645393804 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.728261142 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.655628169 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.646638766 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.69975782 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.7150546 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.646267949 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.468317697 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.648332817 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.646355042 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.917097766 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.648369413 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.709787123 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.646287721 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.646972398 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.727850186 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.64663874 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768934903 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.368451792 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.649169225 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.773409183 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.723163953 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.647255927 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.771384316 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.650406895 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725685409 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.654311463 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.648004875 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.681282043 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.647760313 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.658858845 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.646044656 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.018320934 seconds)
  done (took 385.204951972 seconds)
done (took 752.918700164 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.253835975 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.218306943 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.3135518 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.234091866 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.212982789 seconds)
  done (took 12.820344761 seconds)
done (took 14.407996454 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.726003675 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.729221189 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.666474269 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.726282846 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.662928549 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.727396882 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.711766337 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.669637507 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.697241996 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.668865908 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.696932751 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.670019469 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.655850372 seconds)
  done (took 23.596804781 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.871532262 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.870589516 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.713254422 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.868189222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.689904768 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.869507097 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.800702822 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.787149002 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.786867675 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.661096933 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.657591549 seconds)
  done (took 21.165165752 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.88791531 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.88266963 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.719810502 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.875717044 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.692664641 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.868890081 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.802960694 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.794171439 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.793812771 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.660727336 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.65833134 seconds)
  done (took 21.226817408 seconds)
done (took 67.575714073 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.651183023 seconds)
  done (took 3.240795245 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.670802057 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.828611885 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.651974021 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.652764348 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.651412316 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.652547855 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.651048927 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.651846785 seconds)
  done (took 15.001034168 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.652031758 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.651755381 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.650976807 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.6508139 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.652072011 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.651546643 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.652167428 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.652058186 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.651247775 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.651585293 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.65095114 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.653018307 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.652567996 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.652595761 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.652024117 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.653290754 seconds)
  done (took 28.021281138 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.653902416 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.653293502 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.65301736 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.652734087 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.653429562 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.652778956 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.653151567 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.651831053 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.652592165 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.652766208 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.652158879 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.651230804 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.652827574 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.652210815 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.652549249 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.653053521 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.652417289 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.651917257 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.65726786 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.653249447 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.652675933 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.653147995 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.653585931 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.652727026 seconds)
  done (took 41.263946434 seconds)
done (took 89.115716363 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.376646549 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.488637136 seconds)
  done (took 9.457760143 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.657243432 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.65439787 seconds)
  done (took 4.980274393 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.65354862 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.653558288 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.655486491 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.654143725 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.654098393 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.653497491 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.654209285 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.654667306 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.653827561 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.654421894 seconds)
  done (took 18.133715329 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.654094247 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.654494356 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.654775905 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.654861552 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.655352009 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.654474673 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.654747847 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.654042223 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.653887923 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.654308124 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.654343729 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.653897085 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.655541538 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.655323067 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.654803095 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.655430521 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.655020631 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.654636901 seconds)
  done (took 31.377422111 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.655614036 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.654799395 seconds)
  done (took 4.903658338 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.654991094 seconds)
    (2/7) benchmarking "second"...
    done (took 1.655484016 seconds)
    (3/7) benchmarking "month"...
    done (took 1.655383531 seconds)
    (4/7) benchmarking "year"...
    done (took 1.655535684 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.65543868 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.655482177 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.656200574 seconds)
  done (took 13.183259165 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.657128726 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.815815979 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.879815477 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.278308348 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.656164201 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.657969116 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.574566095 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.658422419 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.660123826 seconds)
  done (took 18.432169456 seconds)
done (took 102.059762505 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.526869611 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.656293827 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.91090829 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.72029996 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.729766114 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.951737957 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.675176063 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.93401643 seconds)
done (took 41.699621865 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.663300545 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.363470434 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.402666054 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.704178318 seconds)
  done (took 15.064233494 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.655523881 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.963120087 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.683413852 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.504432987 seconds)
  done (took 21.405865183 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.017875233 seconds)
    (2/2) benchmarking "read"...
    done (took 2.00952788 seconds)
  done (took 5.626296368 seconds)
done (took 50.355178404 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.655857123 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.656027373 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.655618323 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.655632255 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.657517279 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.656542815 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.656544684 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.656101448 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.65640854 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.656382412 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.657011869 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.656479749 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.656067722 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.65621349 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.657082165 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.657083907 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.65685586 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.656058307 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.657061267 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.657421699 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.656825351 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.657590142 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.657953037 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.657231437 seconds)
  done (took 41.354772553 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.657107687 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.65755394 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.657797728 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.657740471 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.658086922 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.657620862 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.657731719 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.657528091 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.658552681 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.65819611 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.658498529 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.658747748 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.65759053 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.658585612 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657541499 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.658054851 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.657657786 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.658282731 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.657630028 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.65815734 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.658517751 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.658411898 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.658467985 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.658600538 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.658893977 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.659451344 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.659254165 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.658727829 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.659389203 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.659345413 seconds)
  done (took 51.344633087 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.659040413 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.659058638 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.659496829 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.658814596 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.658933509 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.660055263 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.659473819 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.659044436 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.659357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.658956622 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.659372921 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.659420117 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.659753573 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.659960556 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.659347381 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.660311096 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.65986736 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.660281123 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.660435427 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.660728056 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.662129505 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.660019518 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.659276222 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.660563004 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.660076142 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.660248075 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.659980978 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.659863412 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.660002901 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.659657951 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.659530031 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.659597504 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.660515183 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.660259623 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.660407413 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.660252432 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.660945683 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.660407591 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.660988909 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.661614426 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.660550468 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.661396784 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.660363357 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.660676393 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.661182419 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.660909456 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.662358004 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.660828494 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.660785565 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.661700561 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.661094449 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.661837329 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.662403138 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.662885284 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.661741936 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.662338503 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.66266701 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.661559072 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.662274027 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.661329044 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.661661737 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.662264752 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.662268735 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.662148719 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.662010305 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.66156158 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.661235464 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.662679233 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.66128604 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.662560789 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.662290412 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.662726714 seconds)
  done (took 121.173392914 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.662130115 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.662519297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.662523901 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.661884787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.662004586 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.662025801 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.662324812 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.661784768 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.661467658 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.662384475 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.662693764 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.662284262 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.663010988 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.664008057 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.66260407 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.663049727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.662470448 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.662919609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.663042132 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.663877658 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.662239792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.663515309 seconds)
  done (took 38.178212743 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.662234494 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.662821629 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.66411677 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.66291226 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.664067791 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.662481896 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.663546977 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.664648917 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.663596259 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.664157379 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.66387235 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.664011462 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.663798978 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.664660801 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.664429919 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.664032727 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.66362108 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.663850734 seconds)
  done (took 31.547966825 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.664306484 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.663899832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.662703723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.663822404 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.664197385 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.664703782 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.665084776 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.663718598 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.664444567 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.66411969 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.664123494 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.664376719 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.664418299 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.664930077 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.664354315 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.66407243 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.66429521 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.663903152 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.664170389 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.664615083 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.66447126 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.664789327 seconds)
  done (took 38.216793201 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.66504712 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.665280916 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.665396825 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.665355423 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.665335904 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.66496348 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.665931424 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.665068727 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.665816196 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.665212949 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.665007262 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.664552792 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.665463738 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.666210025 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.667034007 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.6683003 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.668082924 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.667604091 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.666748942 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.667111359 seconds)
  done (took 34.923102858 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.667787865 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.666591866 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.666797924 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.666232203 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.665777163 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.665987912 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.666349058 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.666209855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.666408165 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.667087549 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.66656116 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.66653745 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.667036475 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.667155168 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.666217946 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.666965202 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.667209951 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.667731907 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.667243927 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.667851177 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.667365171 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.667989927 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.667897775 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.667094926 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.666542084 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.666932237 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.666179144 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.666747107 seconds)
  done (took 48.278937839 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.666899374 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.666979733 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.667159906 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.667419193 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.667948185 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.66735352 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.667672866 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.666948916 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.667795626 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.667148029 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.668240846 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.667643349 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.667833378 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.667821122 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.668264702 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.668012289 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.667300628 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.666850507 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.667946388 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.668951287 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.668680761 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.668109873 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.668548121 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.667013674 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.668864616 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.668552656 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.668332378 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.668132176 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.668700847 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.669579202 seconds)
  done (took 51.643245919 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.689945395 seconds)
    (2/2) benchmarking "in"...
    done (took 1.690033449 seconds)
  done (took 4.98662201 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.670051234 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.669427784 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.668170596 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.66985159 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.670299733 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.670172688 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.670030104 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.669130653 seconds)
  done (took 14.96480002 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.671382773 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.668073247 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.670195299 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.669147404 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.669521192 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.670744733 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.677494879 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.670514586 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.671503048 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.670745289 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.678211181 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.678907955 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.672817142 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.67113794 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.67123666 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.67267501 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.669808994 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.670068834 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.670485387 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.670988038 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.671096463 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.673613682 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.673470111 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.670696406 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.672488348 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.681786328 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.675434261 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.669669454 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.671809976 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.674826426 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.672729204 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.670349784 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.671319579 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.671643937 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.670928348 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.67127366 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.679280986 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.672390555 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.677928714 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.672334286 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.67099242 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.670751464 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.673233406 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.67363639 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.673761779 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.671799366 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.671866698 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.670873981 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.672465785 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.675343886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.679262724 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.672544083 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.672398873 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.677114949 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.674076217 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.679445516 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.672939374 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.676442558 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.682830314 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.683518205 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.684098322 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.682046711 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.675440684 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.673394976 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.683452537 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.698679599 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.680443709 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.673426596 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.671833371 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.672187697 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.6807589 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.684956893 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.684145911 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.672990323 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.673235391 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.672817516 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.675506598 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.6733743 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.681219781 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.677344891 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.673478169 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.673154739 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.683165174 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.698493299 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.674937079 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.673239973 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.673993338 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.673368875 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.674492801 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.685986872 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.674732328 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.673973028 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.673478101 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.675566979 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.675235006 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.67440542 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.673994318 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.676630113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.673609285 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.674308026 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.673726336 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.678372543 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.684793129 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.673681279 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.674698047 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.682151682 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.674015297 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.675946262 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.682449372 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.674192102 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.674321182 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.675601214 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.68248909 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.67523621 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.679447426 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.684133558 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.674612061 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.678158898 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.675378546 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.675058443 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.6857369 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.703026055 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.675662024 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.675138874 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.681136466 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.687994665 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.676445493 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.679661332 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.675968493 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.67614963 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.675517359 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.679196094 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.675792456 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.678185433 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.675562001 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.678841335 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.674976524 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.676045352 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.67562298 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.677744628 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.67741191 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.678327104 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.679629648 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.679587225 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.677217476 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.678916996 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.68413059 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.676311215 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.677954233 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.679369434 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.676293878 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.676114197 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.678947945 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.676972416 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.677204109 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.677161246 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.677440629 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.67655721 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.676729119 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.676860334 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.677947663 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.678297733 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.683526742 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.67709312 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.681548656 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.678458835 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.677020726 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.677385316 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.677328121 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.678187355 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.677526753 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.67762048 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.682184097 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.685850976 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.677719055 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.678644329 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.682419322 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.678710432 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.678216806 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.677975414 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.681794102 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.688190938 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.678586305 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.685526692 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.679796159 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.677516632 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.677782472 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.680027995 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.6790522 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.678505552 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.683408761 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.686506091 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.690630526 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.689336073 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.679990127 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.682553093 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.680772466 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.682754485 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.68331246 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.678800223 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.67882254 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.679740705 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.680529269 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.678496937 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.681984875 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.679215886 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.678846323 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.679266808 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.679156067 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.679031981 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.678615326 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.680443989 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.683119422 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.67905343 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.679973602 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.678955949 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.681331509 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.679506136 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.679045003 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.680116055 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.678976475 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.679511402 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.687206777 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.680005418 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.682049372 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.681991082 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.681664526 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.679972822 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.679679627 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.683990701 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.681427379 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.687932472 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.681983929 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.682912764 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.68865209 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.682327798 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.680995085 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.685051742 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.681052598 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.680444261 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.685194885 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.689308106 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.681822004 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.681649276 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.681662961 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.683519507 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.681016523 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.689265105 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.681386118 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.68306523 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.6822908 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.683127355 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.680898805 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.683890362 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.684101381 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.682563314 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.684851844 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.680909863 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.681781997 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.684015401 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.681904092 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.68223398 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.682089505 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.685417799 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.68950694 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.686839116 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.682873431 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.684343768 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.683960625 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.685868874 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.683190058 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.68149704 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.682785797 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.694259213 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.690867315 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.689052162 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.68592939 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.68155727 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.688779749 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.684378324 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.687857611 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.683889144 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.684472547 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.684377832 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.684611025 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.682518121 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.685761651 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.681921823 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.68539005 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.684995899 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.687301565 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.683422291 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.684059376 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.682998123 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.683541663 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.683339481 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.685520478 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.683270972 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.687281186 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.687817807 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.683175572 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.685220299 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.69146996 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.685946355 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.686502238 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.68511977 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.684960805 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.684230184 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.685653649 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.68341894 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.687740762 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.692586134 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.687844855 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.695489324 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.687471811 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.694972845 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.684789302 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.688937605 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.692592426 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.684196644 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.684151207 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.685245566 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.684655088 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.692460528 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.684641156 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.686030023 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.689190201 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.685430528 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.684782135 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.684797024 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.68474339 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.686116212 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.68562055 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.694192614 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.687331926 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.691549868 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.68973752 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.6839911 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.686352357 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.685848217 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.686046471 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.690003852 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.685905725 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.687707634 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.687060038 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.686546368 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.686239378 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.686165193 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.685326168 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.685435149 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.686409047 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.69402899 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.688140864 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.69144971 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.685506494 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.695271685 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.687043677 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.694738917 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.68678026 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.687948168 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.686574173 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.686075955 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.689026541 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.687573391 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.689124421 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.687464282 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.688572235 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.690947453 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.687566141 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.689692202 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.688245005 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.687554533 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.688749852 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.696375226 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.711004043 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.689533753 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.691839849 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.686472674 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.68993243 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.691983495 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.688581095 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.687380201 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.69209676 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.699947549 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.69586678 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.689016774 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.687959523 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.689856695 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.688067601 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.688049808 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.687260658 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.687876236 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.68878657 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.688537791 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.688032388 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.692288937 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.688245206 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.689738994 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.69047028 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.689466417 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.699468975 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.688275626 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.68981287 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.6881651 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.687341188 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.690789542 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.689872218 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.687738254 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.691070437 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.688686601 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.692014507 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.697775518 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.696078465 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.691658563 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.690466513 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.689915913 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.69123382 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.690823525 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.688974738 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.689325856 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.690053389 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.692854371 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.689377892 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.690315643 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.688826998 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.689155295 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.690753934 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.689751826 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.693719345 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.698562384 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.691286867 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.6892901 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.689399678 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.689729762 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.689664066 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.692054888 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.698529057 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.694624361 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.702600691 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.698091964 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.694595782 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.692207478 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.693823715 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.700466641 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.690265219 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.692329359 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.689566196 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.693522139 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.692150377 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.696123973 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.691376184 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.698659254 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.692061513 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.691141974 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.699709544 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.694122763 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.690209206 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.692956537 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.696490883 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.693382629 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.690283875 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.692365819 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.692035178 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.699719359 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.693351071 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.691614512 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.694627612 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.691438959 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.693769478 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.695664848 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.691809419 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.69496434 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.691913488 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.693519412 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.691355099 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.691575597 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.691539688 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.691972338 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.692262777 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.695522327 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.70034941 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.691455191 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.69528993 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.694865416 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.69308399 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.692762304 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.692169009 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.692026514 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.692529965 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.693001951 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.692891524 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.693679831 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.696446741 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.692954546 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.693243887 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.695909311 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.692493839 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.696740199 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.705029952 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.70013017 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.693073025 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.695068085 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.694034879 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.696679967 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.693087678 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.693408966 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.694591276 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.696177812 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.692439278 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.69362914 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.693443297 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.697874186 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.711121816 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.693864543 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.694616193 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.695789196 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.698940733 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.693317811 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.692999913 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.693495493 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.696098548 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.697143701 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.703030154 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.694360865 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.701400823 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.696808866 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.696120684 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.69829543 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.698254407 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.703298437 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.698184611 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.694681659 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.695283538 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.700574878 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.711949261 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.694098776 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.704619673 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.726920215 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.697050801 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.696256961 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.696259481 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.696497671 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.694883076 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.696905014 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.695036148 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.695288403 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.695601942 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.695029911 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.696472564 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.703524796 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.698378484 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.695380666 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.697515114 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.696273617 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.697781888 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.694825397 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.695791204 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.694125975 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.696040947 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.696220396 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.695618105 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.697789734 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.707514424 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.706555794 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.69527505 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.696922976 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.69600408 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.700580778 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.699273603 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.708068804 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.704360682 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.696054308 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.696288806 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.699005789 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.696848364 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.695878719 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.698408695 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.697498162 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.697474919 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.696551648 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.708681559 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.704899887 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.702312473 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.697862874 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.696618244 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.696542191 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.699382686 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.698950179 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.69754052 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.700600919 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.698389092 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.701808484 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.698027855 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.69768178 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.702888726 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.705029279 seconds)
  done (took 1006.54487824 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.698017777 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.697997879 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.69734824 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.69793449 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.696695074 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.697477995 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.697292736 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.696835105 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.697762907 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.697512591 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.697777804 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.697641417 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.698154074 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.697739472 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.698253031 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.697330919 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.697191628 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.698261701 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.698210091 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.697207558 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.697279402 seconds)
  done (took 37.28508473 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.69806478 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.698177789 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.698257384 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.697905665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.699031164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.698730707 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.69823309 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698462284 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.698262416 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69896798 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.698698653 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699015464 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.698430213 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.69939663 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698626882 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.698995879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.699139644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.699512187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.699143322 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.698756566 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.699733855 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.699595077 seconds)
  done (took 39.009566346 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.699143572 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.699620995 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.70082874 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.699530185 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.699481846 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.698688046 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.699780019 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.699672364 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.700520729 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.700876885 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.699994696 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.700199209 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.708985232 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.708258809 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.70183994 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.700735427 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.849498596 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.700006828 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.702327187 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.700577194 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.701172886 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.706637744 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.701314508 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.70115099 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.701260242 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.701754992 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.700492331 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.699649174 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.700350908 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.701897941 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.70488711 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.700642911 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.702043954 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.704655719 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.701853728 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.702842636 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.705505237 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.701760451 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.700870753 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.701036203 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.712498044 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.724870329 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.701704369 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.708636176 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.701523519 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.700726936 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.705911193 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.709981315 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.700615141 seconds)
  done (took 85.220666334 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.700524924 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.701341961 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.702221802 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.701461068 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.700939511 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.701220456 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.701779591 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.702242419 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.701223397 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.702147371 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.701778017 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.701798485 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.701841838 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.702634983 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.702062814 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.702281646 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.702562038 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.702556562 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.702097053 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.70336596 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.703676357 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.702502039 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.703169444 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.702920906 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.70418274 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.702239003 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.702422009 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.702967763 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.703608 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.703070736 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.703177076 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.703488823 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.702741567 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.703671411 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.702678094 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.702771648 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.7155338 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.702596823 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.702911567 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.702069412 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.701746614 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.702498341 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.703045572 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.70208612 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.702541851 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.701888636 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.701926703 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.702195511 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.703727548 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.702043779 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.70237399 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.703085639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.702646995 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.702524048 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.702404939 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.702890324 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.701568916 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.702568886 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.702010811 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.702834146 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.70261053 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.702384572 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.703137786 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.702354498 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.701785621 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.70347925 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.703162966 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.70319907 seconds)
  done (took 117.421701157 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.702922693 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.702932729 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.705564424 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.703137723 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.703956087 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.704011958 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.702928219 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.703481527 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.703392765 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.699864193 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.700688059 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.701197361 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.700554332 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.700141466 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.701074418 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.695533749 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.695647347 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.695641775 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.695560869 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695322765 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.696358106 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.695438039 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.694514748 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.695005042 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.695774723 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.694970191 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.695579198 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.693725272 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.693130843 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.693645766 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.694142493 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.694119674 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.694255532 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.693603343 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.694152296 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.694040162 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.694070314 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.694022922 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.694707802 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.694038447 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.693522589 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.694172769 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.693849502 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.694114544 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695237517 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.694153873 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.695115405 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.694884971 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.694414359 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.693520672 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.695079973 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.694688629 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.694896885 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.69383622 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.694731439 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.694678715 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.694376984 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.694808855 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.694432284 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.695624283 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.695428318 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.69459881 seconds)
  done (took 106.824331241 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694207536 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.694063788 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.694451507 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.694242448 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695835597 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.694687458 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.694624355 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.694385771 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.693991969 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.694485835 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695204071 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695300925 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694916641 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69480346 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.694913975 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69594653 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69556282 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.694248167 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693495684 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.694845032 seconds)
  done (took 35.52543618 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.694308029 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.69490431 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.694284386 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.694609027 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.694000346 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.693757694 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.694592133 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696120188 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694630175 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694558362 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.694631774 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.694474352 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695352769 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.695340821 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.697783987 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.695069217 seconds)
  done (took 28.750658486 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.695473332 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.694395584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.695594921 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.695807671 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.695069199 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.69529078 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.694465803 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.695263234 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.695823165 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.695443036 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.694261689 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.695290615 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.694626641 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.69582281 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.695647207 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.695557654 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.695299147 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.694520603 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.695017901 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.696672751 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.693947442 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.692731176 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.693113979 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.694038228 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.69342506 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.695238294 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.692012317 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.693089684 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.691767528 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.692214473 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.693497657 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.693290538 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.688353185 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.688798244 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.689539363 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.688721762 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.688982217 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.689654871 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.688960232 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.689306082 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.687982986 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.688270524 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.689027474 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.68913576 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.689237707 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.688257247 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.688405336 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.688942379 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.688884969 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.690024345 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.68754664 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.688485446 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.687620784 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.688539783 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.688661352 seconds)
  done (took 94.698896297 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.688872561 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.688689117 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.688380202 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.688220019 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.688401542 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.688717495 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.688550469 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.689126832 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.688840428 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.6885861 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.689282591 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.689623004 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.688379023 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.688736711 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.688442671 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688678839 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.688828095 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.689108034 seconds)
  done (took 32.022640856 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.689350441 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.688906354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.690048486 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.688961378 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.688744158 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.68934239 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.688867484 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.688249519 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689833159 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.689191141 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688814922 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.689812198 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693251359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.689413472 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.689763775 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689832238 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.689433514 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690421244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.689663258 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.690268961 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.690398774 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.690319952 seconds)
  done (took 38.798269719 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.689993122 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.689766739 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.704263141 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.711433659 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.711904453 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.722550839 seconds)
  done (took 11.856018103 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.688585369 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.688712329 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.689783253 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691708353 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.68881695 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.688848076 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.687656994 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.688259677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.687825687 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.689505259 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.688719755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.687474596 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.687177023 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.688109732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.687185266 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689111981 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686336595 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686809341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685444007 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686392682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686914738 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.687289275 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.686435222 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686174782 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686162331 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.686643525 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.686626348 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.687046263 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685239246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.68503423 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684867077 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685209882 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685971935 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686596044 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684715554 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684763027 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685177457 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685850958 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685383068 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685414229 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.683583739 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684086205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683167684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683357983 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.683783053 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683465498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683678162 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.683590513 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683870016 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683558894 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.683342565 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.68352408 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683772469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683949964 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683242366 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683316959 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683961852 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68417469 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.68362098 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683543818 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683162318 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683333199 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683311537 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685108595 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684837618 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684501838 seconds)
  done (took 112.883012405 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.682286238 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.68207738 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682817345 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682096091 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.681524481 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.681593821 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682183005 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.681902495 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.68242831 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681854528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.68197422 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.681886387 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682379895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68260881 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.681815309 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682094347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.680087388 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682062083 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682375276 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681920894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.682043546 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.682095857 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.681349646 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.681238434 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682665329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683386605 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.681966657 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.681495403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.681211746 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.680980304 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.680473168 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683133489 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.681033324 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.68096423 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.681401663 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.681509416 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.681734679 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682086127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.681374804 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681199698 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.681487553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.680876534 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682361633 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682291756 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.681091206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682552525 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.681380807 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.681132199 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681937197 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.682615753 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.68176531 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.681504051 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.680551189 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68181511 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.680842677 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6817051 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.680295542 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.680229879 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.681185781 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.68123233 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.681095508 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.682212184 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.680605994 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.681179583 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.679681124 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.680975459 seconds)
  done (took 112.608170763 seconds)
done (took 2337.659963944 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.739703446 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.70767857 seconds)
  done (took 15.063816006 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.84382888 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.79521175 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.680971669 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.713286241 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.681147839 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.708133183 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.708259736 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.680925788 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.681116959 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.681164872 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.681486009 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.865447598 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.695013968 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.680720807 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.681380575 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.772631548 seconds)
  done (took 49.169540205 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.683404184 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.683934451 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.692977846 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.689183036 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.682315214 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.694083949 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.71446202 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.687315826 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.716995343 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.695951487 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.74987031 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.695456161 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.681577709 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.730164919 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.69830561 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.697193992 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.779484235 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.758849639 seconds)
  done (took 32.346507501 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.758100309 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.69659973 seconds)
  done (took 10.076260721 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.690895425 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.726540828 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.68306418 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.708145293 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.67887373 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.698886203 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.701649571 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.680083843 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.697674678 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.694468617 seconds)
  done (took 68.577917511 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.684078221 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.68250602 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.681831622 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.678482317 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.67597806 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.680989985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.67934542 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.679876336 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.337874935 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.713659553 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.692034284 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.684818646 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.67949896 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.680293741 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.677081838 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.702206969 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.788188493 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.676517674 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.677497469 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.685414826 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.680936756 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.737594048 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.693964106 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.682366934 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.710766981 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.343280509 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.688575648 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.685823803 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.78936843 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.677253954 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.678824782 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.871708233 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.680942447 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.151944337 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.95105837 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.688931731 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.695201847 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.687921284 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.678046026 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.79511794 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.682146935 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.687282042 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.595613387 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.927914628 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.780713403 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.725542789 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.997130155 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.69676383 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.681144752 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.709661634 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.684730138 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.679240777 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.693248512 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.187939767 seconds)
  done (took 122.351403206 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.679406946 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.023271676 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.844307369 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.681119995 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960419859 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.883737726 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.679978494 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.724715142 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.679908604 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.906915604 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.934280332 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.784272339 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.680679793 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.682312796 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.681714801 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.681051444 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.832550314 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.750340451 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.68002122 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.677489447 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70466252 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.91837965 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.8005593 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.683330843 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.705462745 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.888932137 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.799516232 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.783540423 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.399717201 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.6793172 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741458714 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.681130327 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.680801619 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.677661118 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.833246886 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.775071011 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.760038185 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.681167545 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.681726775 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.681054581 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.424007096 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.879678006 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.772507215 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.811297035 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.930794263 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.885145254 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.456902246 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.67882776 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.419536216 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.841020624 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.90687064 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.908062414 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.800830211 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.684871259 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.208926083 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.679805968 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.679848078 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.929227947 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.901761547 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.777745003 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.683122058 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.678960693 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.679890188 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.967156565 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.682415556 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.774502556 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682356331 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.681122314 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.776439445 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.777501031 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.910363108 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893997636 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.709201256 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.021006959 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.205470208 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.92485687 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.745106836 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.931418801 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.684030809 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.679542463 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.757473912 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.532546231 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.933238997 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960736198 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.924500103 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.714940724 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.394933771 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.679690829 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.904637989 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.902660904 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.938842986 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.928164328 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.917940842 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.022522605 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.681339857 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.680567089 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.973465887 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.805708778 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.683253979 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.029205517 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910156314 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.213044644 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.707384281 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.982637292 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.814733443 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.682862747 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.308628152 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.683661054 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.909029775 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.721766421 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.68251034 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.681689856 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.898432948 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.665027007 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.684356885 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.577661405 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.741766154 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.685138093 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913929389 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.686185466 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952208827 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.685223766 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.915168485 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.70932861 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.712325651 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.9093606 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.928170256 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.687216062 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.921197268 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.925148194 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.797926319 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.952155407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.582831065 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.684700443 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966380984 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.685757451 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.682667775 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.85106332 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.683994483 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.823928932 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.68555453 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.975531351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.118357747 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913167457 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.686628504 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.934710241 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.715327685 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.733268934 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.685624111 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.81488241 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.685554636 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.510512774 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.84099644 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.687708479 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.684218055 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.569888925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.685739684 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.830568764 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.907586267 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703525123 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.753735642 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.344619549 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.6835342 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.764566083 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.705482869 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.069591627 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.683349176 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.933378699 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.68691942 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.683874451 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.684170824 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.969514255 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.91864607 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.687212297 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.684710591 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.585413675 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.684579292 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.683901089 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.864667 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.119098299 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.684657656 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.884288144 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.689122385 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.812086564 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.686164191 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.760093716 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.022496545 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.684532026 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.683962683 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.68354334 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.685708199 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.684552113 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.947696866 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.708876104 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.17590781 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.821439315 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954906365 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.995466294 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.924333509 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.727299245 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.686065621 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.941655419 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.687784852 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.749122964 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.688439655 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.705229747 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911901801 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.687468908 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.893129359 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.953683268 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.52527694 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.733362057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.688432886 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.686193547 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.686703714 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.830900839 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.772754171 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.687824098 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.686425917 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.79984493 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.807483305 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.893530913 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.689132747 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.768184934 seconds)
  done (took 862.809471442 seconds)
done (took 1162.012855813 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.688089842 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.690700676 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.691238911 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.688300379 seconds)
  done (took 28.381791967 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.696422593 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.688456615 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.688494797 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.689092369 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.688760864 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.690059198 seconds)
  done (took 11.766164298 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.718157443 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.68963359 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.690192699 seconds)
  done (took 20.723077518 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.759066904 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.070489714 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.818344082 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.10182377 seconds)
  done (took 9.374523069 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.689535487 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.68909621 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.689637426 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.689236743 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.697605518 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.697451688 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.690237189 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.690607328 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.69706944 seconds)
  done (took 16.856799706 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.697705319 seconds)
done (took 92.425564443 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.700280986 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.022574079 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.819322977 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.920442499 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.759220208 seconds)
    (6/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.837608151 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.823371969 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.558549266 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.884616286 seconds)
    (10/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.876079029 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.69379325 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.139831244 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.819213162 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.081426827 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.708517591 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.690569093 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.106278334 seconds)
    (18/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.786005416 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.699425477 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.688432935 seconds)
    (21/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.064797001 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.010504478 seconds)
    (23/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.769674307 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.853180387 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.688993616 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.296371051 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.435820765 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.948139162 seconds)
    (29/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.893334003 seconds)
    (30/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.718123462 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.028607461 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.990670951 seconds)
    (33/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.720048273 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.93033091 seconds)
    (35/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.692768445 seconds)
    (36/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.768547065 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.695160049 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.690743398 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.014674486 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.695303047 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.000054622 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.021059786 seconds)
    (43/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.779614904 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.694544 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.187269124 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.492141835 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.695698651 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.523607455 seconds)
    (49/309) benchmarking ("sort", Float32, false)...
    done (took 5.482738837 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.705114683 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.952901989 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.876886358 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.878292239 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.832732636 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.700682825 seconds)
    (56/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.90438688 seconds)
    (57/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.170207151 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.840335123 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.72345262 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.03547388 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.965993198 seconds)
    (62/309) benchmarking ("sort", BigInt, false)...
    done (took 6.703354535 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 1.930040903 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.034931027 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.70375213 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.41010152 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.705554134 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.785279094 seconds)
    (69/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.08687175 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.897567092 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.956452463 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.801807492 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.877187309 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.721401156 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.015395941 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.837911583 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.792034444 seconds)
    (78/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.801482107 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.830717121 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.701478588 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.718686438 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.922849084 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.010088206 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.769913147 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.717001451 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.861697362 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.705274004 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.704251026 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.917312765 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.101549399 seconds)
    (91/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.886166811 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.817847323 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.910753345 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.705291097 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.301139109 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.853221966 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.82869049 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.378534452 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.729051059 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.014533142 seconds)
    (101/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.798898847 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.893048983 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.073242386 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.329532841 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.817383232 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.706875718 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.783342442 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.102796095 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.00123134 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.728485575 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.314854168 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.847547521 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.746421558 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.941592559 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.866333102 seconds)
    (116/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.043586518 seconds)
    (117/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.83328152 seconds)
    (118/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.711016341 seconds)
    (119/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.857880131 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.075438407 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.018148783 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.78502285 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.924326841 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.703004051 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.72836631 seconds)
    (126/309) benchmarking ("sort", Float64, false)...
    done (took 5.437689447 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.583726861 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.816555878 seconds)
    (129/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.081014921 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.70826844 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.025129695 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.733420821 seconds)
    (133/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.704660096 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.216026157 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.739740918 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.035853167 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.786541807 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.953563012 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.70320021 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.553041039 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.779713621 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.894203345 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.806439738 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.068620642 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.730819803 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.021527254 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.604872312 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.011359221 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.875015497 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.710548206 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.292417196 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.732382864 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.319577023 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.281106172 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.073569224 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.712004096 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.391922029 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.892957979 seconds)
    (159/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.955681704 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.723512428 seconds)
    (161/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.860338582 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.947882124 seconds)
    (163/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.710931085 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.217336314 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.710223427 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.39301997 seconds)
    (167/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.836219454 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.002832552 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.032733551 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.687485514 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.717780897 seconds)
    (172/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.821009007 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.724789369 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.023790705 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.791395977 seconds)
    (176/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.386064712 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.711593884 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.787925949 seconds)
    (179/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.76690895 seconds)
    (180/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.238883242 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.876113975 seconds)
    (182/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.75081028 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.707491949 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.780209406 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.384932626 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.823886024 seconds)
    (187/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.966174878 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.711603779 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.759516309 seconds)
    (190/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.72802807 seconds)
    (191/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.195869164 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.60730176 seconds)
    (193/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.848694516 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.728745955 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.906347679 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.873869083 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.383944177 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.946916032 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.711833408 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.106167821 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.713354521 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.459599366 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.050087191 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.712080582 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.778165788 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.878181425 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.706931639 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.168986146 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.715370164 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.822462145 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.732235524 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.723613038 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.787345831 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.83603289 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.093459619 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.713301127 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.051806983 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.45221505 seconds)
    (219/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.879652775 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.716712771 seconds)
    (221/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.733212179 seconds)
    (222/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.004163502 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.35790139 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.9122495 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.709425389 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.905278912 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.965359927 seconds)
    (228/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.715830363 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.991384972 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.710098498 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.716345794 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.71867453 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.59001049 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.178054668 seconds)
    (235/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.016733809 seconds)
    (236/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.737476704 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.789421093 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.7427767 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.732751775 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.616324499 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.715756213 seconds)
    (242/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.902602261 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.797876438 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.152598909 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.955154926 seconds)
    (246/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.713390256 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.290588226 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.045595358 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.869785167 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.842574488 seconds)
    (251/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.598466785 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.630462254 seconds)
    (253/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.205755829 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.540190192 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.715486697 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.9768886 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.895366284 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.846425813 seconds)
    (259/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.814996682 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.965617459 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.853709802 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.805445003 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.802934862 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.710954348 seconds)
    (265/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.75142533 seconds)
    (266/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.812805584 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.713521787 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.905014479 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.111606306 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.715702958 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.937296019 seconds)
    (272/309) benchmarking ("sort", Int8, false)...
    done (took 4.587124778 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.714077433 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.71381557 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.589677246 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.721227304 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.269520028 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.040524252 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.095240713 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.719039904 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.926061076 seconds)
    (282/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.827704467 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.73077748 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.501535833 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.722330258 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.735111715 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.794738451 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.499393215 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.665563292 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.950571607 seconds)
    (291/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.744049937 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.837272989 seconds)
    (293/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.715649317 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.479357005 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.7159183 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.95811441 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.039010666 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.809938417 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.171186762 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.745479951 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.736424014 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.716794651 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.800920465 seconds)
    (304/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.713664741 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.731965238 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.930785376 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.817278053 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.773740286 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.95252596 seconds)
  done (took 957.465832099 seconds)
done (took 959.155672007 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.744225327 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.733772676 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.717360089 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.739467283 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.832646903 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.764417187 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.731270796 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.721966045 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.768987703 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.768019281 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.716362361 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.762861299 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.717720092 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.718227691 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.718290349 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.734526225 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.02893098 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.74827925 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.736184802 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.731045823 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.737215906 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.717754885 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.769041019 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.763139964 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.723371861 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.723173266 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.721830289 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.739064494 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.831287764 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.721845421 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.723674562 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.732131239 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.029658902 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.747525057 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.71827961 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.738564024 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.732547031 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.732538287 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.725196527 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.752962479 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.114771909 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.75823826 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.7199882 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.7216025 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.720205661 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.727332044 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.7207891 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.729082278 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.733818399 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.735424617 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.108493458 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.775211744 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.723049381 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.721403637 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.734674954 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.721257476 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.72500444 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.736420277 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.740085611 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.735812458 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.015511298 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.757286602 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.724095954 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.737865268 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.729433529 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.144613475 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.758321928 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.727902653 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.11434469 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.768904084 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.145566891 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.770951274 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.724366981 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.735957249 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.75400685 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.032500741 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.749035282 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.722155018 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.73079181 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.718861091 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.734401522 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.735704934 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.7267391 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.722548078 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.73763902 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.768682129 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.736199509 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.722253111 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.734357536 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.740626469 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.730000072 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.734664307 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.727125649 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.721183462 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.736445815 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.727727611 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.725151806 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.726133492 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.728232963 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.737321171 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.114582943 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.777208536 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.720220864 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.721445161 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.722553745 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.738695136 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.11331769 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.762755084 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.746516976 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.773336463 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.725103774 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.018271243 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.755994686 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.739232878 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.735548285 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.726786553 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.722997875 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.017567487 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.14000195 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.776919997 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.724134827 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.721878053 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.740642786 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.72574958 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.72135512 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.0339893 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.755335607 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.740140507 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.845991657 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.736842411 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.756394916 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.721962221 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.728683798 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.774561739 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.739768779 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.757162821 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.727204143 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.739960768 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.74220896 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.723078662 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.736843874 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.739841664 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.725333097 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.733378416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.722274762 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.775607953 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.738937074 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.739512672 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.746238905 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.847219903 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.724846513 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.018536946 seconds)
done (took 271.448967172 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.801764837 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.721536975 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.813900223 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.722150339 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.813345912 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.798248387 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.724540598 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.722855586 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.722868359 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.205586503 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.723128205 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.727858058 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.722277659 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.72230893 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.794394805 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.72296643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.722877714 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.154559454 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.723349033 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.803541551 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.72266364 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.724963928 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.723340986 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.21023547 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.722533886 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.721882226 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.803211613 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.7240928 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.160128539 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.722517158 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.724400005 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.160114081 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.80433289 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.751209582 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.731050796 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.728994949 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.814143275 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.736749737 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.793055222 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.794827377 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.819620321 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.759103833 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.72384138 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.722962165 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.726866338 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.72532214 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.72428344 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.756431377 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.725227866 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.728548354 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.155029233 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.73240687 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.729426252 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.725397892 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.724873569 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.752912093 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.7252651 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.725538719 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.80372781 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.725798364 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.792336771 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.211375876 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.207815049 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.72482321 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.724407619 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.725149854 seconds)
  done (took 175.394912467 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.791012548 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.800464758 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.79047685 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.729808955 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.774048529 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.792769932 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.729715124 seconds)
  done (took 14.068020125 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.733984478 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.726117552 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.776142857 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.776460572 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.725238047 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.882077079 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.726193729 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.739034234 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.730991768 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.75437157 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.726324446 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.726826853 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.7331447 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.725242877 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.776528804 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.739342551 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.843523494 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.729480746 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.726203345 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.876098421 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.731571786 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.733360749 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.753206958 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.739872384 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.728123113 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.734967159 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.305149357 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.72721694 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.726213963 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.726015953 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.727467828 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.769365124 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.727565627 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.727677381 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.728010152 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.84128415 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.727253509 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.727664669 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.726786294 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.727789374 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.72854179 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.726994205 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.727805004 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.728849014 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.729093967 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.751138932 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.727535286 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.728735782 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.727689895 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.728586862 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.755028316 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.728583434 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.727728616 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.733091824 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.771609857 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.732749939 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.729085624 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.728039643 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.728838882 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.728336789 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.877441209 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.77965608 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.727707407 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.778470663 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.728440961 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.727921099 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.728884541 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.727873472 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.818176639 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.728088628 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.778878561 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.729234758 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.88805065 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.752893591 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.729786299 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.733214512 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.733784765 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.728859334 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.730948785 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.737156727 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.729138291 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.732346692 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.736545169 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.733989299 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.729433013 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.843877284 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.871006529 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.729254479 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.732068711 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.737754456 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.729431119 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.774463607 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.729695959 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.734447384 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.787286557 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.847293758 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.758265876 seconds)
  done (took 191.942206738 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.736678212 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.73681521 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.730661358 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.745328375 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.730868237 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.730913187 seconds)
  done (took 12.074827486 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.732041232 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.733674634 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.73047147 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.729678772 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.730365839 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.73236006 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.730697822 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.734030727 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.733564578 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.729908961 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.73091595 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.73109438 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.730152765 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.731275031 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.729918345 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.73039947 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.730393161 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.730559423 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.730408211 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.731068855 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.981767626 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.732045769 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.731516878 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.733982167 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.734905582 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.730224992 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.745873294 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.730942633 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.731440096 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.740782266 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.736171899 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.730959362 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.734098559 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.738870685 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.735938741 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.734005004 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.734833322 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.731370343 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.731245794 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.731852196 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.731682616 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.732188853 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.732274942 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.732618361 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.735608804 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.739193574 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.736742453 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.746009398 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.733216248 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.732305161 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.732417795 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.73293021 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.733358374 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.733086887 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.737259912 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.74047546 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.738314357 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.733654346 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.733407091 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.736413637 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.737198605 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.733374034 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.738357917 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.73782946 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.741501939 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.733758073 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.736794596 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.738235027 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.733921227 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.734329116 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.733922184 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.734054525 seconds)
  done (took 127.757998696 seconds)
done (took 522.914330827 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.999748769 seconds)
  done (took 8.666177535 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.904030849 seconds)
  done (took 8.632243868 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.223842823 seconds)
  done (took 9.89444003 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.747768214 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.770545114 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.745312132 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.73261532 seconds)
  done (took 28.686812615 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.942360468 seconds)
  done (took 8.609324706 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.757206721 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.73380742 seconds)
  done (took 15.229581796 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.838398749 seconds)
  done (took 8.511186438 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.04345044 seconds)
  done (took 8.719523976 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.738166005 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.751909868 seconds)
  done (took 15.180158164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.736913817 seconds)
  done (took 8.405852306 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.917397052 seconds)
  done (took 9.691747702 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.761251615 seconds)
  done (took 8.50014314 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.75896875 seconds)
  done (took 8.426480234 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.794294095 seconds)
  done (took 8.461000469 seconds)
done (took 157.283604071 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.73842536 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.735195404 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.734735566 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.733504732 seconds)
  done (took 28.610510061 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.767229192 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.767779843 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.768908782 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.779216933 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.770143102 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.770314459 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.760567927 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.760920545 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.779511314 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.770168129 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.769294482 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.770374034 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.769444739 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.760516096 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.771717053 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.770295437 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.779181532 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.769816225 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.761333549 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.770820807 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.736445465 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.779701579 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.771214421 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.736926047 seconds)
  done (took 44.080778693 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.927357129 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.805803279 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.890250577 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.788114017 seconds)
  done (took 9.080004204 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.787721053 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.788933378 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.800430895 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.838399927 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.861561705 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.797905755 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.761630699 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.756933249 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.742963036 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.789942531 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.863994505 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.7851517 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.873764222 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.736891904 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.923262299 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.737261941 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.736792908 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.788887078 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.839658721 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.854046566 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.736278048 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.788052455 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.794898735 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.784107769 seconds)
  done (took 44.839182993 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.737779369 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.74584042 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.7449326 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.739052692 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.738183461 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.739031135 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.745156804 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.739063486 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.76165862 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.740140847 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.738928631 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.739619009 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.746160424 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.739251482 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.737861012 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.751443439 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.752449523 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.739213422 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.74227035 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.745569145 seconds)
  done (took 36.534040999 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.736331012 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.583361513 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.081335472 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.988523017 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.736721561 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.738318703 seconds)
  done (took 30.534740971 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.750862492 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.744520515 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.73872593 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.795870913 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.878154701 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.746451671 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.738028971 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.749184605 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.788202652 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.802894464 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.761347405 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.768277063 seconds)
  done (took 22.933212281 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.739478413 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.741114853 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.738423292 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.751085808 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.750079213 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.745734083 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.745713365 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.738009113 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.750954907 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.758038918 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.746103838 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.750297327 seconds)
  done (took 42.629691925 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815503435 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.612762804 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188772739 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204322643 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.26150859 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.940908017 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.737532128 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.826533577 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.740155384 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009853193 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.110151498 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948945264 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.981875122 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479243016 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.743857882 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.210968427 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031684152 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963635734 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769666361 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41427634 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849044159 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.239256625 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.373860386 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.851885082 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.942842636 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.863488061 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.997688993 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.688969128 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788045411 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74359855 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744160402 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.74025251 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01172436 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861487807 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809918019 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744573202 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.149760177 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.445245098 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.752217878 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.366746136 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.238502642 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.863038379 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744838106 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.74232589 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.667028322 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.237959194 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82948427 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.745490824 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.440277211 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.740013486 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745631405 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814316228 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.742036475 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.54849077 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421434025 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.009042988 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.741202631 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742375145 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2917347 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751163062 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349625103 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.673146624 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.825396307 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.367160505 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213422252 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.896225818 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.742474055 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743437251 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.667226963 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.364006704 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857133985 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.883531355 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.758078971 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382488296 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041990986 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.143714301 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797505148 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023323844 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.523883962 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.672250122 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959836402 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.690479598 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.669527991 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.571098392 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.668579727 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962574732 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780717659 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.346659698 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780985149 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.825011439 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.747671899 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757202913 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744925554 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957016118 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.637868268 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.744907517 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.031538445 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006765465 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759526133 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.826829823 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.669939516 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.744850135 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987843101 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.946700835 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.976388967 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.214321757 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832301071 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.558465625 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.860613474 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.652124086 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.749993197 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.013028409 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80354081 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.753458458 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863743159 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.69382477 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992316477 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.585714014 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.946398156 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.092809512 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986598356 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.084591516 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992091203 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807022137 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.750484473 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.745061967 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.435241191 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358854076 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.960841655 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.758579845 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.229266886 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.748986115 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.744573137 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67994817 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.368380127 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.10229283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.834840056 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959794807 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.695723575 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018163711 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.670817365 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.881968065 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739574225 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.959115975 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.390339982 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.834474745 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994518236 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.859196664 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.981398481 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872446808 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760197791 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838731516 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762339521 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.039235231 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094448399 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.747895255 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.74668271 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.438265553 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.803884573 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.747021171 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.749195019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273355053 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020797413 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.772199516 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.750550475 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.622664791 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.758529963 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809042435 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.748422659 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.750304249 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.262690435 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250853898 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.752500893 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.387363022 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963034789 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750163701 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.426848712 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932818786 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.759440713 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.019043901 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815204521 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.67338911 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.447795302 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.447479877 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.748370176 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.674125877 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.747809014 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750260399 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753067793 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.935826385 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024312915 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802893266 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.382765637 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.85676074 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754187223 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.75099106 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.748471237 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.264114511 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.767770617 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.236232911 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.858434252 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877795634 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.759215317 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.674657057 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.750138858 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750227956 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.748251743 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.696090349 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800832414 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.376846336 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954697098 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997562807 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.153945211 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756926688 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.386767869 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.866949943 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.763931372 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.036795955 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26387366 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.845565374 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81874437 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.754869068 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.382677243 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483956336 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302896108 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051554808 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071796702 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100545146 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.109751097 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.069940871 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.835549307 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976702014 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271193559 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805134854 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.839072837 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685334705 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764279792 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.400515 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107999286 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761850551 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967183472 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038137883 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.100160921 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886687354 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953856729 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780627202 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.540296498 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774627281 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.287701451 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767753831 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.149757722 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957796845 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833523714 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.036278506 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.815497299 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.750895135 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093338222 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797263761 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.453189233 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.104473751 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.133145385 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.215709455 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979108963 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.756799095 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.189180237 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107485444 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.928296883 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.868675685 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67833939 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.757731272 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.756770504 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.765467526 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.722875079 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.590807684 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.995018095 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.760022339 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980508603 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.869288373 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119988387 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.6576626 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.754828978 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.751876737 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008405061 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420432308 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905808786 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.041525953 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.320021123 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758122463 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.678288357 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679006045 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.453749924 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.760877797 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719744061 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977791204 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.858070805 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42948981 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.12878569 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061510611 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997019955 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.766187942 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029769614 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028080663 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.244152792 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774131123 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.851007899 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.049594466 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.444431124 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.968853687 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98097738 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284057649 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97087089 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213309087 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.726896982 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.754026428 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961442181 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.968791855 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.112782309 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931104767 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.464587328 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.765089209 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125395114 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81605656 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.12686019 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943867338 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.84094503 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761440142 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83215581 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757992868 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.7603601 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.760049125 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764883425 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.11614175 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876800551 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.767416587 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831289402 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767074328 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.328421775 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.764618698 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027454765 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116175875 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08808804 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821087771 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.75699884 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764644612 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682313707 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884904617 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.194647119 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027518846 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.873773974 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.891083929 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776594523 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.061468672 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.000299893 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06259559 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029955611 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.63983159 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371317943 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.873116114 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.973039374 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762088625 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.959869514 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98065627 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088924686 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329563037 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.887459521 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94664045 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.02879431 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117299582 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.757981222 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339827261 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.768153487 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164426716 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.794370718 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.108978963 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018762525 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760509245 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879545798 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.760795541 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.961819407 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.208592208 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444066177 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.105405994 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.606948052 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.762459589 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032199946 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088012302 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062711975 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835515707 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763403253 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.451446321 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890040955 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.627571606 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.975866292 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.758808891 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961886883 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.467402165 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.763142768 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030944547 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06419587 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.759314625 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.679770822 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761917644 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.761922335 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973506595 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975714194 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007815913 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763471171 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.763555401 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.566431473 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035566281 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8200776 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686852213 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.760959992 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806268838 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.985739512 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.777576816 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.275042573 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.460108131 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061735726 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.669573305 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776977835 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.146697351 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134323033 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0915629 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.281263809 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989105757 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.315656987 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.593245612 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133157946 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.761642643 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.148899272 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136166332 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.761461606 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.24407429 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86720501 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.030810674 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084105321 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.773703104 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527428476 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.793525623 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97570295 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.115037745 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691050028 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765457194 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.81032778 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.763050211 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.746857493 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771609643 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.687543696 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.186002731 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.599163663 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320761407 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.764475286 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.819156798 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.11649972 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279271547 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862991349 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779423569 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762092596 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.461902217 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.054304769 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.004680226 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.247939659 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.854194678 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.762374564 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764941617 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680843239 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945541374 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.94885194 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063631439 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.090181234 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.865927899 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764395048 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.971254857 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964925836 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.133746703 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89685807 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.870712539 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872866603 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.702532405 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468155227 seconds)
  done (took 1602.964602193 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.780794219 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.79092387 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.78707961 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.831071135 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.818368338 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.774691704 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.895241792 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.798824001 seconds)
  done (took 56.172397858 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.762112675 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.932649641 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.767483081 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.764137653 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.775550162 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.774427096 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.511660883 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.776692061 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.76917722 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.76976035 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.765851674 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.766105901 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.059920724 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.786646372 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.764258321 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.769546597 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.772174116 seconds)
  done (took 73.06504367 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.768497006 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.158904657 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.805687117 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.770515371 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.750059254 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.782695978 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.981188655 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.817846855 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.77008455 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.017665423 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.065633462 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.790226598 seconds)
  done (took 89.18020191 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.778388561 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.771835548 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.768028853 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.769075928 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.768612924 seconds)
  done (took 10.56377737 seconds)
done (took 2092.87599862 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.024046026 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.959640409 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.016078742 seconds)
  done (took 5.676548688 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.908397597 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.96067351 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.072150458 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.078861226 seconds)
  done (took 9.723332114 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.075680312 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.142500806 seconds)
  done (took 5.918008013 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.089134653 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.802152066 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.144743683 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.768477453 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.772142909 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.771951372 seconds)
  done (took 22.018388291 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.768844155 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.768266467 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.769164531 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.768541205 seconds)
  done (took 8.775612425 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.766811894 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.45513444 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.768499238 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.780352 seconds)
  done (took 20.47068166 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.916954144 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.884231475 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.913187313 seconds)
  done (took 7.415442915 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.989366476 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.563893681 seconds)
  done (took 6.254251646 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.927097247 seconds)
  done (took 3.628161756 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.797427054 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.039321285 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.256920942 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.307121903 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.352488517 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.58690153 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.093840661 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.990502125 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.207944358 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.228271848 seconds)
  done (took 23.565326511 seconds)
done (took 128.206356078 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.110874383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.796600367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.973142233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.136518936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.006317242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.97289189 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.987055109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.147674079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.874630379 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.862248953 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.15788723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.006130734 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.935356371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.786343783 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.941234391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.785413049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.000227455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.141002647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.811582348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.036354133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.000536049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.772320537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.968348388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.78799462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.004211344 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.923576894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.318069968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.790234638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.956835459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.329824439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.931899192 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.168133238 seconds)
  done (took 165.124328285 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.771325059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.77180426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.772371645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.770645531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.271570519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.772235397 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.772079827 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.770276836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.17793399 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.161404654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.77185621 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.262927948 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.774134107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.771212071 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.769866069 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.77152234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.329744027 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.774157997 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.772586734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.771163259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.771517935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.097108962 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.772783019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.113250942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.315220498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.775236756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.772532055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.772759628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.771438968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.771870866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.773011313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.772421917 seconds)
  done (took 205.965292243 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.771619904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.774577986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.773535598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.77382596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.774037822 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.776448141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.773719757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.772958268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417925676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.409389828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.775036035 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.773408798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.777206072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.772917673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.773365438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.773591513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.772678372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.771861384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.77447558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.774314708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.776775406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.496652142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.785807106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.506330528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.774707844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.772270158 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.773551367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.773786074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.773382655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.775262633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.77548611 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.773540488 seconds)
  done (took 217.220521845 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.018969937 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.773920191 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.775069806 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.694673116 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.775382803 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.774366063 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.751841576 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.020099727 seconds)
  done (took 18.29080237 seconds)
done (took 608.313944555 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.151034759 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.994953617 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.959148856 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.799589287 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.055461255 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.850626044 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.793906374 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.858804458 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.61294595 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.873366289 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.455691203 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.817346914 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.549367342 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.823625901 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.918861739 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.853897935 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.384718757 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.488188209 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.971110933 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.886018555 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.983651242 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.697259257 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.881557993 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.64102942 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.580483071 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.756657231 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.820931876 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.387860803 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.808995024 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.955803618 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.470539441 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.060296811 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.811412375 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.793778955 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.854927451 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.827964513 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.99696757 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.808607198 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.922659349 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.493742368 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.87644189 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.526648001 seconds)
  done (took 98.765420378 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.788801255 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.783578749 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.783139245 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.783508223 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.792372064 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.782293383 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.783536106 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.783340541 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.783593448 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.782506131 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.783532941 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.793171996 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.783207128 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.792290767 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.783119632 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.783467714 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.783412809 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.792846453 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.783865462 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.783439341 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.784654507 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.784431161 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.778390755 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.784502532 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.783100709 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.784219442 seconds)
  done (took 48.13243645 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.778430268 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.936766811 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.027615349 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.799628966 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.779092568 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.781839794 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.796520227 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.782988657 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.781237877 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.780198249 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.881554254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.786166458 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.797368625 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.029081053 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.796333115 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.778720594 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.77811768 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.779879255 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.943970036 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.796926705 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.799104045 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.783703354 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.798815809 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.794291137 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.781476252 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.780413076 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.783304931 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.250537552 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.790103006 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.883934937 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.829080026 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.804805979 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.193159945 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.038801897 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.838732554 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.788753014 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.779868773 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.88538436 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.786642612 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.779685408 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.798005108 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.785411614 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.026400933 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.316820278 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.797394813 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.780804431 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.258052312 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.897029761 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.822897896 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.791855673 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.030799681 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.799663777 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.7815387 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.781105433 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.818205544 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.786984588 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.780632578 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.143722563 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.793712018 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.79982766 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.786258977 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.78231964 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.947757755 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.790958088 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.937568355 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.790914139 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.787112271 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.782118247 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.028856445 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.799599287 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.328084158 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.796580208 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.781109333 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.882839136 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.943209469 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.284781569 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.795627335 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.951158659 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.210717573 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.807010346 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.7889451 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.239331918 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.810691226 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.789437308 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.782752533 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.783367347 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.781256853 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.82247784 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.798455146 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.239903277 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.330070278 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.164307056 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.810122515 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.798122107 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.78335297 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.145058243 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.791503727 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.782471502 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.023646976 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.3355214 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.798189073 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.790122887 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.304611401 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.800176409 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.802438505 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.790972596 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.034840945 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.800476853 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.824030147 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.782236119 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.789860248 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.785774944 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.802759837 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.791335221 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.783533267 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.299414066 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.905560165 seconds)
  done (took 222.18905426 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.785096089 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.788743966 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.782902043 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.787302052 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.782671133 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.784392223 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.782272058 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.783523909 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.783960934 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.783118958 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.782620437 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.785427922 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.787664061 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.785930174 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.79110226 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.784200803 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.383258945 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.783324561 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.783899673 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.7821658 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.422802187 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.788801669 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.784670616 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.784416547 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.783273194 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.783820789 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.78619173 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.787832573 seconds)
  done (took 164.933598542 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.784898823 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.897271345 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.802875778 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.814563424 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.792262694 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.784470473 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.881920859 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.803433595 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.789548167 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.78541537 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.784528555 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.845818933 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.796484131 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.882669892 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.816557667 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.892174599 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.8987196 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.793012705 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.786470347 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.785693793 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.815069194 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.795751944 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.845294599 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.910560907 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.80311049 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.897718526 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.806800607 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.786274818 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.785640966 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.898420124 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.804325661 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.846937625 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.819025935 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.805579692 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.90383683 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.902887624 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.891097887 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.891313984 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.794151707 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.786272728 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.787653009 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.789202723 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.899169064 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.803698072 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.788013732 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.903593172 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.804941338 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.787757192 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.788410325 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.786684863 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.800165385 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.805492503 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.850989588 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.918338802 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.821277975 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.834512846 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.884478618 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.913991009 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.78827909 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.884695367 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.798348224 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.901586044 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.808404496 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.789743353 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.789084354 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.791358983 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.817187759 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.893623952 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.892497997 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.795860195 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.885069805 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.824061793 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.795342867 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.788675957 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.787959024 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.900996719 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.903160118 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.824760132 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.826653082 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.818648479 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.799793216 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.788838187 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.790886888 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.8069955 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.794303204 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.902040325 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.904354281 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.795851681 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.789701823 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.789327676 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.789982622 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.814800023 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.910189037 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.825130305 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.895210013 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.856409217 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.864476735 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.804812666 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.823101879 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.793594262 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.851376493 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.803741359 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.801960701 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.078747136 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.848628466 seconds)
  done (took 194.12737149 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.180489785 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.840768621 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.84626327 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.109318629 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.139257958 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.667846356 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.837103964 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.836782006 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.860823141 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.019659956 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.90990106 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.856426239 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.824883404 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.810377359 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.836001533 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.860701334 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.846355444 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.178718201 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.043998385 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.977108051 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.825785128 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.108340731 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.151208327 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.41803781 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.885825611 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.254248507 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.399622453 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.984965424 seconds)
  done (took 59.239135421 seconds)
done (took 789.094922723 seconds)
SAVING RESULT...
DONE!
