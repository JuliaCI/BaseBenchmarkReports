cset: moving following pidspec: 17327
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.269252351 seconds)
loading group "string"... done (took 0.644297995 seconds)
loading group "linalg"... done (took 8.308677195 seconds)
loading group "parallel"... done (took 0.169175361 seconds)
loading group "find"... done (took 1.339683843 seconds)
loading group "tuple"... done (took 1.987525588 seconds)
loading group "dates"... done (took 1.350652687 seconds)
loading group "micro"... done (took 0.203054684 seconds)
loading group "io"... done (took 0.932716999 seconds)
loading group "scalar"... done (took 40.782987371 seconds)
loading group "sparse"... done (took 12.467518165 seconds)
loading group "broadcast"... done (took 1.015498037 seconds)
loading group "union"... done (took 14.6681262 seconds)
loading group "simd"... done (took 5.07584911 seconds)
loading group "random"... done (took 10.104227717 seconds)
loading group "problem"... done (took 1.757293811 seconds)
loading group "array"... done (took 23.263417111 seconds)
loading group "misc"... done (took 1.763622477 seconds)
loading group "sort"... done (took 3.803525463 seconds)
loading group "collection"... done (took 19.774671936 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.546337539 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128618407 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140709743 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124647754 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154462543 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119886788 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128345492 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086994596 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.936512261 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152640329 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11822027 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.447360357 seconds)
done (took 5.516419323 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177556346 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094523831 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081907077 seconds)
  done (took 1.270697884 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067639001 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131848507 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06951032 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069623252 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069131859 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068665219 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068832687 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068806865 seconds)
  done (took 1.642510146 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076305779 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071470895 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068334244 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070507919 seconds)
  done (took 1.3842422 seconds)
done (took 5.650759315 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.810590803 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215970394 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19217609 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413444839 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.140016181 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.185155635 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64317557 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318838877 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206540925 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098606741 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115694253 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.366339561 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128390169 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.654418691 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081536974 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10038007 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143353796 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453645383 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072343236 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09085743 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095406112 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132980969 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093303868 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079761185 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153606276 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071018662 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144773422 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086164794 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069641456 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225401612 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178070227 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66914538 seconds)
  done (took 10.5650759 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10742283 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10411917 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071543539 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128650939 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102279075 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073001595 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078255608 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070008455 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093613458 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133277646 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09561199 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.112218909 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069513431 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072641589 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086437712 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201495645 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081192017 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082486647 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071144543 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081805231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11204514 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084524822 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083512104 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083655371 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132488257 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17130444 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10069853 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101649046 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070895911 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089565988 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117760579 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131505087 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069679966 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068725368 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129882357 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097468031 seconds)
  done (took 4.694458588 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.119087111 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093991542 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15719585 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094229602 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145141791 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06767849 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115949245 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068168608 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086326775 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241398953 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.459967258 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.641092482 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.127624626 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121158058 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109728305 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074239486 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072743692 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070574052 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.27605754 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101560122 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114833161 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08594109 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072418807 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072338969 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.072064342 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073631321 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066190436 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071041679 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091593889 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078720189 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334106611 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130654421 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070604161 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.948898546 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.073729921 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171147034 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070541325 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09536337 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108926077 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066850496 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.235797269 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151862927 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071565312 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067407578 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16803511 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067142566 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074164443 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069388828 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088499445 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112055986 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124912366 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068038967 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068838458 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173085498 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067991976 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084182142 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.266057588 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155071593 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068112634 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302687825 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097292404 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074710704 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067730749 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.198054634 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119389611 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069462292 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069141621 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07179268 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071653681 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37924827 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069004546 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.894126553 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071324936 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080388346 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07282943 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07264631 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081619531 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082192662 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09550887 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070035335 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076844695 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069932635 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068143562 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066329962 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069230891 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095980928 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.388821519 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072816935 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074269808 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066823434 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09662453 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100735946 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067396009 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06673846 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.208471742 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073529603 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069334089 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07082847 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.124560189 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073780296 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116650718 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070752563 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.079559552 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098080548 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07051466 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10209401 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077716537 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072382641 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.471642212 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066990145 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07509477 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068858384 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070005345 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068872605 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081210604 seconds)
  done (took 22.191404562 seconds)
done (took 39.665232822 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.249437987 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086654286 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086687763 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.087317568 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087447694 seconds)
  done (took 1.784705965 seconds)
done (took 2.958466398 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.13029638 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105291626 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066679473 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101208053 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066718078 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104500713 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106917396 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086613295 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103443739 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066844959 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100336323 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066910398 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067034694 seconds)
  done (took 2.355150309 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084795836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085369479 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07110723 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083586818 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064896618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084123857 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083766518 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091017495 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083352266 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074577542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064729504 seconds)
  done (took 2.035946349 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084507045 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085836362 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070817647 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084150901 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064341203 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084185184 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083614061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088301292 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084044954 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076029624 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065373782 seconds)
  done (took 2.031997277 seconds)
done (took 7.578533959 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081784898 seconds)
  done (took 1.22717207 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.543399022 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.625834105 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079773573 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100947545 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197985853 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111285077 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239764623 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083745987 seconds)
  done (took 8.30521727 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097952933 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071232093 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072499212 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084875079 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071626852 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070948624 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072721874 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072960608 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071398707 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073090768 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071844213 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072954619 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072938396 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072494533 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071585382 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071393249 seconds)
  done (took 2.42351262 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100320214 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098519441 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076421804 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078270138 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074790997 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074656429 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077863757 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076750913 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073951821 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075232599 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078152119 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076200733 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075918627 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066759049 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076742631 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079866359 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074164792 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077068113 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077636705 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078335816 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0786689 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066347074 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076057283 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077320762 seconds)
  done (took 3.130320476 seconds)
done (took 16.245259435 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.119905794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081216534 seconds)
  done (took 1.354122789 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08226717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082495449 seconds)
  done (took 1.329365685 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081463588 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065322809 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087858494 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076525849 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066124086 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065839714 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085929692 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066404608 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066315595 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066295284 seconds)
  done (took 1.894290215 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068547492 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076401493 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072085732 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082203132 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073166616 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066827576 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071952202 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067699222 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077050169 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065948945 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071030604 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086097867 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070659062 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087440107 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071805115 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070543928 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072913576 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069772653 seconds)
  done (took 2.489898465 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066334965 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067185016 seconds)
  done (took 1.304406907 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069626779 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066194229 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068268834 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068265325 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065368511 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065061483 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065851579 seconds)
  done (took 1.633332979 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413711841 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125637249 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331468449 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072553298 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083313672 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258011983 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066722175 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072467313 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072338648 seconds)
  done (took 2.706644075 seconds)
done (took 13.885915012 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084211029 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089033343 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101549152 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420227888 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096150956 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070120199 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115834058 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185592278 seconds)
done (took 2.344157155 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.222031147 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.83647938 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.488598043 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215938054 seconds)
  done (took 2.714496227 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353912498 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083805018 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080302595 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069155853 seconds)
  done (took 1.771172156 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069394944 seconds)
    (2/2) benchmarking "read"...
    done (took 0.189277341 seconds)
  done (took 1.434482807 seconds)
done (took 7.320992674 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067822466 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066370142 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.067230904 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066506513 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066438505 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067020007 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066706446 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066982201 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09165916 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066675087 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.066589466 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066464499 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067145843 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06744919 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06718662 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067093 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06666969 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067205216 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06721056 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066926283 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066836606 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06704832 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066693395 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066783994 seconds)
  done (took 2.83882706 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085460725 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069475134 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071228487 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070901433 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07150954 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071074154 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071787524 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069516876 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071424958 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069328706 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071824172 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071676562 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069409957 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071674973 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069076984 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071745876 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071001634 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069464072 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069109913 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071686881 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070711072 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069383592 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071874667 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071108909 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071602684 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071792363 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068748255 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069197807 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071085514 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071434462 seconds)
  done (took 3.326265785 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068281951 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063473938 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063921634 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072504818 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063524487 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064076746 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063192612 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06339882 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063920073 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063271321 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064931773 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062797538 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063657702 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063700019 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064077594 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067460395 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081393343 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063462856 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063320885 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063508484 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067721699 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063344561 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063285727 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062812161 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06305087 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063456075 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066036918 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062725674 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064081555 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062764217 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067599268 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067563376 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063099851 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068184849 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068882447 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062964282 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067822687 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062793932 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063731179 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062712105 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062836277 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06314877 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063476662 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072472151 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063500651 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064435292 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063797215 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064466443 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063958613 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065362928 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062688268 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06368859 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065318038 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064373473 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068503803 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063571589 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064021203 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063014181 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064382498 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062981503 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063119954 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062986528 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06625045 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064452143 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081573885 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072224466 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0639979 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065136446 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063516618 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06629012 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064824584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078898365 seconds)
  done (took 5.898200236 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089845793 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089734477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069046964 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068738541 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064250003 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064024686 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072485317 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064089392 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069508691 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084127029 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063902353 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068570201 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068727212 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068546536 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064303532 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068962185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073070265 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064661305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06407993 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06800653 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064289681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072837308 seconds)
  done (took 2.74643196 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156170265 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070313496 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10954179 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075196343 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073547608 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075722944 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070704943 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070266642 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070520523 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070817692 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071359004 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071140275 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072989418 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070740488 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070967497 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070488568 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070895082 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071000862 seconds)
  done (took 2.603326492 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081360979 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069588377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089406486 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070961552 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07084086 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069537361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074174789 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075318827 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069542117 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069900869 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07489544 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06970151 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069468219 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070944763 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069410194 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0693204 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069324411 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069635498 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074502223 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074316327 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074018318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075005245 seconds)
  done (took 2.792914577 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082046043 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068754718 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085221358 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071087996 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064338646 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064326169 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.080527388 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06922771 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070176995 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068074888 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068847841 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06510439 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071638679 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069152742 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07173272 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068640348 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068280513 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0691895 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068668253 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064015456 seconds)
  done (took 2.601326653 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08714086 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067260501 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067105165 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074722716 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067303029 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067154786 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074091169 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06718981 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067484232 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088151774 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067159095 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067675519 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073805414 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071722991 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067435158 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073811228 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073913839 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073725384 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070242406 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067154197 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088014486 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067350901 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073936998 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067951924 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067061453 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067396892 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067127714 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071693125 seconds)
  done (took 3.198408732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067801973 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066723452 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066778436 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066547859 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066804976 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066481891 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067545193 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066715924 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066469185 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066995699 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066533257 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066876002 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066971848 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066499991 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066336273 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06715951 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067079892 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067040048 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067063472 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067195859 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06627849 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066895518 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066556128 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066470564 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066527485 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066076006 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066753181 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066674681 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066395495 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066573906 seconds)
  done (took 3.202836238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078447201 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075998649 seconds)
  done (took 1.352631898 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065784364 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082248992 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062513896 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074378438 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072895949 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066934785 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073243678 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072961027 seconds)
  done (took 1.764987928 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087508084 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078407142 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066577487 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07919651 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077295672 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086586211 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12978438 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066158731 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076705235 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066819129 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085211222 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068028238 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077062559 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070922629 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076734907 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079811898 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063828053 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071647434 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067229777 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064500374 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066764691 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079943076 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075496983 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.0642396 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071446398 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094397226 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082389018 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065238857 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072899559 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078621857 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076414133 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062855362 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065382812 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065982584 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063673167 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077124648 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085323532 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073112744 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078932663 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066596034 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074997384 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063730395 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074516534 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076767326 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082708652 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065837231 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065895543 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063305229 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066431581 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072446357 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063688348 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070352141 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063537061 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078041152 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073924021 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081066566 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064282909 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07161404 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072405582 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072830673 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077566772 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072651081 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075461487 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065473012 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081367166 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0758733 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078044267 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063639411 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062568203 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063722688 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080401025 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095354163 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075479853 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066097874 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06668731 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063622496 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072714973 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066742028 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075101035 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07729705 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065514298 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070534339 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077815676 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07171696 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07257486 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07255016 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063984964 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069526026 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066441746 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086652433 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064786069 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06394737 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066672963 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081543537 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073077985 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068574981 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066969015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077262876 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062478756 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065797641 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066193157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071344334 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079466273 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0701062 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070354445 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07963116 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07491634 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071007923 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072366698 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062048482 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065827336 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067178495 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076442424 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062088726 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072526952 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069299844 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065201599 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077619582 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063238249 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064290435 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076997584 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076254744 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062944127 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06235291 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071600574 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064685207 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067294081 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.207814492 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065718874 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06504305 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065046149 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075293006 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066378178 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074407074 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070460959 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073530913 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063781401 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064353852 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070835236 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078366233 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069357272 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071800671 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076232425 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071611704 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065180804 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078649074 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072755222 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068620083 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075755219 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071145907 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063973836 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068290036 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072629801 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064436123 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073444671 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068219855 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072565639 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066980285 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064700539 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072183547 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066759575 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068336558 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071741201 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065109383 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081430799 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072549397 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063284146 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063336299 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073126484 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066613168 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065281233 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068001302 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072258132 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065774614 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064390692 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065175634 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071761886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074462339 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069383921 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066680749 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076005531 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084036107 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065468532 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073454931 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065938837 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066612043 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066467375 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080361089 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076772956 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07004851 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072398739 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063591391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075845433 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078349412 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068065426 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064147635 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068076946 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069943622 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077740015 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069769078 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066273743 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06411095 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071850434 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068384765 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072502784 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064972658 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068012217 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07115681 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064010423 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071984191 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066503829 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080717691 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07324775 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063865337 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069060394 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064195131 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076966502 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064421909 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066587823 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068112033 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066531939 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064724426 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072294847 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062736699 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079160134 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078484485 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070808778 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068291374 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065386452 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078213707 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071748337 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074456778 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072739641 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075632251 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081444079 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068622918 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07290019 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081711496 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065483632 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063404696 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077494257 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064339932 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064533157 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064631875 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063991476 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072626396 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072358029 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075427435 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062278119 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072280272 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063660398 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067608754 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063133683 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073565324 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071900025 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068515234 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075714775 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0655875 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064480969 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072163401 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.197127737 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065415613 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067626472 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073928398 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066839717 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072224542 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068344317 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072482654 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068285024 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064210397 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071769507 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066035041 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070932382 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075334163 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065629023 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071651483 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07240523 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065955478 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072330098 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069912678 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06882316 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073022261 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071835459 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070783483 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07266021 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064355468 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077862161 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065879452 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079603077 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071189942 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063113172 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071835018 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072509697 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.0709278 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06658942 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06646301 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071214464 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065545079 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073306487 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078481268 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0673347 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082507783 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077316556 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071626841 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072627886 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071553801 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072189397 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068199968 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070861751 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066665433 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07162802 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066040739 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074808518 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073265305 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070583172 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072502799 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066512463 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071016811 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066758957 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063330213 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068033411 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068804407 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065232853 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078935248 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066649336 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069253418 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064864088 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066763191 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065003541 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063331864 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073058101 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074430234 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066656111 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077000194 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068178484 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072599774 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082151331 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063391819 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064337811 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064118826 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06707116 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078922261 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066298864 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080510481 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071537286 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069000884 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063656382 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066696991 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064430907 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063691669 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063701688 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074362958 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068309359 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064977146 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065624878 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072722643 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066863192 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078873918 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064963408 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070431847 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066242224 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063086824 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06856186 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067953142 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072377952 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067852221 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066813919 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063417277 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065346109 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069870204 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071764089 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065183751 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0709068 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077715949 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065484934 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073096805 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068053684 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063906571 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073342654 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065380662 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065681979 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067866067 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073796917 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073427577 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06647505 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080318438 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067688447 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070970724 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064810815 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063204601 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064219083 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064040874 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063936885 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06704473 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065125242 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077544753 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.19964798 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073711382 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071892918 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069920305 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076874729 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066813141 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07254644 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071870003 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067623615 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072456997 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079156628 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070706042 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07367024 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066697937 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072013867 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076133501 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068977456 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078644811 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071549724 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066542876 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071860495 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067392011 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065943801 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065830803 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064991066 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076782466 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066726293 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068246791 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06836469 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064078942 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070533347 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068034435 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079471075 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072768184 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07381612 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06438747 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063607635 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066915521 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067408383 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072361281 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073357348 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076627221 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072735319 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069654264 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065583796 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081286148 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075983018 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073606952 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067046269 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074371564 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067376757 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073009595 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070482251 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071293357 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067273693 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073623259 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072005241 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068297495 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077236147 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074521722 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067213961 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072115596 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071750595 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071009266 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063824394 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066759094 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072244226 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075028286 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072601265 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065892646 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081985836 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067449892 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071281835 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068591424 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065304495 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074662644 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063868767 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072470699 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066592519 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066539229 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064141732 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068731151 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066813104 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073250784 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068364283 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063951014 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082127473 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080366941 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072385195 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065288439 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064794725 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063842674 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06437352 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068431063 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06675542 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072159496 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081347092 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068376894 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067937824 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063629851 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065874722 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073294931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073757284 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063667611 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064102851 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068385999 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072256225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077362369 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064474605 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065812966 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074410467 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072369623 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063553409 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069093148 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063053506 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073483457 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083047589 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066200162 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071680768 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07588377 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079017519 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066142211 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063852286 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066309127 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072131937 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089044585 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066217203 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06601957 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084043031 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072056279 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067017128 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063808555 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071338025 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067088188 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077781417 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.205394766 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069528919 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076198512 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072498141 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074766677 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077215362 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077900469 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072593744 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072530505 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06469737 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070821311 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064315578 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067896733 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06659435 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06590823 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070401903 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073103388 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068349257 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082567808 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081975536 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06887934 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063553263 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068409415 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068129475 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063784759 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066523013 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064396995 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064373571 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063896085 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065419405 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071330802 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074780684 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069774188 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065830846 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065362293 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062853953 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075436232 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072704089 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072002144 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063157059 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065815287 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065933451 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07413293 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068419261 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067597592 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072079381 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071303015 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07139336 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063926806 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077609759 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065034385 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072113181 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069033938 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065708586 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066423355 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073574961 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070325533 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06731265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072947877 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072694168 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068151837 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063412018 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063477597 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075414171 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063859238 seconds)
  done (took 43.720827462 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103521552 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064885145 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064316486 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064136622 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074320551 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064827802 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063735096 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065513771 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065091616 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067198936 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064853286 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063934147 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072114436 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079828688 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074973555 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068419209 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064020612 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065016396 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063980057 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064717234 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072138863 seconds)
  done (took 2.751874999 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072529562 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080184076 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077473548 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082075048 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073222857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069255902 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077615905 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069467228 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077990022 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074733794 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07732684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068955766 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074706726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074676823 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074918773 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069146835 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077887635 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073327315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069225073 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077390039 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069379371 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07760122 seconds)
  done (took 2.922858473 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066138222 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064873676 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071442982 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063238262 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064238137 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062759523 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068395429 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063383708 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067025104 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06719946 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066798494 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066755577 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072003538 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063223045 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068030523 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.0629255 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110421453 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067370941 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064644756 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065678966 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063665079 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072594232 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063343345 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064119556 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066965149 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067618881 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065368158 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063447771 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065266579 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067168141 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064940615 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063189681 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071880053 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071030767 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067114287 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067300469 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06474342 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064789381 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066291032 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063423158 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070883332 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063854507 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06525087 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071797872 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063451888 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063263909 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072095529 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064761803 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062971933 seconds)
  done (took 4.571690839 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077394199 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114427084 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070701919 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093421389 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079106825 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071553991 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07078234 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094974589 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065516246 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066610112 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080487542 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080475348 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068052079 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069219076 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071822173 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06784299 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068038061 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066724238 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071148197 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066824721 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071573713 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071820732 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07851123 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079974646 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068802313 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067359425 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067120814 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068873612 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079769669 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071918966 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069416914 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070435091 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079692361 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072744076 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066922933 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066933338 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080703305 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067886576 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067429608 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065380317 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067677801 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069019519 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072013837 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081007222 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0677589 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072833424 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067344492 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065491212 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079997901 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067698858 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07218586 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080876238 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068907496 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068017621 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06965264 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08003092 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067713144 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066115348 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067942139 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079544229 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06589794 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0683271 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080712739 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06732167 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071325055 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080272159 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072911689 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06823552 seconds)
  done (took 6.382817163 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076166687 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09689342 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0827851 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082757527 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075924465 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076135004 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075898131 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076066026 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075822129 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080155041 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076344127 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118183406 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071699152 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077970095 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07593476 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075892435 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076060502 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076035534 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076603543 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075215966 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076044707 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08218629 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075118311 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082567249 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079214095 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072033335 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075617912 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07550743 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082501671 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075738683 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079156164 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075443869 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075596308 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082261045 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07904069 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075686933 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065037655 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075546294 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076402004 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075644716 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071524659 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082838449 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076053655 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071547296 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075725831 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0755637 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082386525 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078932879 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077987199 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079826824 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075918889 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082548431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075460279 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076155685 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082153286 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085875468 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082271968 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082712404 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076023734 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082570655 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08219002 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085194731 seconds)
  done (took 6.192402297 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082053441 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072997876 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084610261 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063846149 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06678013 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075204193 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0639181 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064066002 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07317487 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073096863 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075593084 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074928702 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07749564 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075315613 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075098801 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077881567 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074912517 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075103046 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073162871 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074832967 seconds)
  done (took 2.793141256 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079863927 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084781931 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070215685 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074575813 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070200356 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074216951 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069520097 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069915937 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070700711 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070548403 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076572831 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075833749 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070229477 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075705365 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076199131 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075339417 seconds)
  done (took 2.481037607 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087086068 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072984737 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080459184 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065652447 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070145862 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064784321 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065389106 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063792085 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064547979 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079531262 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065624337 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077347947 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065717906 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064832273 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065250181 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07178283 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064974132 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065315737 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065903296 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079124126 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072986008 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066759355 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069550742 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065812846 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071252003 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073234855 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067470221 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069482094 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065673572 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066112841 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072002107 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072404417 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065750159 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066039086 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064616376 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065541082 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065293081 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066227893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071526364 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065247046 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063680446 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07055319 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065747089 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066720262 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06453456 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.084331786 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064416544 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071468886 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065494855 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071306609 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065811757 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06778795 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06647241 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073610167 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06804279 seconds)
  done (took 5.089276721 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082991814 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069683715 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064286684 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064032899 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06937924 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070397532 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070134268 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070188419 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070798998 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064107731 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070693455 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069253755 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070985968 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069976457 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070456226 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070009987 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064003039 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070426843 seconds)
  done (took 2.566533047 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075440236 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069165797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073845936 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06936332 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068942502 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068230878 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064158964 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064736318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064323683 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069066967 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069501619 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068825545 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06394371 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068250726 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068863567 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068795726 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068398413 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064038417 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06934412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063931225 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068348356 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064320744 seconds)
  done (took 2.794257246 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098833533 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086554958 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144733935 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082460884 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090178016 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074271471 seconds)
  done (took 1.88203162 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096064916 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101494575 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0694546 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069933738 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074970907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072109076 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073690212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07294599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077760922 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078146219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073026606 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081103843 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077549688 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079972449 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075742458 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075184745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073142978 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072905063 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069353331 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083331093 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07330946 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07773985 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073324191 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073094485 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07431764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079725381 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077605131 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078685478 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072945256 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077965358 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075368524 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072717587 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077906844 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077721501 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069234531 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077392188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073000388 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08269499 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075090175 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079309021 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069302731 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075339046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077306813 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076734974 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077981233 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072686019 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076689725 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072624786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072710861 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087457757 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075180238 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079122221 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075000489 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078272177 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077575017 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084333049 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077750885 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079164614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075161885 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077646917 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0795149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075278118 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079441551 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077638458 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074991167 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079768424 seconds)
  done (took 6.385847972 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10874534 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070577658 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07278948 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078505077 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07958154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073670607 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073290831 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073568903 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073214589 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070250556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109055367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073411781 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079885854 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080017509 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073766171 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073359579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073219515 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080033583 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070530917 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084709567 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073054251 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080178398 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079688355 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079912823 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078120504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075686264 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072734122 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073195457 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073330853 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072628582 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077311981 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072748149 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079853506 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069578471 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079877227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072990626 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072796285 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077031714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072896589 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075085422 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079715459 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082786889 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072714429 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072634928 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078170172 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073119431 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072638469 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069735096 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072707303 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069481046 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077574977 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077955401 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078410951 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079488425 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073204227 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072857924 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073405109 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073369221 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073527919 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075580679 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079882394 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073171954 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084673351 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073122881 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072927174 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079565191 seconds)
  done (took 6.377786998 seconds)
done (took 130.41695539 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212883785 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185126477 seconds)
  done (took 1.693653028 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076596322 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10913689 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085229951 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135975257 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07101008 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107896715 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10489506 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083818501 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0734064 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073637247 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073274528 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075938013 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13956678 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071549783 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073121681 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076059677 seconds)
  done (took 2.746160451 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108284193 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.220642138 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111477472 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07129401 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107447573 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080025953 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071075479 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087617393 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.079042579 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072908301 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079768565 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077865042 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072880402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077700388 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078603519 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080023521 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07298936 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079508011 seconds)
  done (took 2.947532518 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107710179 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.099093367 seconds)
  done (took 1.527780387 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.179181057 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133497974 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20365456 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348210811 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155166907 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.427843159 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142430356 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140434662 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112825689 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134956732 seconds)
  done (took 3.292642232 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107503883 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.205682038 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305447491 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123702571 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079170563 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113401275 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124912755 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084346195 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084082534 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084185715 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083828732 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081360299 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103856217 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079268555 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078207685 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080850465 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106739059 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07713718 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078269911 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078811025 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107099652 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071793223 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079692401 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077338105 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081123767 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081775331 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073357366 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071715654 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078385192 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078060927 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082249986 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112136044 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080867583 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108653665 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076029426 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109893458 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081064471 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076842444 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078167409 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076681497 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07995318 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080865363 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08091631 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080827826 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073014825 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081181379 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073487096 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071713878 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082969786 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073257026 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082642497 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082107289 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108916282 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073309773 seconds)
  done (took 6.316186943 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11324188 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107810414 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07394517 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1158936 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107806732 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073022208 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108552058 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102324492 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111268805 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073250028 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071532407 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073536576 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082067019 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086563281 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119657367 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109298314 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073474171 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072848549 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11124892 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110914539 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072294021 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105206695 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101246892 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111033989 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070314436 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073554767 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071600174 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073449434 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079422021 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080981891 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072187415 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082250072 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.0911032 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080725305 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070925857 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071244984 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071379537 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081581167 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082048653 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081285691 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07956885 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070712238 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071131566 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072120799 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071974515 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070471704 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080001334 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08165746 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080376663 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071471911 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072567238 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071101526 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072284919 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08102448 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079077278 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082383605 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0816893 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071848678 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071515858 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074210893 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08236701 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081525275 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081174976 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072401878 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081689446 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071412844 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086576666 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087237792 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071443855 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072874422 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070901651 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071566202 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072364905 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079544412 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079229534 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07297864 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07144688 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071383756 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081512554 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079490497 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07131227 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078838227 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070208197 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07150309 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072701724 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072529447 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078899133 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081598709 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072906561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071505855 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072151728 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071382154 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070383406 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079043738 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08094255 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080599241 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080019106 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072589594 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080935263 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080600378 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073169331 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080586952 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071452328 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073191784 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072396079 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079404902 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078321705 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08063053 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071517969 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070894472 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078409055 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080792703 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071241108 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.215950822 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083447418 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081810841 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072688843 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084975717 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073408749 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082596325 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073067272 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082986212 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072552371 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081205115 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071935444 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071384774 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071590342 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081208611 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073943112 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071896493 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072761397 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071959959 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081199206 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084516327 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072487254 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080864059 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080527378 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072966503 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081013934 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071744148 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08096706 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072451558 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073320002 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070590417 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08387826 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072316957 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071708344 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071716165 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082636726 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07241673 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081774288 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079864019 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071487929 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085218081 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079942979 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078165512 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083138352 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073826981 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072036682 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07173242 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072192286 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079911544 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081295739 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07399552 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072179728 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079340306 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082727603 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071157171 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080191382 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080788983 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081002903 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072488925 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072324258 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083428525 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083251243 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080035767 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080041929 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080728915 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072270334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079601802 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080408789 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072034999 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085537025 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072293976 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08481992 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081146217 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079252126 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081078339 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082166831 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08265991 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08266976 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086363168 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071737863 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071900644 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080466397 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071815192 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070748354 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079539758 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073041666 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072820503 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085866718 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070075089 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079661347 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069049127 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081095046 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070692846 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072815308 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085194361 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072093555 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072756516 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079853352 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07426698 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079258194 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082584445 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077432339 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069388095 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07109688 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080843716 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081124513 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071496391 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071209227 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072474383 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079150298 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078095994 seconds)
  done (took 19.11008482 seconds)
done (took 38.972655279 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217167501 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161690751 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.194466041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118585886 seconds)
  done (took 2.115272618 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11290441 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102908258 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091654446 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067934679 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097328287 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067907116 seconds)
  done (took 1.897042769 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307081811 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207360959 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18493311 seconds)
  done (took 2.043710703 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215543286 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.203378471 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471192721 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.288918315 seconds)
  done (took 2.626258797 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14620731 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086285155 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067058703 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085272952 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128781805 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153037324 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096926 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122120819 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078391868 seconds)
  done (took 2.372381799 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153741268 seconds)
done (took 12.595858547 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.123300638 seconds)
    (2/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104229845 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08246024 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078256823 seconds)
    (5/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077479003 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.216829457 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.268265627 seconds)
    (8/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.242790527 seconds)
    (9/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075357961 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071414762 seconds)
    (11/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.213544923 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079193061 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.211441075 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080674158 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068266705 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.18203737 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.466689744 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109725534 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076548729 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.24099802 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.190519055 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.179266537 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077597944 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.20969909 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098274127 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108070064 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07823153 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080806469 seconds)
    (29/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.177178054 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080976618 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088229773 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087360045 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078082394 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.149634583 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078674756 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.225113354 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171548931 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087902089 seconds)
    (39/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.14239121 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.201083158 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.119771715 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076019003 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18484595 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143498138 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174476131 seconds)
    (46/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090724502 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.181862186 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067068432 seconds)
    (49/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.199348472 seconds)
    (50/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.184149245 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.198927911 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071068397 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147567569 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068651266 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078612762 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.215668482 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.203666549 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.164633092 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.231133113 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.095280918 seconds)
    (61/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06841876 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177317795 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086513555 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 0.068753342 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079470465 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075730311 seconds)
    (67/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.143980078 seconds)
    (68/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.13817697 seconds)
    (69/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073900042 seconds)
    (70/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.174940504 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108407176 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075922578 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067513133 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076507233 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069216526 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071873986 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068175083 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066471138 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126097594 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078220915 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066576536 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.260393229 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071552276 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.190106396 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069835821 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205175211 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080316721 seconds)
    (88/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.186267753 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170561993 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.225483607 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077012072 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071727302 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069593416 seconds)
    (94/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078796621 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067984924 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141880518 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.068378117 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069403615 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10410044 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126004352 seconds)
    (101/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077348655 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077027446 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145455145 seconds)
    (104/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.14314631 seconds)
    (105/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071403666 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067607898 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094311069 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074674457 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070077497 seconds)
    (110/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142679173 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068295295 seconds)
    (112/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069576524 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17390317 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076543448 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068605168 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070182115 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.143110816 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077898502 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136469352 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122139525 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075019018 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083320777 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.237631558 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075047912 seconds)
    (125/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069610239 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175137428 seconds)
    (127/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075389201 seconds)
    (128/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.224167859 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087684825 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06731115 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19772456 seconds)
    (132/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071420336 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090120746 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076553086 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072353743 seconds)
    (136/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.070023225 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.096677299 seconds)
    (138/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072290973 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068319987 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128837242 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175659929 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.158293119 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 0.249026035 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067481906 seconds)
    (145/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.174815735 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067072316 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068690794 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068591923 seconds)
    (149/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068595289 seconds)
    (150/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077668571 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089577926 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 0.187030297 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091979725 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070575737 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076834538 seconds)
    (156/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06837295 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069860125 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095166876 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090502257 seconds)
    (160/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08726742 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.121492365 seconds)
    (162/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069222038 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.199033775 seconds)
    (164/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069812446 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091388456 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076337953 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082617632 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069626632 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073952639 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 0.134272964 seconds)
    (171/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076917093 seconds)
    (172/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067732046 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127096749 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.142073128 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182044637 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068431538 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070906586 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176087109 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092338383 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07649514 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143321555 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074821538 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068388406 seconds)
    (184/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082026867 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080520527 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066901353 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069352324 seconds)
    (188/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.068305593 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066919233 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.309411195 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076194311 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07155213 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070962389 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070633816 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083324425 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070187588 seconds)
    (197/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070904007 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.099360377 seconds)
    (199/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.070150895 seconds)
    (200/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078592244 seconds)
    (201/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.070884462 seconds)
    (202/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.20225836 seconds)
    (203/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081941358 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069512079 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.07027114 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07289299 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069877327 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069666364 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122386979 seconds)
    (210/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184086304 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127043045 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075972688 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081631885 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081581476 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068934256 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069033989 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075064815 seconds)
    (218/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185990841 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068860995 seconds)
    (220/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124638771 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.150366604 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068957871 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068537061 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079657628 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07733848 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136519362 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140588647 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07121665 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06978749 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069644353 seconds)
    (231/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.142185893 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076248695 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09115421 seconds)
    (234/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069301923 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075335264 seconds)
    (236/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077661006 seconds)
    (237/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072550792 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071142827 seconds)
    (239/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069810802 seconds)
    (240/309) benchmarking ("sort", Float32, false)...
    done (took 0.136983075 seconds)
    (241/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072003735 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069903245 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089990592 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094547625 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071534457 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076559084 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078341273 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068386326 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.069211842 seconds)
    (250/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069140445 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095179013 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113309324 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067638718 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115955109 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.069103532 seconds)
    (256/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075138965 seconds)
    (257/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.069508554 seconds)
    (258/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.0773559 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076468422 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068279519 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069093578 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068380953 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093647615 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138543331 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097141253 seconds)
    (266/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081588049 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068228092 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095366449 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091843136 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068537761 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094175228 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078122036 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06927979 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075291138 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068399839 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089433061 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069555898 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067965762 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070656031 seconds)
    (280/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069295085 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.069476362 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068533397 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131907304 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076328109 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089707057 seconds)
    (286/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068513018 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068081279 seconds)
    (288/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068303412 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069400769 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074442138 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070761227 seconds)
    (292/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074441866 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068225319 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076475905 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13970095 seconds)
    (296/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067250537 seconds)
    (297/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071956594 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067393916 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06829578 seconds)
    (300/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073248411 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069883035 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068333634 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074829212 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070134974 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071323998 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067328014 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067889113 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068183477 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129758649 seconds)
  done (took 33.965843406 seconds)
done (took 35.329882052 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087705195 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102088958 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075841033 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096346677 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084209427 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098867081 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076255825 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081982529 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084166677 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082754035 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082111277 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075184685 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077468426 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077680492 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075668898 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100871004 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082339509 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077029872 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076565308 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068186707 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077489838 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068843452 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067873058 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074903816 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079994441 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077371236 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078350752 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077883027 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068519475 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068293705 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07291121 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077236219 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068683098 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081106146 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077672595 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076885112 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078421489 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081620642 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068396613 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068640941 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078647255 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06841589 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076424843 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074600691 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073229773 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074951869 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077006433 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081442797 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100365585 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073529705 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078860702 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079476887 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080697045 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073739899 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073723695 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076694833 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074944478 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10057494 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076956091 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073276651 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077974149 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077948175 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074755707 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076258021 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076913702 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078974792 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080519398 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074580058 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078450522 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075446785 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06803011 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076273236 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072828626 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068218082 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082387307 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080817941 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067201929 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07238925 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075904551 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077156843 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068427778 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073302192 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067718568 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073179688 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07339631 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074808839 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073227983 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076258391 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067939843 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076861192 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075736032 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076110694 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067949646 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08104839 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068356172 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074213098 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068383332 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068441555 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067587091 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073537456 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067990276 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073019398 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077225557 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067239181 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072646397 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081736085 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068047216 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075277968 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067662833 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067826374 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079767998 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078435836 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067947869 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072948323 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067218618 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073122484 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068243863 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067526186 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068044592 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067901568 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072088252 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067834057 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072908728 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073156843 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080459502 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067275369 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073005704 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072776942 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067493323 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074301419 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067880527 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06764278 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067738007 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080721226 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072272319 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067450054 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07276968 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072536581 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074843737 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066292885 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075542612 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072855121 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071385747 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073393724 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066413279 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.219582518 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071280395 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070958983 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066202383 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066341487 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0659461 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066297792 seconds)
done (took 13.003752391 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069151425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.119969004 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096294079 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095546987 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085646126 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069693841 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076971871 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095608313 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070189247 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100251886 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090507092 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091834326 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11364534 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067889326 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068859731 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069754247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070618124 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08140332 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097192618 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09185178 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108685086 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068983168 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089796241 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089302576 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08554722 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090396512 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070256272 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070279217 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07161769 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092032559 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093336597 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071903027 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069406958 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093191863 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087985799 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083302723 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069416835 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07861956 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069623692 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068908019 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.0706968 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090922934 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078181093 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078015434 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069923867 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076862645 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070327975 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085764204 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090589609 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07824033 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085731126 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094379834 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073395891 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085103473 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068174493 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085778708 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079083909 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069667752 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069259125 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074297113 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069095931 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071130945 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080697008 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078573728 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074026282 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084882444 seconds)
  done (took 6.78267596 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088693574 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099803923 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086251516 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087210487 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06865434 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069031621 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070291712 seconds)
  done (took 2.024520876 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070120983 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090137416 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093624303 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09359208 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085997698 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094414411 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077108822 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069407668 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099242774 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068722923 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089557629 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101170821 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073517248 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081438999 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095005654 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069040446 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094592229 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069424138 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069753701 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094555055 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074224309 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09708175 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080800883 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069502647 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083035982 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069408203 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103053391 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077698758 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070669239 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070620274 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070228106 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097174097 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082367635 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081600762 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070824036 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085206585 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083794702 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072813612 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080642651 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081550307 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083324166 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070922469 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068201599 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071208135 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072523336 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081089708 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068322757 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07108825 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070447059 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089244741 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068368977 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081928901 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07330767 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075064824 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075634688 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07532486 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078170494 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070853194 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089046388 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070442347 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08682406 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087026502 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082843204 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08630495 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070044529 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082166103 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082863864 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070127028 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071249435 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070930592 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086371477 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.0729207 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071033652 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081534916 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069370635 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094425415 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09426379 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068820169 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083822152 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071556202 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070687418 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081497279 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094034986 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075058075 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070545526 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073840375 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071180038 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072276989 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068262883 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073418401 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070790835 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075054674 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070339311 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073062284 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072110916 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086471861 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.0688698 seconds)
  done (took 9.079014632 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072623984 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07089562 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072733584 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070509453 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071162159 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070781079 seconds)
  done (took 1.917295377 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095841089 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070789946 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083551802 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070588287 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107076259 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085918866 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086595952 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081251281 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084137692 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082500721 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086810086 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090130693 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091784831 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07336256 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086435713 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071814576 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08722139 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075360661 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081745903 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073469387 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084403869 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072893897 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073269081 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090840817 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074257544 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071418474 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080183646 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081704492 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081556121 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08077506 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071912583 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073047113 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077404683 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078320266 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086880744 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.0791193 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073018536 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07636841 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073174346 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074178202 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088796786 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073016163 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073004052 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076920064 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080621986 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078684757 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076793519 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079315994 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084591258 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076734617 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077016995 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070968553 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074464542 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076966576 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078836997 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080329941 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076993643 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086067854 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072380719 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07863249 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070266621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074257848 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080287628 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07398261 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078016807 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076917823 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.079058719 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072917941 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073369077 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070160818 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076637125 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070494281 seconds)
  done (took 7.127862369 seconds)
done (took 28.365855024 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.520757657 seconds)
  done (took 1.957502458 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.631775107 seconds)
  done (took 2.096688655 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.626497556 seconds)
  done (took 8.084583726 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.425642497 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48454262 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.753905158 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134899089 seconds)
  done (took 3.300025008 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.716853327 seconds)
  done (took 2.184918143 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244002136 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232951518 seconds)
  done (took 1.955992109 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.355530043 seconds)
  done (took 1.817270916 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.085873566 seconds)
  done (took 2.544803612 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.248123058 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167161545 seconds)
  done (took 1.88157519 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457638502 seconds)
  done (took 1.922027371 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.252244868 seconds)
  done (took 5.719400634 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247149856 seconds)
  done (took 1.748598362 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24077752 seconds)
  done (took 1.708480824 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744796915 seconds)
  done (took 3.206656884 seconds)
done (took 41.608077246 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087400146 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087723317 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088548574 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084857692 seconds)
  done (took 1.787242446 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078568895 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072843881 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077520306 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073638015 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077698902 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073391307 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074702 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075897545 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072869454 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073184131 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073346897 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072921306 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076268631 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07523747 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072042966 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076236341 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077521717 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073170316 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076641958 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073061841 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071145772 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076524921 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076044657 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072276169 seconds)
  done (took 3.259339094 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081724893 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075550145 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07819818 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07514249 seconds)
  done (took 1.785704729 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080374121 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091369445 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089731853 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080490588 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092241302 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08728345 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069831799 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069368279 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071120227 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080271727 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068740323 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097184774 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089378228 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079755331 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08178151 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066092397 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068483961 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088175507 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0801983 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080451163 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070871795 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079503898 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068415419 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090189787 seconds)
  done (took 3.392004682 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08827143 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068253757 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087687394 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095283448 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096721719 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068641248 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085045717 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097147332 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.142231188 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068569269 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074436886 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068700757 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108778708 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068768951 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086003516 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112642683 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116368169 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072719948 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102254843 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068608553 seconds)
  done (took 3.25882272 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086849788 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07188311 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072835709 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068249953 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078790994 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075947528 seconds)
  done (took 1.937218744 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071397362 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070172407 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070268427 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069468436 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074899713 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072458085 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068671239 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070290928 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070273652 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069763516 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070266802 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068623664 seconds)
  done (took 2.32427631 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.218651326 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073081947 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072904979 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068928698 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075076512 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06952496 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085231226 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072559518 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089057591 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069229216 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069568871 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071790567 seconds)
  done (took 2.517127872 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197358882 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076716888 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227960609 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146136995 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105831854 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113285395 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113543079 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112146734 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137483237 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101120758 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157023629 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163199902 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107688289 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130514312 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091391259 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124224488 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149014469 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156227774 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101682334 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158124059 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138387164 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122336397 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144598925 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099046792 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104864086 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120279143 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074222494 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08006816 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163993675 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127479131 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140836888 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10717045 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093702741 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170223027 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159860091 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13376103 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141707748 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084518526 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.12268188 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135842512 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195828658 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090189941 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15364969 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10497452 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079312017 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12439715 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113818167 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.263431323 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106848454 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091633579 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138650086 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179041491 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.132999363 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087322294 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119104716 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108659119 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115147775 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115900172 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173627516 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151927606 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122031002 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071997509 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109076762 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146087456 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127836712 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109119414 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122898883 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093644226 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127681283 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152733976 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128106566 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137632689 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116306762 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086753476 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116155093 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134288728 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124970882 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163925843 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118602282 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07332681 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118545151 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099487087 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080721871 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145807472 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076003383 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166760505 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099272005 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124020998 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125342205 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10788991 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109026661 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154754271 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138163962 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104428077 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086660206 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102079988 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.115851265 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137472261 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086272132 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105809204 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110509882 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.2276256 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130584294 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07678915 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118947686 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.098017741 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120463476 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1240865 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081520769 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11986696 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103978517 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101587015 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126953459 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151629222 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088796088 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082369753 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158960168 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117476554 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104045499 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139027909 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152640592 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120723697 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099674957 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141117081 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167548886 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090871468 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156753035 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103515714 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084522131 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106836339 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11732685 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110184601 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122269984 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081822208 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116163866 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159759656 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075182541 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097114636 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12764429 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082544638 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081353241 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105910551 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103342493 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097469271 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101970273 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104197292 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132962765 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116864381 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10370787 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122498011 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09737466 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161156461 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087532264 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101294602 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103690679 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072891484 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128664228 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146617719 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078418972 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30458189 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122100013 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114648269 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11754986 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084171638 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135523603 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079608199 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07310749 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138285597 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111533742 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108835741 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146191718 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112266166 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123755171 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114902004 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129917418 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127593254 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125871638 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106649411 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088953575 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112707549 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127598526 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073387267 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092684165 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083673695 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103900739 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095760316 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084780809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137075887 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121052704 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10880536 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112658928 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097236692 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143898458 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079301468 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123397849 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119555317 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095592758 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149162089 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147286062 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126238108 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100951657 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132527293 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07417812 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075256493 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089814967 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120377965 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084197919 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083807202 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1118183 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144723035 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123872954 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133987601 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119290282 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115429714 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15015731 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072800064 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119433109 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137632396 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114738062 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.253957663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092512249 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098791973 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138463121 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104823596 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175813596 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112171314 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120155629 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151972649 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100405757 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080293552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103878621 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12968316 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102009876 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140176431 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09829639 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087046688 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106301304 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078215949 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098110756 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123904848 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115862652 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132767754 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111556327 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127549826 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078379797 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112361334 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119076387 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119659633 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084682913 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114740492 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162238644 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097403034 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116248787 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14778623 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080073935 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136559286 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167285974 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138344519 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084822226 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103281328 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116949532 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124100353 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115297409 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13489046 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103974652 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13171379 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108253123 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087679748 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086750497 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095836952 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102596993 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112381634 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103296992 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109416858 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095890154 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275769587 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104804916 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109922886 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116247567 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101280432 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097416858 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097007814 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167939985 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115197179 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163621495 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099353534 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141261085 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154456164 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076232557 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079824783 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081398036 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135157949 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085193647 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123925354 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109548733 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113208924 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11896252 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135658531 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097218641 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072055098 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107609506 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131809859 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120299764 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097173307 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104266054 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154355824 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118102294 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080040325 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11230516 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11376048 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104226842 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169852922 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081982977 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107817447 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077781195 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081063073 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123737664 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145874313 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086593508 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104544839 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115934585 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110971158 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122433516 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097414962 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107924206 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125634253 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143047203 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124257455 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090268784 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110751481 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124667355 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147220692 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101286756 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098465153 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319527473 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147017477 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155862233 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089280975 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112375679 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111924459 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108314827 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132826627 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084508196 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156523339 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082194885 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130585126 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101001552 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091554811 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126138489 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110279595 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088532831 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141719086 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113086227 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083714426 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08079016 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110256664 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115167781 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103071903 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075942032 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136607315 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07460485 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130371764 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163280617 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080989675 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104309585 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096259394 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08270244 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103354436 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101935552 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086843926 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100201228 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166096404 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088637838 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142515714 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12928773 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109018953 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133971246 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10203451 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642914239 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080313968 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146067476 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114609702 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170722069 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098835803 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114905894 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106396939 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117136251 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284500398 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103116229 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180451148 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129013824 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114816755 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081002714 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102089643 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104204881 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090856655 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106216966 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111833558 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113165025 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096058308 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114481732 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120140413 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083826361 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096387923 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149396914 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114765837 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139477258 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136133013 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085478647 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11545174 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130428357 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080956768 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118164583 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150613694 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106160584 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100760805 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083865287 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.1017167 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166428412 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074218589 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155557664 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116707117 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109052134 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111912163 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111092332 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125895863 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102830019 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117018784 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094662852 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109624509 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110876953 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085023191 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079676656 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102777267 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110543201 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096223944 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097269014 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137021117 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145904301 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072714043 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098251127 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110917743 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140245618 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163225903 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104361426 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083047306 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268207643 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119138938 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111783326 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118206092 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083199772 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082121308 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082994646 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101003727 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.125725366 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110244049 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116615636 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110546742 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1562216 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084824487 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224826253 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097144814 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104352251 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089990817 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081612771 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097086055 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09620996 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104722586 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108740315 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164044484 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094611451 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091430687 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093164804 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075173406 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083644126 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123429612 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109676417 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114089503 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103601286 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082776465 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103508664 seconds)
  done (took 58.291671385 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107637528 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.076473295 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099086205 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143303842 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121827043 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200319433 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150191635 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188613169 seconds)
  done (took 2.666987884 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070855708 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09844552 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105245583 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085140359 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070124114 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070627613 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236784718 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084128113 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069529076 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094293684 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080412937 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071983641 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.464164801 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068814668 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070005367 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080573875 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070476522 seconds)
  done (took 3.446730249 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383231388 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602845768 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355746713 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078414986 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.865235831 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092347311 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.134729249 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140516071 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081825632 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525221209 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.373129651 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129985984 seconds)
  done (took 18.332549741 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084767852 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.081162217 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092592761 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092491409 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080344669 seconds)
  done (took 1.993797438 seconds)
done (took 106.499736061 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084393111 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.215323782 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070587444 seconds)
  done (took 1.8852568 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09400824 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091984257 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092041886 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089214271 seconds)
  done (took 1.941074245 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077519367 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079426955 seconds)
  done (took 1.724751965 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237925208 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.178703167 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097844165 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086187778 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082510821 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083539559 seconds)
  done (took 1.82565072 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075745978 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075198138 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07626072 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078805786 seconds)
  done (took 1.87394774 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073637168 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069081547 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071647355 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074433006 seconds)
  done (took 1.857629129 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087745429 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087290704 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082807119 seconds)
  done (took 1.830370473 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105897182 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097237679 seconds)
  done (took 1.772427306 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084501605 seconds)
  done (took 1.654631734 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095886907 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.1044482 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136801308 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118780167 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145326232 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.12056564 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087475853 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091797695 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081386557 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089434034 seconds)
  done (took 2.640483912 seconds)
done (took 21.169693956 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082331933 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.379021513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363233409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095227612 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676087787 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359933431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990177606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09668747 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111484879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072063113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090168637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652922634 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979969967 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33510519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967867197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332480663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655505377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071674872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071269843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072696489 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.972774459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072533039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07356457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072999693 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654277999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37858196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074105284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334396401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072475704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076755231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362440765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073883625 seconds)
  done (took 16.22280123 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074621007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126348671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076561446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089476077 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074645763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072752745 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074997123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072592895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122354528 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072893826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091160845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071354976 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076907061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073628752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09375813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071737371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074840559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072902303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072658242 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073442059 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092690855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072376439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073482194 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072866155 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073426958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086697074 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075305759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072878948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0729867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076932633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078494597 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07337725 seconds)
  done (took 4.135771482 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120466331 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13079034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077030653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110895022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122199095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073989861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150826301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097819704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12525986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07265065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091047535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071912626 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108180643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073935342 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094979852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073294381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076176748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073416305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072542701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073877873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093808474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072749599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07368027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073322631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074082984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088132139 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075098789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072836706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07333653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077642632 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079089534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075090892 seconds)
  done (took 4.406351889 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073483358 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076120105 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083922073 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084721123 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070421498 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072537844 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073860814 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070550749 seconds)
  done (took 2.194911299 seconds)
done (took 28.541594698 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081766694 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070501412 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073669396 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090398136 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076737712 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082416523 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067861673 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077317949 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074255864 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074692532 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076216708 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073123234 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072773717 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068332845 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075014475 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070049475 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084261244 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073352226 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083853535 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084186901 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072341467 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076144181 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077924256 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083880634 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084170426 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08430163 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079391976 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075534743 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070735457 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073292225 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073790393 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080605765 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083834792 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084880591 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06982288 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069990985 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07475993 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07176491 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085214093 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079492134 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072664232 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080048599 seconds)
  done (took 4.789241674 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08821629 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093034059 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086519523 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083406747 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094208294 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085093184 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090733748 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081554154 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.080418759 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089879172 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076969249 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.084629897 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081595619 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076100515 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080469481 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077852202 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08236328 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077120739 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080500008 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080931501 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090846855 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075863849 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090727289 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082450916 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077662718 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083929591 seconds)
  done (took 3.766376868 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07696995 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088971452 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095306788 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147149935 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115316528 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082635947 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084184354 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095238679 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099591425 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071296328 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075671827 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095808563 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095338406 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076928633 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.114183632 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087240494 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086495092 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072663334 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077979345 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099677604 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091179051 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087999619 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096142817 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087017907 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069911115 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07299016 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075560144 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087551779 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072698246 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082611757 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073915835 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074528604 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071857133 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080903522 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073335138 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069709546 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095635265 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082121587 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083234814 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071137693 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080168418 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07176016 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096129189 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130236154 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069915511 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07513434 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074414185 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081814838 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069829309 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097804532 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082687431 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070080588 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071297562 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069698791 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070308999 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073461991 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072291599 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073451589 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080507483 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077374294 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092362688 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075388551 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088217072 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069721963 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08074459 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069401992 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071955993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068992818 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098274233 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071964992 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115521458 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071736603 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068832716 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0813922 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080517071 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07681483 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070352243 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088889389 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082267269 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074559989 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07867238 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074310588 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074442924 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100795649 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071145481 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070266551 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069322123 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077441146 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073794988 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071132728 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082925852 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069755991 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074310902 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088949566 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070156293 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071226569 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074603805 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073359575 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070026703 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081930019 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074506553 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071747087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080865636 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071807887 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07418441 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083815033 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077522185 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070255635 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073188254 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074253072 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072077323 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072311207 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074082616 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07271972 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077165443 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076982771 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076451008 seconds)
  done (took 11.012821273 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169847459 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.1614384 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073820123 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15368057 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079764534 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082759644 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156367158 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09922399 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070894646 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072371395 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071645289 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113958357 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108543412 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121379094 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085599741 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071986412 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096946257 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118376468 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158331937 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151665404 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09391678 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079480475 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073804157 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073010272 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072833373 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080905205 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090505956 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079531274 seconds)
  done (took 4.495433448 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081449649 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106629221 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075324916 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09370281 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091362217 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071892377 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073143789 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072409666 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087824066 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081026435 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071510585 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077172244 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075323318 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074709829 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071867593 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078430681 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078618684 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070618434 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075060273 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077293141 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081245969 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097417319 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076895242 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071025375 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07453532 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071402696 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079520731 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08371023 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07130305 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.107881317 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069146404 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076383483 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085920531 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072170441 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070700587 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071306406 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071169601 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071192713 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072335322 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069733205 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069881699 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075033519 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069912959 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07980816 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084124166 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078051777 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073415748 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073786382 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073737737 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068819857 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074080519 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073625483 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074222744 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078657426 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075551334 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074286804 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072097718 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098408861 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07695783 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071176644 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070096562 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07041412 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073763313 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0817837 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086579996 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073413197 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069824254 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071441721 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084339009 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083945064 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070829881 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076241889 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068769851 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073050377 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07367112 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074089537 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07255479 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06970881 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070921595 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071477414 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071907622 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07112289 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070073126 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074182625 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069657694 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070071544 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071290442 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072802349 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083178649 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071096199 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074912956 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072109319 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071191884 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074474932 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.080174062 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074672895 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082173914 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082310566 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071985519 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069783082 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085267106 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073810162 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.0703586 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077142806 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075752505 seconds)
  done (took 9.618350449 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095306601 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071313226 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087549134 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094757849 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081196255 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076689686 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08163416 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070859069 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087524583 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076683073 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07943769 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070037878 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081962025 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08108585 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07163988 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081975339 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07482311 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089795492 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085925367 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069925195 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080152888 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083877442 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083122372 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085308073 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085359424 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086483195 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083133218 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081400679 seconds)
  done (took 3.918850144 seconds)
done (took 39.18185565 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.683048144 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.914331009 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.657139419 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.889752888 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.709103498 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.895031846 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.756074231 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.652033413 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.0470723 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.698104264 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.929702862 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.117365322 seconds)
done (took 64.682572644 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.700520029 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.81055807 seconds)
    (2/2) benchmarking "String"...
    done (took 1.90969166 seconds)
  done (took 5.310233708 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.839039469 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.328584346 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.892697832 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.66468148 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.666743071 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.913714564 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.444849942 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.10760179 seconds)
  done (took 29.613214208 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.896120486 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.88665105 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.399618386 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.433238641 seconds)
  done (took 15.259049079 seconds)
done (took 61.411170157 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.67666855 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.704124717 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.66070303 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.655679659 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.750831192 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.679804624 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.904672453 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.729980103 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.65830225 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.667016258 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.6587868 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.077446775 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.662155246 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.881055695 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.657540969 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.656763581 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.702118597 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.152435904 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.808886953 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.670653328 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.670297894 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.71035531 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.664818461 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.656907744 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.714665641 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.658266728 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.04954169 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.667140669 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.484277074 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.659602779 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.711218697 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.04387302 seconds)
  done (took 200.299491358 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.667241216 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.669039454 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.740433903 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.705376463 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.086554263 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.862953802 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.768544352 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.120437409 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.670802589 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.693095169 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.963490163 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.663431371 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.934977913 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.647196338 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.69824661 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.675198011 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.875121349 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.965161838 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.696966047 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.81254492 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.688091641 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.779605216 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.721979605 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.916240699 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.705607956 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.765036666 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.666913988 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.666366159 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.844692955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.872171024 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.683148931 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.672981535 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.870076393 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.528883556 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.674024411 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.681427157 seconds)
  done (took 166.250578085 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.857354126 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.669179044 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.66975433 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.669674058 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.670281155 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.676727772 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.670997036 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792875222 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792624955 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.305837357 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.250763426 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.716170706 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.669130585 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.434839625 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.665382602 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736510316 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.678827855 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.666310743 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.682756133 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.695350595 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669178249 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.661473848 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79268763 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.685410496 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.669944928 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669620541 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.672412387 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676382714 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.049590568 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.665731912 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.722076807 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.659701515 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.674758322 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.809136556 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.908795283 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.666713969 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.666357372 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.670651621 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.498897126 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.670700073 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750451372 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.669076461 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.678078137 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.670740617 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.88974903 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.667827206 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.667137333 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.669947978 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.672891038 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.783377671 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.665409679 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.792883084 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.672093984 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.15158833 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.668348888 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.666501439 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.83724282 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.244946382 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.671694807 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.671060606 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.673156995 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.66538265 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.677006234 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.8364518 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.741018927 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.673038464 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.673800656 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.680033169 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.672373545 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.869277848 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.670342713 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.768804017 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.6863512 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.90338416 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792924274 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.667559456 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.737820628 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760613042 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.668637173 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.672768832 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.674662571 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.673861942 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.754488169 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.66887246 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.674419515 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.74505689 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.673619519 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.675588064 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.720135081 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.744581447 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.670888457 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490677972 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.673327218 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.674651602 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927103138 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734393168 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.671821831 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.667707497 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.74654378 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792416985 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.399819194 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.675414965 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.936382486 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.739231764 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.670698337 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.788076745 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.674598755 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755291233 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.668843254 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.674816937 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.703468734 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.67669872 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.689712091 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.670210113 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.04757203 seconds)
  done (took 388.366983769 seconds)
done (took 758.430165867 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.261666327 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.228094782 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.323610942 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.248447563 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.220654647 seconds)
  done (took 12.882515126 seconds)
done (took 14.487387506 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.752747773 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.759523872 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.698139454 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.754073818 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.692902511 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.756396701 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.74133033 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.69712932 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.724025707 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.697797281 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.724582404 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.698259903 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.688937919 seconds)
  done (took 23.986692405 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.908092535 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.913415469 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.732715586 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.913096069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.708443006 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.90200174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.82014649 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.811041843 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.807416139 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.676167848 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.676039044 seconds)
  done (took 21.471357112 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.907541488 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.908199469 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.735959062 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.912580035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.709028063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.909927638 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822238382 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.813548051 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.816481668 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.675919673 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.677606335 seconds)
  done (took 21.489839719 seconds)
done (took 68.553502374 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.671123866 seconds)
  done (took 3.271620333 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.689322949 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.839934067 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.67136423 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.672512384 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.671729741 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.671361716 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.673768702 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.67064004 seconds)
  done (took 15.162696692 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.669512032 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.66940903 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.673432312 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.667131704 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.670092067 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.666584186 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.668134825 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.669131774 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.671254841 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.668050093 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.667272611 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.66796756 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.668721064 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.66656592 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.668532312 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.664872836 seconds)
  done (took 28.297493534 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.667157801 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.665193096 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.665259841 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.664517263 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.664915939 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.665092875 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.665306937 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.66429485 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.663168006 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.668300075 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.662120248 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.662105392 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.661591135 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.663108742 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.66275141 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.661904801 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.663037321 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.661140997 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.665683108 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.662405827 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.66187374 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.662635403 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.662187832 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.664230223 seconds)
  done (took 41.5286621 seconds)
done (took 89.862628775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.403929541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.544679552 seconds)
  done (took 9.543313011 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.667372648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.662864595 seconds)
  done (took 5.009196428 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.662892124 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.661720325 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.662722954 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.662205226 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.663495218 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.663608105 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.663797435 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.664367559 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.665061916 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.664244271 seconds)
  done (took 18.22893961 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.663782466 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.662967751 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.66551054 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.663533855 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.663457061 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.666964082 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.66477435 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.663324514 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.664972034 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.663093554 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.664818605 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.664607009 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.663552264 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.665801717 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.666129318 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.663583335 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.662583957 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.664591461 seconds)
  done (took 31.55368192 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.663178132 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.662425204 seconds)
  done (took 4.921628665 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.661784891 seconds)
    (2/7) benchmarking "second"...
    done (took 1.662306893 seconds)
    (3/7) benchmarking "month"...
    done (took 1.663433055 seconds)
    (4/7) benchmarking "year"...
    done (took 1.661871877 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.662057508 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.661326282 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.663598318 seconds)
  done (took 13.23146384 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.665056672 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.809912584 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.87687639 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.298522302 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.663540225 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.666221821 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.590533078 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.666374898 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.668165775 seconds)
  done (took 18.499593039 seconds)
done (took 102.585639947 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.52061806 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.658668519 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.985082348 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.730044787 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.725417163 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.953406706 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.694805622 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.905581205 seconds)
done (took 41.771389067 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.710814121 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.425581557 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.458679139 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.697489259 seconds)
  done (took 15.171662572 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.653253205 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.962709822 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.674920115 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.457708894 seconds)
  done (took 21.341656533 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.021732461 seconds)
    (2/2) benchmarking "read"...
    done (took 2.004536082 seconds)
  done (took 5.616765494 seconds)
done (took 50.438308479 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.654786067 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.654559474 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.65613808 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.655562817 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.656668164 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.65687616 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.655138621 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.653979143 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.653489385 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.655245268 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.656444417 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.656434282 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.653031012 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.655021624 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.654556662 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655657082 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.656647652 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.655239493 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.654446713 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.655751887 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.655580845 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.655407703 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.658866879 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.656445716 seconds)
  done (took 41.319765033 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.656904518 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.657045067 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.657646331 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.656550703 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.656875482 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.654245701 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.655712348 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.65588909 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.656314837 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.654995336 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.658056705 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.65882071 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.657329468 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.65638603 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657155345 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.656202639 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.658495112 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.655696422 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.659497109 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.656395475 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.655915168 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.657014966 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.657843747 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.65548818 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.656197017 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.65658257 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.656250398 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.6560388 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.657336254 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.655574091 seconds)
  done (took 51.28801044 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.655005501 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.655520293 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.653231803 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.658190113 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.654582544 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.654565075 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.654134561 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.654120258 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.653774084 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.655896833 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.65413827 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.652645381 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.652956709 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.652620562 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.651612899 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.651908485 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.652047297 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.653655372 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.652106986 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.653949472 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.651750139 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.65177636 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.650588245 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.652953736 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.652374711 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.654128934 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.651179966 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.653462742 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.651677044 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.651478851 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.651358549 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.651233879 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.651495948 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.65280731 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.650550326 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.650411094 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.648404865 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.650648178 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.650272725 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.651969667 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.650968104 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.648522637 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.648557149 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.650826159 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.650801616 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.647815387 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.651185633 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.650118922 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.649137085 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.64943513 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.648732685 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.652435181 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.649217443 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.649824047 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.651023056 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.65300073 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.652007194 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.648901183 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.64938819 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.648651517 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.651588564 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.652689058 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.648247848 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.649900918 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.650382563 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.649300218 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.649756923 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.648309646 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.648476975 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.649518186 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.6530117 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.651408683 seconds)
  done (took 120.49822727 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.649827799 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.649880437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.65151236 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.649171692 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.650299454 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.653691663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.648571368 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.648769959 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.647170918 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.652822402 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.649727539 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.648276641 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.647511304 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.647952298 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.646294129 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.650092604 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.650102081 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.649830401 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.647277563 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.649916232 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.651234964 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.650787584 seconds)
  done (took 37.872751981 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.651308971 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.649689549 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.6504167 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.650997145 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.647399778 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.650495105 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.647658325 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.649101123 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.648321557 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.650264046 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65027348 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.650898803 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.649725746 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.648169552 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.648622715 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.648362003 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.650242575 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.649807827 seconds)
  done (took 31.275190243 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.65283188 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.649342371 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.647166202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.648829229 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.650446339 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.647516864 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.647330611 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.650658716 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.648849708 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.647900908 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.647076238 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.646561003 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.649302482 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.647860489 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.649295685 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.648523642 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.647913095 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.64769652 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.649296291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.645988223 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.646918519 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.654143352 seconds)
  done (took 37.85750186 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.646042786 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.647017253 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.647681611 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.647493441 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.647951685 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.644649762 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.648135483 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.645703483 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.648549494 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.648106379 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.649551954 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.645235755 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.647230234 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.649688844 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.647735439 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.645837176 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.649990754 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.646939433 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.645465034 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.647091328 seconds)
  done (took 34.526125996 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.647950533 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.647609278 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.647976449 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.647379819 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.648973633 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.649535699 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.64673035 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.647614049 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.649280221 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.648727486 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.645850602 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.646591551 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.646903303 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.646608153 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.650654115 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.649011581 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.647285461 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.648916036 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.646542622 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.646637457 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.650718046 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.647127782 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.647863998 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.647427501 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.647761917 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.648775811 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.648759872 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.651938717 seconds)
  done (took 47.728632507 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.650235454 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.646723469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.647991335 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.648042055 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.649934537 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.64667636 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.646010778 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.649613963 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.649043137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.650266938 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.647364511 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.64825349 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.646715212 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.648103932 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.646964643 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.649751852 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.647032927 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.650530013 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.648813417 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.648763285 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.648909248 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.650597819 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.647804517 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.647254411 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.647197809 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.646607098 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.646950056 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.652230482 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.646435715 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.64703057 seconds)
  done (took 51.030591551 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.668299404 seconds)
    (2/2) benchmarking "in"...
    done (took 1.66990209 seconds)
  done (took 4.918213931 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.648333675 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.649239822 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.650837374 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.647621835 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.648363522 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.650179965 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.647454384 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.646023257 seconds)
  done (took 14.770414208 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.648731355 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.645483341 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.646655887 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.645431573 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.647349561 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.65372036 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.653873677 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.647104458 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.64840502 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.655947358 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.652358968 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.662607256 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.653091975 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.649406232 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.648563968 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.650213721 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.645676596 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.645864776 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.647410979 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.646021671 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.646510993 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.651679438 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.651499095 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.646880968 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.648781855 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.657840924 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.653192827 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.647994354 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.648095422 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.652768653 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.651899448 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.645911937 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.645721935 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.647250536 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.64769606 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.648310774 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.656949755 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.650043176 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.655300182 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.650890143 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.647184491 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.64789352 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.649205163 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.650274653 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.649478354 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.650217832 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.647977459 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.648417234 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.657586971 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.652951981 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.654163063 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.651242773 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.648517852 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.654228254 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.65119844 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.657756654 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.649488114 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.653913997 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.658347425 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.659625793 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.660489225 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.656648242 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.650726082 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.649302389 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.657483494 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.671439965 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.659832087 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.64882123 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.648505589 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.649587066 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.656530163 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.662092074 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.658736068 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.648890811 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.648965103 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.650157685 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.651617244 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.650034397 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.659083934 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.655553142 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.65016624 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.651764551 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.657843859 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.669676567 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.652348079 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.648829641 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.649708087 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.652380581 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.656498294 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.662157032 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.650433943 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.651223965 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.658347486 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.653115983 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.659577172 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.650185853 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.656931798 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.653156493 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.650044336 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.65172413 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.650737074 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.653857622 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.661387286 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.650662772 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.650551175 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.662199541 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.650200541 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.652327501 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.658345561 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.652180154 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.651696875 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.660212398 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.656551441 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.649773186 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.655374403 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.665908327 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.6519783 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.656335573 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.652140325 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.653262402 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.661944439 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.675743634 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.651295143 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.653207835 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.655960135 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.66095696 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.650324572 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.655751857 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.653176769 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.651477467 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.651336586 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.653333825 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.651536326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.654791296 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.652635065 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.655272233 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.652653008 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.651788032 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.652026053 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.657058189 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.661651296 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.652846478 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.656270508 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.657585212 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.653249281 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.657087796 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.660964275 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.661551613 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.658063417 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.661402623 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.651082932 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.651804798 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.653977174 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.651934948 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.663730499 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.652571228 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.654485255 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.655748081 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.653816679 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.652559546 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.655846089 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.661916841 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.658375753 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.653534146 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.657811449 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.656135953 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.654519235 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.653292813 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.65365942 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.661283632 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.654234757 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.661261124 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.6585797 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.662204031 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.654128181 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.656053523 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.658308732 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.654211272 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.655355113 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.655438827 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.658166123 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.662374498 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.653102828 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.661413724 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.657439181 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.654807633 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.65536895 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.655937347 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.656643765 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.653930173 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.659594668 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.661157283 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.666691748 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.664082696 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.663066373 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.657002677 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.66594866 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.657931603 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.659954085 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.655754159 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.654991507 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.656018974 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.658192863 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.65560719 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.657181096 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.655292741 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.662665531 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.655264822 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.656503456 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.655565931 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.653926789 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.658907882 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.658501195 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.655422961 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.65698215 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.655510656 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.657113515 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.655718925 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.662045345 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.662806936 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.65863565 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.656074516 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.663060062 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.655629235 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.659419631 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.658489805 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.660159098 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.663906061 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.656507688 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.659145657 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.658240796 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.664891977 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.667693969 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.65934992 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.66408633 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.664815212 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.663555113 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.661540742 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.658311815 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.656268992 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.659692255 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.663891314 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.655448379 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.655402079 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.659993518 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.659123123 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.656754826 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.664308281 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.657074331 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.657897839 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.6602085 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.665565259 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.656189905 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.660923378 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.659744956 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.66509088 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.664952106 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.656953288 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.655740556 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.658227387 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.655816642 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.656387344 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.658179562 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.659538947 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.662320667 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.663710602 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.665923512 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.664965356 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.666428413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.660087668 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.659249256 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.656559984 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.658364136 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.669287947 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.664937567 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.664754302 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.660580586 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.657313299 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.664651735 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.664500548 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.669378432 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.658693044 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.659992894 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.660948896 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.660591706 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.657490201 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.662919138 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.656880679 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.660289493 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.660662287 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.659354142 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.657613847 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.661567258 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.658526751 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.657037499 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.657430492 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.659553401 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.658202557 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.663221282 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.661874606 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.667149139 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.661938945 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.668784997 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.66153662 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.664804875 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.66042804 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.661507589 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.666120242 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.668873611 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.65920825 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.664844634 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.664340579 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.662469086 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.668981717 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.661806556 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.668288458 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.660921776 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.663626038 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.666617812 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.657589087 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.665490926 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.668178232 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.662746832 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.666990915 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.65939741 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.665852823 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.66172833 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.659152268 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.660990666 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.659479047 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.660315237 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.660560044 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.658669472 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.670105065 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.671285711 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.66575632 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.664247609 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.661015371 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.663761028 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.661599788 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.671173945 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.667324913 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.662286172 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.663291575 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.662105752 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.667887447 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.661406834 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.661654699 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.661263519 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.660611646 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.660996429 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.670536188 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.672109508 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.664056238 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.660416337 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.671674288 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.663223161 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.67042266 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.666362155 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.669937186 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.662635382 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.661290029 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.670089223 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.670100528 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.666490777 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.661802706 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.669737632 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.663842173 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.661236154 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.672616207 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.66839902 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.662482034 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.662841833 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.670754652 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.684471855 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.664622797 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.668013315 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.659259933 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.664551672 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.666268053 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.663587532 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.669638535 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.668061733 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.672201206 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.668682609 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.664186007 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.663933037 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.665427996 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.664624809 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.661959591 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.662576904 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.663662499 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.663764613 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.671811022 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.663681557 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.668092802 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.662532467 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.671999167 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.666761043 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.672370527 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.675467459 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.66285938 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.67255166 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.664100029 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.663585438 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.666176079 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.667605399 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.664529885 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.665759727 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.663977509 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.666286064 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.671609149 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.679265315 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.667917943 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.66721768 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.663207527 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.667053709 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.672753068 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.667372785 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.665050472 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.663898022 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.667443155 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.665158304 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.673909297 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.67389936 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.664198385 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.674034045 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.664916763 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.66996059 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.673496419 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.667809786 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.664277276 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.664802191 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.665150879 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.672742142 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.668835574 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.675684169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.669571113 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.675838933 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.68028383 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.670088839 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.667286117 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.672186602 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.674566718 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.673747236 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.668111503 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.668249774 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.670057197 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.677426269 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.670608853 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.666469049 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.67488444 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.668489602 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.674231868 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.677825935 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.670952644 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.665780472 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.669545292 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.67226377 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.66690905 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.667238466 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.666977403 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.667725271 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.675521368 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.674296041 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.668156127 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.673197614 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.674744817 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.669070123 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.670649239 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.666879573 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.669686807 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.668774682 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.670052343 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.668231133 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.667898542 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.666372159 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.674955332 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.676136334 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.67150048 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.681128305 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.668182624 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.673181626 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.672010326 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.676670294 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.668645852 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.667918622 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.667370776 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.667849961 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.675029764 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.668943145 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.670658602 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.671136037 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.675910672 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.675598945 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.670000897 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.668224022 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.671783795 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.67699714 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.672693446 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.669942081 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.675397699 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.677467991 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.672335068 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.668145886 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.666383566 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.670237919 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.671543624 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.669233641 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.667222291 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.667251212 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.670991516 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.684632119 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.668741665 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.672911614 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.671814981 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.674008941 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.670829336 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.669190579 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.667619857 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.679905357 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.672754155 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.674581195 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.669675769 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.677595908 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.671428272 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.680832051 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.673080155 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.672904179 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.686004875 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.67341354 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.669737712 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.670461805 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.673805626 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.686851233 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.670668138 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.680219701 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.695434299 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.679518012 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.677657246 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.670299429 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.670406716 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.669457087 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.677997725 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.670859819 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.670020101 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.668908113 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.671205631 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.679390108 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.677869843 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.674321842 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.670798575 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.669784456 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.677043279 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.681490088 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.670310046 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.670645021 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.66957169 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.670341208 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.670055071 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.671478862 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.671837609 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.681206744 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.687330449 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.670275655 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.669874016 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.66916204 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.676049243 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.678856718 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.679298121 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.676954106 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.670110615 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.673116321 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.675254357 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.672880262 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.671359628 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.673963308 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.671966391 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.673464006 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.672171413 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.686043746 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.680643659 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.677182421 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.678974891 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.671835 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.672097426 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.674976097 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.672346129 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.672127587 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.67486489 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.682564835 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.676639178 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.671987744 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.672303185 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.676375747 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.678429662 seconds)
  done (took 992.692782197 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.67329738 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.673865848 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.672688784 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.671326038 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.672800304 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.672490722 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.673043251 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.673972663 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.673799819 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.673265258 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.674319589 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.673486167 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.67284359 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.673860745 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.673529009 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.673349789 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.674210589 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.674029645 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.673146628 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.674041523 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.672405116 seconds)
  done (took 36.744286809 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.673163402 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.673106317 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.672527277 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.674209286 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.672112952 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.673393817 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.674397097 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.67296918 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.673283242 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.67375168 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.673499944 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67303914 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.672723826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.67351722 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67226701 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.67378327 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.672711184 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.673494992 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.67431303 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.674364196 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.6740046 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.674820608 seconds)
  done (took 38.421985728 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.674616523 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.674353011 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.678101634 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.673490401 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.674803647 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.674392175 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.673148583 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.673763099 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.673873088 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.682869012 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.686241507 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.683898792 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.683614572 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.682201001 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.685607957 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.675136356 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.821233036 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.6748963 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.674394397 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.675827932 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.678691597 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.683052647 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.675661299 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.675866947 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.682972133 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.67560942 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.674976181 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.675515411 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.675018854 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.683953181 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.680367916 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.675023333 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.676611433 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.681752656 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.682212959 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.684028971 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.679109482 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.676751201 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.675445845 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.677622932 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.685480545 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.694595031 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.677304744 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.683336433 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.675360794 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.677582966 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.678572019 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.682859359 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.676165452 seconds)
  done (took 84.00514377 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.675882819 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.67772668 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.675463294 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.676099154 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.67676119 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.674678335 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.678633275 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.676857153 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.676855208 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.675181385 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.678409592 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.678207776 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.677044364 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.678960473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.679246561 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.678613812 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.677345233 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.678073095 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.678767188 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.68189648 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.679163515 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.678229866 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.677603863 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.678519286 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.679174273 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.680406701 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.679191703 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.678244611 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.678814906 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.678179382 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.678669373 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.680133268 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.6797313 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.679508233 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.679430877 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.678950243 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.680020899 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.681989997 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.679813381 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.677713915 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.67899532 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.679964189 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.680542194 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.6807488 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.679442915 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.678806787 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.678999354 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.680428596 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.678854794 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.680842147 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.680428147 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.680462969 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.679266874 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.678941149 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.679592707 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.682072125 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.680585591 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.680230239 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.680302895 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.681029707 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.679917742 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.682152232 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.681330647 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.680081718 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.680703328 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.68103824 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.679170783 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.681869064 seconds)
  done (took 115.792358924 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.681029713 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.681600672 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.681219313 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.680321654 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.682243767 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.681239243 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.680960313 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.681203652 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.681920859 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.681891618 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.682882759 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.682070287 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.679994458 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.681228661 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.682142609 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.68154486 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.686758306 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.681943518 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.683216964 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.682574909 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.68255572 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.683687138 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.684872941 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.682696175 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.681706232 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.682801537 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.684111543 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.681890308 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684838159 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.683394031 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.683202959 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.681970537 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.684831727 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.684252642 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.685603977 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.681832882 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.683074608 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683765042 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.682512003 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.683676811 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.684794493 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.68282386 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.682122441 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.683668129 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.683396515 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.686165978 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.683498103 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.684376192 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.684336805 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.684013474 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.685101638 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.684335681 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.68274197 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.684020516 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.683624739 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.682588795 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.684624996 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.684813593 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684160653 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.682819974 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.685753056 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.68327886 seconds)
  done (took 105.966226302 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.68426638 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.6837994 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.683405753 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.684241655 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.683940338 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.684200754 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.684106178 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.683507416 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.68408181 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.683843827 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.6838348 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.683580035 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686671461 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684276648 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.684271621 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684962508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.684840382 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.686747298 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685770351 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.686377527 seconds)
  done (took 35.307949552 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.685331744 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.6854503 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.685387099 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.68658739 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.685493537 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.685472567 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.685346426 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683594823 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68394771 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685030303 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.684357283 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.685899541 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684545311 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.686060368 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.687921134 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.685735424 seconds)
  done (took 28.583818456 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.686017422 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.685104545 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.685328671 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.685026306 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.6846972 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.685150462 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.684475212 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.685597937 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.684874242 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.685335148 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.685332217 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.686360256 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.683982466 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.687053333 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.685280212 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.688888007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.686440082 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.686797851 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.685601966 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.685889333 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.685777434 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.686204267 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.687824452 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.685246886 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.686795866 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.686715085 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.685901745 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.687483837 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.687003603 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.687153472 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.686185596 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.687052162 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.688448048 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.689648549 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.686671973 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.688034966 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.686124393 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.688821108 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.688892025 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.687539781 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.686879956 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.686553521 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.686863229 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.686996268 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.686723104 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.688356765 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.687282582 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.687566302 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.685197331 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.68760997 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.687513668 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.688748763 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.687270298 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.689162552 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.687007909 seconds)
  done (took 94.385317768 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.68655449 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.687323815 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.687716895 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.687336521 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.686385537 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.685764116 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.687741472 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.686617137 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.687303483 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.686689968 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.686622289 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.687253044 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691963301 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.687999362 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.68819926 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688490464 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.68727747 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.688900208 seconds)
  done (took 31.996161465 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.687944424 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.687545888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.688069213 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.688403919 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.690064182 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.688430766 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68695205 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.690128697 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689844723 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.688692248 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688999085 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.690853502 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689291445 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.690278775 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.688649787 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689255066 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.689051661 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690675187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.689220123 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689102906 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.691205496 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.6893824 seconds)
  done (took 38.782485842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.696589128 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.698159738 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.709399473 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.716857068 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.714491116 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.726999368 seconds)
  done (took 11.884538991 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.689050403 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691655071 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.691119025 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689989448 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692945607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689600859 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691773552 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.690722508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69078688 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.690454757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690864193 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690489581 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.690655547 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690195555 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689411326 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69021553 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.690112908 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691766953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.691689939 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.691047523 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690266097 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69014145 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690019271 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691139521 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692052256 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690540008 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691728659 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692235038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693318959 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.690645308 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692974117 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.691409378 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.690314669 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.691089193 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693287099 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692240072 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691257975 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691498771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.691018154 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.691895291 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.692315012 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691356245 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691562438 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693252006 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69112304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692283302 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.691170185 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692158384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692565353 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693160531 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692883033 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691415802 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693918026 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693547819 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692288548 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694376107 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69262162 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.691392318 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694224347 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693431684 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691417817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692851212 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693013596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692961889 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692373143 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693124333 seconds)
  done (took 113.273936021 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.691411436 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.690871424 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692582128 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69387824 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693023685 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694005939 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.693282634 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693160962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.692399224 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693430509 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693013691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692447669 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693597862 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692662829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693628809 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693495229 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693784072 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693608059 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692712511 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693582278 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693431207 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694923613 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69386896 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694881829 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694309883 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694114421 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693476931 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693439823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693726896 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692725301 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694398499 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693167665 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694548793 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.6952611 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693795953 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695195537 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694232634 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6956108 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697236483 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695125829 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694484478 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694085225 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694590283 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69286997 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694658449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693847228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693877537 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69533512 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695056839 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694055471 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695474624 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695628371 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695493509 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694441729 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695324744 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694861959 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696099044 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695267958 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694868393 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694711093 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695816641 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69702943 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694893846 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696347122 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694931418 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695847555 seconds)
  done (took 113.443834704 seconds)
done (took 2315.961722726 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.757782239 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.754729905 seconds)
  done (took 15.139603736 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.869351672 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.817374586 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.700514111 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.712779967 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.696745678 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.722792013 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.717023808 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.698247909 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.699780005 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.699907475 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.699668574 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.885055605 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.699327861 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.698280876 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.700420842 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.791476376 seconds)
  done (took 49.448948495 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.70307206 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.703784118 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.71105753 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.703840029 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.702701787 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.715906407 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.733979036 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.704995546 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.733938004 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.710105511 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.769768976 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.707393557 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.703683722 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.751333683 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.71019662 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.713716235 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.792768252 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.772714285 seconds)
  done (took 32.673549163 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.777509654 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.709446252 seconds)
  done (took 10.12243437 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.732252994 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.707674022 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.801142887 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.719634333 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.709697788 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.715720965 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.712002057 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.715009584 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.726327477 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.72381217 seconds)
  done (took 68.898170981 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.703944343 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.70100574 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.70336733 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.69963175 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.697969845 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.701994996 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.701684159 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.700120051 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.347719632 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.731322083 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.705485239 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.708256265 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.701284353 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.702997312 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.70106001 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.724477106 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.809746309 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.701657771 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.702380883 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.708613937 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.703587104 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.760481434 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.714418677 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.701353537 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.730290225 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.345956616 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.706830443 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.707345221 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.821071372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.699774232 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.702864534 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.886828766 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.705114345 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.165795086 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.961249128 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.704891623 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.710843603 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.710744738 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.701116277 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.814489028 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.705357949 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.709788334 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.650944303 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.944684029 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.789393975 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.744359208 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.004129067 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.716220856 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.705917245 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.731860649 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.704211277 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.705745443 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.716350406 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.216233248 seconds)
  done (took 123.489388773 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.708409449 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.053230643 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.875430385 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.709266321 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987560996 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.909451602 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.707225058 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.754914599 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.709261942 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.934190339 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.96282305 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810547222 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.708493138 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.707862968 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.709866965 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.707079157 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.861105693 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.779133697 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.709786284 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.706505795 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736366975 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946605626 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.827499278 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.709605133 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.734892504 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.918625796 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.827100074 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.812721514 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.430075701 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.70971187 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.768904053 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.708670308 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.712494543 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.708013401 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.86346603 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.803632456 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789109718 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.71156601 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.709782004 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.709702738 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.370872597 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.907756426 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.803233887 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.834815592 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.959037 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.912774932 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.485994079 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.708444043 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.44565361 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.875264864 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.935001267 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.937978565 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.826420148 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.711598895 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.045151017 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.709583921 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.710814221 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.957397714 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.928327904 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.80743681 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70970774 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.709824252 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.710273006 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.94982951 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.710868395 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.804458465 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71054552 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.710555974 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.804708764 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807420376 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.941025318 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.921939159 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.742111122 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.055224314 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.210950285 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.957646324 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.773915906 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.958718196 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.714226307 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.709047843 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787665443 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.562373702 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.963676808 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.953945825 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956262323 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744305776 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.427255102 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.711587633 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.934658906 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.930675038 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.970116793 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957967907 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.941330554 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.021611648 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.712645108 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.712351029 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.966230328 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.833056741 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714878837 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.055988584 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94047477 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.234853887 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.739483624 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.013631426 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.842695612 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.714461606 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.341387532 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.713460528 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.942549157 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.751136365 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.716858279 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715767348 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.929825455 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.703905376 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.715703723 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.352992694 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.771085967 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.716366364 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.942676159 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.715481342 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978065762 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.715893081 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944420908 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.785620687 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.74274667 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.885764577 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.961057071 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.717411846 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.952147705 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962542055 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.828553054 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.934968791 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.417580727 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.717719534 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998125611 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.715983272 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.71636834 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.883285044 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.716276579 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.858214543 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.716450476 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.005970363 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735283882 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946333217 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71935731 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.964133962 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.747126394 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762513222 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.71926034 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.838260678 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.720445164 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.543871471 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.284527502 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.720311498 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.7135793 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.259718621 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.715362209 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.861958163 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.939265728 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.73917524 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786201134 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.376032163 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.717689872 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79964594 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.737404533 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.102111716 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.714522402 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.967495553 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.716181088 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.715902258 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.71617744 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.952798718 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.899861696 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.723961304 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.714238452 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.620066294 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.71756953 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.716354087 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.896783989 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.068799165 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.715388118 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916799451 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.718440272 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.841557688 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.716293853 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.794268098 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.04998154 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.715052891 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.717957947 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.717019448 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.719620538 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.716966121 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923484911 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.742363953 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.205751526 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.855145026 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990182381 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.028690621 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.957933243 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.76061511 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.721106077 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967875858 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.720561855 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.775566517 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.721940029 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.73699088 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942303095 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.717022974 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976555759 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987677081 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.661516553 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.76480844 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.720731691 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716839776 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.715341437 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.86307494 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80073487 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.718833037 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.719814175 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.830233588 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.837333308 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924595379 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.720252656 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.759583896 seconds)
  done (took 868.226126951 seconds)
done (took 1169.629482904 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.718198516 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.716894219 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.715041204 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.721636633 seconds)
  done (took 28.513766905 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.718801209 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.720604333 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.711878084 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.719345811 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.713060586 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.71964706 seconds)
  done (took 11.949130189 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.764003437 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.7184978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.72236998 seconds)
  done (took 20.848684706 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.782647426 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.09357202 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.83849523 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.119666687 seconds)
  done (took 9.478358535 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.714633078 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.712728647 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.713382539 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.714102497 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.721730024 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.722269171 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.712464811 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.715466898 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.72260116 seconds)
  done (took 17.096103839 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.760776667 seconds)
done (took 93.292380112 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.921182504 seconds)
    (2/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.729283266 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.6374613 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.900145511 seconds)
    (5/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.722648835 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.164806245 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.713305257 seconds)
    (8/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.124357773 seconds)
    (9/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.77597169 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.847484309 seconds)
    (11/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.059995832 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.730831302 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.941224216 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.844551205 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.843917883 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.891300686 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.491874897 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.275111319 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.882789347 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.96625021 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.825431379 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.807132271 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.736267824 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.863502869 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.724061078 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.152601539 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.721287703 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.111551052 seconds)
    (29/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.886340253 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.72442878 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.050118165 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.809019983 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.794222213 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.721271058 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.821207037 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.823925178 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.842542632 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.953206334 seconds)
    (39/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.866580425 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.862646369 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.632563758 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.88818286 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.72302394 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.741601487 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.722581208 seconds)
    (46/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.717208732 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.714922778 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.91994216 seconds)
    (49/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.950800487 seconds)
    (50/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.800135119 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.080697532 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.928044199 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.725522029 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.723777112 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.807678243 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.026937704 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.087413572 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 1.944015497 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.929038274 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.849953064 seconds)
    (61/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.889291779 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.902294772 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.100825025 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 5.361037518 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.726211948 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.074411808 seconds)
    (67/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.93425457 seconds)
    (68/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.79459372 seconds)
    (69/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.725982568 seconds)
    (70/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.889250686 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.843043075 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.933024543 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.876747264 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.732299787 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.716730395 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.07231043 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.007062972 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.803693956 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.841781609 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.717940051 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.850516328 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.67834809 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.469148215 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.724111118 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.724695137 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.001693783 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.735322688 seconds)
    (88/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.717963308 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.344750544 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.155220685 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.799221927 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.72589049 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.418527796 seconds)
    (94/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.726192902 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.132005503 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.860328836 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.825634213 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.012529732 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.121251534 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.726395452 seconds)
    (101/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.678748892 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.784145458 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.848857575 seconds)
    (104/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.815997694 seconds)
    (105/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.833036877 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.186592483 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.408164094 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.731875794 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.719217766 seconds)
    (110/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.220032125 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.84941528 seconds)
    (112/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.779465227 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.881493762 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.809504697 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.037221129 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.722798748 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.046594556 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.740018079 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.847311284 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.849442013 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.813137263 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.589308023 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.078595107 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.833118342 seconds)
    (125/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.818431512 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.95813615 seconds)
    (127/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.799943553 seconds)
    (128/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.06267338 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.017073512 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.876805987 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.019161894 seconds)
    (132/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.037490037 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.675510041 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.748933294 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.779209232 seconds)
    (136/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.720385055 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.666402658 seconds)
    (138/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.80492811 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.902186309 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.863159091 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.799822396 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.730078229 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 6.727227247 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.878065455 seconds)
    (145/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.602610523 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.725687267 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.078997661 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.194642917 seconds)
    (149/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.874220276 seconds)
    (150/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.754775781 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.646860239 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 4.613971001 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.710466028 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.728226807 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.418048303 seconds)
    (156/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.730069912 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.140826559 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.006970264 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.752846363 seconds)
    (160/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.977956431 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.634267925 seconds)
    (162/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.012964609 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.942326659 seconds)
    (164/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.062991421 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.1268447 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.743995657 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.58278087 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.8136385 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.849882858 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 5.489899473 seconds)
    (171/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.74329388 seconds)
    (172/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.735866761 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.733203958 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.035120272 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.943373223 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.891516984 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.164762772 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.826672946 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.034234515 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.74928633 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.73320488 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.999387054 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.976890641 seconds)
    (184/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.617092994 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.216839087 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.944290197 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.72441336 seconds)
    (188/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.251012907 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.128134618 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.730666646 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.811160191 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.962008363 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.032545367 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.138012482 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.031124995 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.73663886 seconds)
    (197/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.224001946 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.750407453 seconds)
    (199/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.984588353 seconds)
    (200/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.747390651 seconds)
    (201/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.831248038 seconds)
    (202/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.127655277 seconds)
    (203/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.418790911 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.062755331 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.723445042 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.724716535 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.363607079 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.054964186 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.904615068 seconds)
    (210/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.67156473 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.848624741 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.790132573 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.413807847 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.085213143 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.081194797 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.028296118 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.966110287 seconds)
    (218/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.730749137 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.036174608 seconds)
    (220/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.731718091 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.905413867 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.900754307 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.837180867 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.587772363 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.046143604 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.759865539 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.73163331 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.727218694 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.303634343 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.223655103 seconds)
    (231/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.879224984 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.750768915 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.63766696 seconds)
    (234/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.807951938 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.878133566 seconds)
    (236/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.748971292 seconds)
    (237/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.785182929 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.345384918 seconds)
    (239/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.845681481 seconds)
    (240/309) benchmarking ("sort", Float32, false)...
    done (took 5.432910173 seconds)
    (241/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.887902774 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.996446931 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.837998734 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.372252139 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.811508867 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.747168289 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.72815926 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.910853346 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.808270039 seconds)
    (250/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.883001383 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.403792826 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.862441101 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.823977737 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.854514064 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.866919581 seconds)
    (256/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.731192506 seconds)
    (257/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.459580664 seconds)
    (258/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.74843888 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.751115419 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.972173751 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.919306792 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.075008269 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.350683743 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.739334445 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.764116558 seconds)
    (266/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.222183456 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.05453043 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.514606655 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.741772672 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.401962686 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.508493228 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.141286246 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.735303292 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.826012276 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.023571505 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.650538109 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.042709837 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.972294623 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.725495054 seconds)
    (280/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.903052873 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.607570037 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.836733616 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.866217973 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.753356338 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.838193975 seconds)
    (286/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.982797529 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.076924251 seconds)
    (288/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.1778605 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.739277268 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.826990143 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.122020236 seconds)
    (292/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.842331131 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.974183122 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.594058393 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.733105322 seconds)
    (296/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.825753151 seconds)
    (297/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.788693026 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.064505659 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.102766923 seconds)
    (300/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.811841443 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.893015871 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.553679755 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.755680637 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.827392833 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.787930629 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.111689501 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.949538381 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.938179375 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.841060766 seconds)
  done (took 958.365582353 seconds)
done (took 960.069519987 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.755890315 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.751684745 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.731710079 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.752252473 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.84514116 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.777692179 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.744977215 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.733855557 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.781968019 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.780100774 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.729273026 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.774440528 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.730648524 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.733543032 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.730727906 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.747932128 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.035190286 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.754786736 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.74961036 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.744079223 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.74867304 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.731355714 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.783352369 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.775917709 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.737440579 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.739961412 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.736180859 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.753326093 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.845644385 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.736564692 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.739597533 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.745420136 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.035566925 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.751340679 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.731957545 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.753658709 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.744926767 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.743762379 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.738518301 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.765903639 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.118934706 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.762783553 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.734552794 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.734253409 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.73242248 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.74020485 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.734358826 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.742542599 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.747691588 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.749219945 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.114660609 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.77858278 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.736801869 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.732967009 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.747593662 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.734609902 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.736537533 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750966021 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.755784682 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.75037306 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.019199313 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.761644573 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.73869513 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.753229465 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.742742162 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.150456082 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.762304639 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.742239781 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.120989244 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.771291265 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.147586567 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.77115257 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.73635185 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.749731069 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.766749598 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.036145059 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.755150728 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.731555284 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.74491982 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.733515387 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.746831045 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.74827124 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.738302585 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.73636616 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.750184532 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.780868235 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.747729312 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.734617687 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.747276019 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.755381325 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.744752421 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.746905215 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.740874169 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.732886228 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.747502214 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.739370156 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.738491431 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.739718684 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.741192746 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.747475521 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.1217389 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.781273011 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.735691975 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.732154797 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.735557546 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.752278236 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.118695528 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.765140646 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.759371848 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.788955073 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.737419408 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.022025302 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.760887677 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.755987994 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.748314652 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.739858575 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.738993538 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.022719377 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.140140932 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.780802853 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.737847083 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.734260123 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.753429455 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.736993616 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.73384059 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.039691946 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.760541766 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.751847104 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.858420947 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.749884679 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.772503908 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.735755205 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.740533437 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.785806171 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.755999507 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.770138676 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.742351445 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.751983844 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.754109778 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.735175104 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.751041032 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.751798943 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.738468756 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.747982689 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.736280855 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.787405362 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.752556715 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.75447182 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.760741669 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.858966053 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.738086124 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.025293201 seconds)
done (took 273.210908558 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.828968359 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.746516067 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.839714993 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.737746984 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.836246965 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.818534817 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.738501239 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.737955541 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.739570982 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.236414536 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.737451272 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.745842216 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.748180536 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.738595194 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.818801038 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.739026925 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.739461541 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.184801936 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.739555876 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.826985902 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.745763008 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.738716365 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.738237546 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.237799229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.747431233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.748054676 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.828382683 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.738640238 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.187822478 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.749120138 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.747395348 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.189164522 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.828393454 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.76489117 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.747903267 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.745335083 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.83796792 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.749079869 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.816775978 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.817743428 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.84328909 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.771886033 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.74746616 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.750090004 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.742380637 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.740968579 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.739812303 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.773115877 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.747542798 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.746277426 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.186290261 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.743387773 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.745276501 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.740741446 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.7390362 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.767598288 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.740766984 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.740834469 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.826366605 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.743336357 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.818376975 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.242633393 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.239756541 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.741105703 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.746703797 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.741485816 seconds)
  done (took 176.758496444 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.816418867 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.827415666 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.813048902 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.755663106 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.799593714 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.818819142 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.75481371 seconds)
  done (took 14.255543864 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.760143953 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.740666429 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.800826627 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.799748061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.742135133 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.903965137 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.739987855 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.761795629 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.748981657 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.777104522 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.743794429 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.740038639 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.748355959 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.751014652 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.801797038 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.761971447 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.866067589 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.751161724 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.742495301 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.897413081 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.747776163 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.74754735 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.776291449 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.76366863 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.744047767 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.75714245 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.32672413 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.743137402 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.740913477 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.742562265 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.746473889 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.793869235 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.742586271 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.749748837 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.743413391 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.865402413 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.743670098 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.743613413 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.742931203 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.751078347 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.742728432 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.743921927 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.743259113 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.743922824 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.74394819 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.774915986 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.744398297 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.744066004 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.742657708 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.745058629 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.778078072 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.744190658 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.743679128 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.749179849 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.795351037 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.75324986 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.744222468 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.743765297 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.745263774 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.743082621 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.901102011 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.803366911 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.744659557 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.802395342 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745084268 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.744392499 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.746435445 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.7455023 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.843122786 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.743188878 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.802105518 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.744632029 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.912649857 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.77619497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.746540773 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.757806599 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.759283625 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.748308014 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.755827854 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.762196401 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.744019807 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.753325305 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.759043427 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.74848511 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.74302669 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.867556773 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894744002 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.743480742 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.756078335 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.761861235 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.74550078 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.797381447 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.745420278 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.742659867 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.809873197 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.868749386 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.780709655 seconds)
  done (took 193.826320628 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.760144553 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.761005606 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.756880137 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.769194695 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.755732039 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.753348575 seconds)
  done (took 12.229950811 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.757014129 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.747228158 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.744987888 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.743876498 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.744728763 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.746355351 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.745568458 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756553502 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.748580647 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.745808025 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.745561426 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.746601198 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.74621488 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.747787582 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.74801048 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.745538101 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.745409119 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.74684492 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.746572233 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.746444681 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.003265894 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.74768627 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.746300952 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.750701459 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.749554252 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.748150612 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768681753 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.746332821 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.747269082 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.764293357 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.749862216 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.745963815 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.750226893 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.761453347 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.749069661 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.750053175 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.750988414 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.749085742 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.745671702 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.749178765 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.748533602 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.748374612 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.749035871 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.750004294 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.758923735 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.755074576 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.749485877 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.768819922 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.747202932 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.748650941 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.747091013 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.748536687 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.748767601 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.748879621 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.75217908 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760971685 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.751688425 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.747573428 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.748468037 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.752537967 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.750064617 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.748617138 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.759314432 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.752470348 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.754904711 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.750468295 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.750777686 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.75324922 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.748268994 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.747352492 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.7486978 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.747897339 seconds)
  done (took 128.937448656 seconds)
done (took 527.692830846 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.987679038 seconds)
  done (took 8.66457037 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.834107007 seconds)
  done (took 8.866691443 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.633661361 seconds)
  done (took 10.323794113 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.790446772 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.787312439 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.771009416 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.773716497 seconds)
  done (took 28.841782703 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.950171204 seconds)
  done (took 8.64223471 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.788711237 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.757957167 seconds)
  done (took 15.30461351 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.874150696 seconds)
  done (took 8.565163629 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.088694156 seconds)
  done (took 8.788392668 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.782768521 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.782878802 seconds)
  done (took 15.276364297 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.766333987 seconds)
  done (took 8.457078301 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.947540644 seconds)
  done (took 9.734795755 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.797920521 seconds)
  done (took 8.561328642 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.814404941 seconds)
  done (took 8.509560607 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.849020181 seconds)
  done (took 8.544505071 seconds)
done (took 158.758929222 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.780887151 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.769235823 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.771737404 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.769799311 seconds)
  done (took 28.785587007 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.79864109 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.799032684 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.79978165 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.812852173 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.803847996 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.803385704 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.794003792 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.794104829 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.812331115 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.804408136 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.804485221 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.80196965 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.799766684 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.792761557 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.804161405 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.805016839 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.811973702 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.804626964 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.794515494 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.805679147 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.77016565 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.813618345 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.80526518 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.769654601 seconds)
  done (took 44.901027081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.969803065 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.845079079 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.932761635 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.831171203 seconds)
  done (took 9.272576878 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.820550935 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.823364196 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.832477459 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.873655682 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.89641091 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.830628848 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.795265059 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.792550042 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.774640733 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.822346673 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.897131591 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.81657756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.906532863 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.76963434 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.953900562 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.76825823 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.769301009 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.820755758 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.874796501 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.889607449 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.76954963 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.820809163 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.823625718 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.817305632 seconds)
  done (took 45.65737325 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.769105638 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.779373113 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.776320799 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.771856524 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.7700466 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.769988304 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.779623517 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.773880287 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.792897389 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.774771977 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.769295374 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.772040187 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.778668953 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.771158952 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.772064554 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.784633159 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.786157715 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.772075089 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.775878329 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.778900092 seconds)
  done (took 37.215729508 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.780604482 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.625238465 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.12226734 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.029757659 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.777510778 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.780746899 seconds)
  done (took 30.81369678 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.792378188 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.785749467 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.780734154 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.836119123 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.921074876 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.785043761 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.780609032 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.7942164 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.82714822 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.843452527 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.80235478 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.809150335 seconds)
  done (took 23.455899245 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.779432031 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.776887623 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.779495744 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.790421332 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.789847172 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.786222082 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.787485357 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.776356159 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.791165715 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.7994266 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.787252937 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.79165039 seconds)
  done (took 43.135521575 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849361503 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644332315 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228384513 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237969489 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294687153 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969069255 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.778424388 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.855848753 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.770764846 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041087691 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.073883945 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963818746 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01315674 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.664836468 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.770970158 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.240342005 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050666734 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983445362 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795070246 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357700026 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864268442 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394284109 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.408377753 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.86956237 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973577767 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.892507823 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.030834584 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.720430648 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819214873 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775731788 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77514001 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.769858046 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042052862 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892049473 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842974123 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776246812 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.190505051 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.475372955 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.78120422 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.366720426 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.187737461 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878543249 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77647404 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773261678 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.698609966 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361762026 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863293037 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.772466538 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.470310755 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.773443489 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775965477 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847217222 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.774806528 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.577313722 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464629921 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.038298949 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.770080807 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784592652 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331319415 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740843441 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448433839 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.70438486 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.875000523 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.412252073 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207336171 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.919512156 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.772489352 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774296779 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699796164 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.436763402 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872588617 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909893789 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.784942701 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413173823 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051274255 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.112153639 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808653878 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06598019 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.642664165 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.703066273 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99090467 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.722537663 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699397622 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.616762225 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.700984275 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987700993 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802803076 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.362058149 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81323364 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.854027633 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.779333936 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788774653 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776137529 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987544282 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.666234001 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776105624 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 3.996514859 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019077147 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789323514 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.859537695 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70219998 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.773994882 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022809912 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.978496214 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.117300917 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.241456403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851138737 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782069078 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.786309637 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.77499649 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.783059332 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.03430698 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827427161 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.740944876 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879115556 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.725479546 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019749993 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810423676 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.873967991 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.062163513 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000562835 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.108808256 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0147847 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835582611 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78044691 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.77730243 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.417321802 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373190249 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.990347485 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.788779509 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340315344 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782940143 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.77821296 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710696692 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.432677356 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.060480063 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.844281489 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991849162 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.800857395 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049460538 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702794494 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914323516 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.770271502 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.987500918 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.420197604 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.837560197 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027865956 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114816104 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.108326987 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787168164 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790152266 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868617454 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792881452 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.300598762 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023440836 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.777786655 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.777454926 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.433762709 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.815821715 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776164481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.780761909 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340643389 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040262516 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.792603306 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.777855082 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652066202 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.787853081 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839651443 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7824922 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782583154 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.308599533 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.292490944 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.784360526 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.440757086 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990239521 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780945246 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.374465243 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944460834 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.791360651 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047028009 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838238686 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.705077664 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.4795602 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.479437652 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779508139 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.705436131 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.779335744 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782460281 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785457333 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.978982352 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.046119964 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823295837 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.40782134 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.873785034 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782411038 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.780291918 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78077911 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.274952955 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.752156846 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48009975 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.788139889 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907232933 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.79120999 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707421227 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.78335803 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780374967 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.779747631 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.746391461 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828775038 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.415729502 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97772762 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026891181 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.196823695 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788850263 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.368733632 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.88655198 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.793276232 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.009475896 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500341521 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.784537342 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864129203 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.785892651 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.367660743 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499357129 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341865418 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067342213 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081605347 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118187296 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.35325689 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.994707208 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898272834 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008278435 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.301319463 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.840239496 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865540925 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717834146 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792262778 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.423916581 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113386119 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789252754 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999455861 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059163748 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.060649494 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903023269 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.983570045 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810061611 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.796261587 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700087156 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.313906667 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799437138 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.105020921 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975364722 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861681999 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.014167936 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.848363942 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.787979729 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120141551 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817997001 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.48449318 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.134803859 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.244410571 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.212190265 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003450219 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.782497654 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.221561523 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137188897 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.029855498 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.925393577 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712340856 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.788075192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786888341 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.798374868 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.756938774 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.626767155 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.021728133 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786122967 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008169895 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.980774553 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149628641 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.683773895 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.784657852 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783596126 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029976152 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.51558769 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947996339 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.166722568 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.373398954 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790533979 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710515152 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711893942 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.482943451 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.788652047 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.75223792 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985666029 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.892992351 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.473781983 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.223797896 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105065018 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028045674 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.795000159 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.044993659 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053669518 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.285745648 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806808278 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.881740252 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.018400144 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.462093437 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.998729388 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01199421 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325499924 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997038514 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252487552 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.753538322 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.793214902 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99080087 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.998931984 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.071530005 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946773214 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.497067276 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.797933601 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141603139 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836156809 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.072287557 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958835884 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.879572834 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800388817 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862809197 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788615392 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.792546148 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.791739691 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797808633 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.082394012 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890269981 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.797234985 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862449767 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753261814 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.348345078 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.789812996 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046515951 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123659273 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099007455 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843438382 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.783392676 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79636899 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712489389 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913559201 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.226469901 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060276914 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.904892603 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.926646545 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807792697 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.018097097 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.108232889 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106510237 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059648249 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.670645498 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486846043 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.915527713 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.003382768 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792124966 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.989753281 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999253076 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083961662 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352769988 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.99828733 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988820612 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060139802 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.148486619 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787679087 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365248107 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.797627173 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194214574 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.819857215 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.088591495 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034255914 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790559234 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909472192 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.793557255 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.990581585 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.241084394 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.421104216 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121897565 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641754784 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.791868195 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050801791 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102233463 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085494394 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863800466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794751575 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.480061182 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921161687 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.676884228 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.000527937 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.789635457 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992402127 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.49877708 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.792214095 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054462191 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087197677 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.78963447 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.700024917 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809485723 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.794187102 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00428886 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000066474 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031447244 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79297142 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.793529398 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.597834794 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058306989 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844907199 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715931542 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.789187157 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836437539 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020027237 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808758395 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.302938239 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.491013041 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07360138 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.691658141 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806353289 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254375126 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168451839 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108101298 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.316835625 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003325476 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.341306211 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.697222688 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176658544 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.792840718 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.255008777 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180599835 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.794455646 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356195712 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911237917 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.050753787 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114640056 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.806480443 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521933703 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.810916499 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006458896 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158791206 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722228141 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793195386 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.840125415 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.790250322 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.776285592 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796997446 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.733642382 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282034161 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.643191779 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349937552 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.792741532 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.807460822 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.075314336 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386372868 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915545417 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811758328 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797182953 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.496608137 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.083632503 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.034818807 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358461793 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.894636189 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.795914846 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796884967 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712785231 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972668255 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.989080562 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074208754 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.213430878 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.907027505 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795527018 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.001113621 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997049587 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.093874346 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912221658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992330515 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915705702 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.733259593 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501268024 seconds)
  done (took 1618.637128644 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.804415623 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.841438949 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.841780786 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.858412614 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.868531559 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.844666007 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.892553165 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.856635614 seconds)
  done (took 56.532373676 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.803146096 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.958255877 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.808568573 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.806419969 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.836530516 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.806257451 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.958770794 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.812377621 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.80429296 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.808958851 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.805838441 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.800404906 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.066950261 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.825951523 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.805305787 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.794699935 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.805077555 seconds)
  done (took 73.094893618 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.797952769 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.963932068 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.824328214 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.797534854 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.535789634 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.801632549 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.767725091 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.814166572 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.79744072 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.847275847 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.091942909 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.847492283 seconds)
  done (took 88.611945125 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.819547514 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.808052508 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.807585176 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.809197079 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.807451282 seconds)
  done (took 10.783113467 seconds)
done (took 2112.61692797 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.044100719 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.855352415 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.894562449 seconds)
  done (took 5.472889174 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.956315496 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.997326451 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.113366021 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.118619038 seconds)
  done (took 9.918687336 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.11039373 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.18869419 seconds)
  done (took 6.021183739 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.117910745 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.818026843 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.174200001 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.797502574 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.797665783 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.800336405 seconds)
  done (took 22.123388921 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.797217527 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.797784109 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.798715693 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.798411635 seconds)
  done (took 8.917251119 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.79740836 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.470957687 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.796530938 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.806351333 seconds)
  done (took 20.594785773 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.990282639 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.914487728 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.94039663 seconds)
  done (took 7.568697327 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.024300275 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.915104233 seconds)
  done (took 6.66368688 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.935395831 seconds)
  done (took 3.658722413 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.827649635 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.068089913 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.305755235 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.852652037 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.434636264 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.12188671 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.146050914 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.0298143 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.299505066 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.284944265 seconds)
  done (took 25.096678042 seconds)
done (took 130.915229808 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.395184439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.84075356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.013618843 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.181471988 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.041479168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.014413925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.025671413 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.189362139 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.884222776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.881903594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.226635301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.061026675 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.975189176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.825927815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.98232364 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.829982777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.039455866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.250054873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.858335749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.083790927 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.03887862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.823892185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.013012785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.833287361 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.044494368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.988843144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.368168021 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.829439707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.997959015 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.376731441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.970665958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.22911778 seconds)
  done (took 166.840748357 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.812313707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.806884275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.807401976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.807235697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.339255601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.80836149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.808606771 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.810814754 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.220039441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.223083918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.807290683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.332263891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.807356966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.811933705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.809327511 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.807355243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.382996973 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.808885941 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.806373232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.804492053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.807175345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.167774597 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.806592654 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.178021336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.366117282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.809587495 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.812972691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.810121442 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.808004496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.805791445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.808429822 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.812613537 seconds)
  done (took 207.345277492 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.811472474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.815249627 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.815548834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.807678567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.809560418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.812293664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.808079191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.808181824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.454793639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.456989727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.81027617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.811002894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.811460491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.810246828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.810749153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.807784074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.809974756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.807291826 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.81255807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.810959813 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.812672386 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.569509462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.809344027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.554356392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.810771968 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.811336756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.811282832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.810790985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.814906524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.811211492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.812917387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.812463214 seconds)
  done (took 218.471899575 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.044281516 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.803284194 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.804999308 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.723923046 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.804825133 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.804059673 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.798570756 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.049996156 seconds)
  done (took 18.568392566 seconds)
done (took 612.961880946 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.215467381 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.050322303 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.977418404 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.831967594 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.099886499 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.881048131 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.827844189 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.89716405 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.647549832 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.903372191 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.487566045 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.85716708 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.577091329 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.851534602 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.954840948 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.890476631 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.425271152 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.511433401 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.012471213 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.933677056 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.005181401 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.734024532 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.911279085 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.686997322 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.61335529 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.78672521 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.837024665 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.414952367 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.836979915 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.990460528 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.510640073 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.091808206 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.848412906 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.834493083 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.885964061 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.861342702 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.031690518 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.846988157 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.962212636 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.521633255 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.912865066 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.55575475 seconds)
  done (took 100.244683678 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.816447937 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.812512819 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.812615905 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.812625022 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.821182692 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.812853344 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.812977691 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.811746039 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.814240694 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.813128631 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.812632475 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.820032609 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.812152985 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.821075892 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.813799179 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.812467018 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.814542013 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.82037726 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.813631318 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.81541196 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.814216073 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.814164862 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.809999588 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.813869136 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.813869636 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.81515943 seconds)
  done (took 48.925593095 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.809098988 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.974381551 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.065213846 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.839262199 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.819452033 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.822260873 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.83843864 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.815204935 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.824259128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.821461341 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.908136376 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.815803358 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.838232912 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.067609427 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.835453502 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.808321292 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.810117033 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.818631266 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.980864737 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.836722722 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.839180874 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.815639369 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.838187427 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.835611279 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.822018259 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.820699415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.823393614 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.282557046 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.830169409 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.909183954 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.885314193 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.845596243 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.227652693 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.076621307 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.873929921 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.81955566 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.81076636 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.914206374 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.821366175 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.820980784 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.838922635 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.823100245 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.06413301 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.346679772 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.834884424 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.813552665 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.291624343 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.921325366 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.857524057 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.828442513 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.066972095 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.834515387 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.810004959 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.82242895 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.855915758 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.82444392 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.821260145 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.190057109 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.830970315 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.840489653 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.812956072 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.822694875 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.991779601 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.82762246 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.976947667 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.828040447 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.829952784 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.820073541 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.06529485 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.835284498 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.354735907 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.831062961 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.8090522 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.909688367 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.975166754 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.31261636 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.830780228 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.990164917 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.240904882 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.841069872 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.825684055 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.269941666 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.846992463 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.825541171 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.811122089 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.810996066 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.8108207 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.854399463 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.838047574 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.270097579 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.355152672 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.203086514 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.846236898 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.835324694 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.822481106 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.186218597 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.818681053 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.812875618 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.054228285 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.357619854 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.831890766 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.828361592 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.335610936 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.835377395 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.839492479 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.828455303 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.070904415 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.836967479 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.855423422 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.81300108 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.833368297 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.825869099 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.846371784 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.831250573 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.814513296 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.337661816 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.929028423 seconds)
  done (took 226.373300274 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.825849645 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.82197331 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.824603401 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.822018083 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.821317417 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.824489889 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.821579849 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.822414193 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.825203494 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.822151293 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.823435649 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.824120622 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.826249868 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.826192033 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.827128706 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.826711421 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.428965442 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.824532378 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.825057486 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.819923325 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.466932565 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.828734846 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.824953276 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.817588743 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.8253741 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.823710905 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.825509844 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.825243077 seconds)
  done (took 166.066157533 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.814354725 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.938429017 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.829547251 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.853430978 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.817787837 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.814920311 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.921991384 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.839629842 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.833168362 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.816081026 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.815225984 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.88473242 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.823212592 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.910565355 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.850842449 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.922786021 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.923147574 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.820041678 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.817373527 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.816090398 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.855454656 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.822343364 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.886106035 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.947127539 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.835242291 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.940136618 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.832078958 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.81909065 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.82914233 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.941324551 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.831983046 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.87685761 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.853939344 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.844100039 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.945636408 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.939605705 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.91699421 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.918232749 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.829829535 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.819279465 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.822327071 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.817751547 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.941745841 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.833305551 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.832151939 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.933566952 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.834484391 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.819804531 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.817704557 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.818594394 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.841896599 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.846280997 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.893062877 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.954695334 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.851490382 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.841324214 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.926773781 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.941170431 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.820363218 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.925214297 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.820998558 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.931540928 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.836350036 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.817778427 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.82287539 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.822985894 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.847834148 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.923688729 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.928312322 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.831926803 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.923904853 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.850741299 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.829347727 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.821974426 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.819649619 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.940885632 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.942571877 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.851591064 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.864796814 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.858525759 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.831097188 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.828606071 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.82069234 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.848320361 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.824606477 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.93321634 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.941919784 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.822733951 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.81997068 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.82453611 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.822663027 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.855444141 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.950872621 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.861936101 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.923691479 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.894809656 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.9003049 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.831646941 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.836691649 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.824534995 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.891374867 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.832279623 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.830632911 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.113165101 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.891149418 seconds)
  done (took 197.650682038 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.229749912 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.866187603 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.888136495 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.15313795 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.17630713 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.784971782 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.870976817 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.866072308 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.901443373 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.054773241 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.940016558 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.887819777 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.864975998 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.85457199 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.868573671 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.902561816 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.87513767 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.227824153 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.071515595 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.002757844 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.864900751 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.151420509 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.186395108 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.448198715 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.924649707 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.284968751 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.441723146 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.996542106 seconds)
  done (took 60.341185565 seconds)
done (took 801.332492149 seconds)
SAVING RESULT...
DONE!
