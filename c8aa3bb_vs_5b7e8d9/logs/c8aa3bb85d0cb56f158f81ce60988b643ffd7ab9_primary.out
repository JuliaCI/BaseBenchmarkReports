cset: moving following pidspec: 5152
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.300606271 seconds)
loading group "string"... done (took 0.583048246 seconds)
loading group "linalg"... done (took 7.101092725 seconds)
loading group "parallel"... done (took 0.163903335 seconds)
loading group "find"... done (took 1.118012722 seconds)
loading group "tuple"... done (took 1.972980488 seconds)
loading group "dates"... done (took 1.265387829 seconds)
loading group "micro"... done (took 0.234371579 seconds)
loading group "io"... done (took 0.965164265 seconds)
loading group "scalar"... done (took 38.316278207 seconds)
loading group "sparse"... done (took 12.357774443 seconds)
loading group "broadcast"... done (took 0.969899982 seconds)
loading group "union"... done (took 13.032215948 seconds)
loading group "simd"... done (took 4.464030564 seconds)
loading group "random"... done (took 8.967050113 seconds)
loading group "problem"... done (took 1.944225478 seconds)
loading group "array"... done (took 21.309122065 seconds)
loading group "misc"... done (took 1.93722684 seconds)
loading group "sort"... done (took 3.238630251 seconds)
loading group "collection"... done (took 18.049344612 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534988084 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141600928 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117187959 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138403315 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182596683 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132153884 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144238821 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086254067 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.008357812 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167211022 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139142726 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.474836468 seconds)
done (took 5.028693602 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.264561598 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086869741 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096466099 seconds)
  done (took 0.88196979 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066601353 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127493809 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08091522 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068463094 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06728758 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081503824 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067624576 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066237174 seconds)
  done (took 1.266184818 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074758043 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068951477 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084985661 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068153338 seconds)
  done (took 1.002857966 seconds)
done (took 4.20683555 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.892174264 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.244559482 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18932181 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452082792 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147470808 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188052814 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.716514496 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338230033 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209740634 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100863209 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105371927 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.375970291 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106458407 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674465325 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076300782 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105564602 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.167339129 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.463664545 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081086041 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083861097 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103931719 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142112796 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100459914 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077849661 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168195309 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069872522 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147225783 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095396289 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069513153 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.243468514 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190490319 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693913994 seconds)
  done (took 10.563003955 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100096273 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117624652 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069645105 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140234279 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10211486 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086265745 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071599465 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083269125 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092116626 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158397441 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114847298 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106132836 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082343323 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070362482 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101323618 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213566999 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109851821 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086013074 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086917535 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076166492 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122506113 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083104063 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094527885 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079723143 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152651977 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194867385 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111229562 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112065514 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070021183 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081139738 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132000837 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145164348 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068920009 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081917772 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139411301 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110922495 seconds)
  done (took 4.573376126 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.047464788 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112835902 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161480102 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093131236 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152491617 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084984921 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111257525 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083550254 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099836657 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246547221 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.087864453 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.454886896 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128242828 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101512482 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069145321 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084191236 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069730245 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.508393077 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145404772 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103344821 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103118844 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075036062 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086710088 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.71459691 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069307691 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067476203 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086060971 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061150033 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145141246 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069699067 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.215360739 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089609924 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089849506 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119261172 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180301501 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096343394 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12340461 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082941282 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068552729 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169788639 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066293651 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09066974 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068062311 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106233998 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104711011 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120289967 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084271679 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068760508 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182674657 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067740765 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09996663 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.868335843 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166173398 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079068192 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067312155 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286105696 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101759051 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072389539 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064667879 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249812749 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152783511 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068045834 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08413597 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067407076 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069123884 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393259249 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068607 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.733279865 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071645408 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076680782 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085455431 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068145069 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080328144 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073850387 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08884365 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086506182 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064623311 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083431866 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068631653 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081550296 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068225507 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068571889 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102082122 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203599884 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067492056 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084041324 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065710829 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102012178 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098507165 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08502011 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066136791 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115064769 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070241829 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068137635 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120024593 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067576739 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102340936 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083783291 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115448209 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082145392 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.116775392 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072704082 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111425997 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072977672 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114234221 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093922022 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068916508 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152735443 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065227502 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081937634 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068311866 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065832454 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084976329 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069763622 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098156796 seconds)
  done (took 21.245824928 seconds)
done (took 38.135551848 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290378533 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091417544 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091076124 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075442085 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091641157 seconds)
  done (took 1.423765109 seconds)
done (took 2.184806443 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12059146 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117077503 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064342359 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112609291 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064528522 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117311753 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114311649 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082065315 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117183639 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065132007 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111890458 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06549255 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064586248 seconds)
  done (took 2.001745381 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083615808 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084563171 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085626084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082661649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078688007 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083443785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08066467 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105338872 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080933632 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087607643 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065678282 seconds)
  done (took 1.669837668 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083086335 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084221832 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08556891 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081833973 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079136928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082778005 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080568984 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102151253 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081950847 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089274132 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064952981 seconds)
  done (took 1.668460964 seconds)
done (took 6.088495798 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078886111 seconds)
  done (took 0.82587374 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.691414915 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.496245447 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083699473 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132770065 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220403687 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.152234264 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.433050665 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108996643 seconds)
  done (took 10.248490492 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09009862 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098009491 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072863744 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088466921 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068922311 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087995246 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071865554 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07029919 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087446133 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070432293 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087545294 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069621568 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084105778 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070670388 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070642602 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087029066 seconds)
  done (took 2.089629866 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093776074 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092574799 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090336966 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076168089 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089740417 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073381716 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092726708 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075049479 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08737352 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073281478 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091068879 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074627865 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088183521 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066709177 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090481099 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077249994 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08788085 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076602751 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091851979 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076964745 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091262521 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066305547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088534506 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075905031 seconds)
  done (took 2.844048432 seconds)
done (took 16.762332959 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130073645 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076055592 seconds)
  done (took 0.958447276 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081970899 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098294408 seconds)
  done (took 0.939433428 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083442178 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081178671 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090182988 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093049281 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081388584 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067091066 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102820248 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06730888 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081980724 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067578907 seconds)
  done (took 1.575446633 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069253009 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093879125 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070792198 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097826112 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074636285 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080446305 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0741225 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084575337 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079133884 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079380189 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072396802 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098430276 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07224732 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10003103 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073399229 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084764613 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086800228 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068493384 seconds)
  done (took 2.222683384 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06654769 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067945062 seconds)
  done (took 0.896317566 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067882967 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064765002 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08214077 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067740039 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079186825 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064262627 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079669346 seconds)
  done (took 1.268083067 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396937684 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109723582 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242038325 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088087417 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103499849 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260395561 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083764269 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072023394 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088528462 seconds)
  done (took 2.245254543 seconds)
done (took 10.866979379 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08019306 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08710438 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110174488 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41582846 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105806436 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067661094 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143317937 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.202996848 seconds)
done (took 1.979212753 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125566272 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.6150931 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398993623 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211263369 seconds)
  done (took 1.992614892 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.376051139 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092728519 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074428665 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067449812 seconds)
  done (took 1.384142973 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066548194 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070664704 seconds)
  done (took 0.908668616 seconds)
done (took 5.182510404 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067159701 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102994068 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067199672 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065427425 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083858948 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064698226 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065274394 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083624145 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0675386 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067106792 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.082127643 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069848854 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080228002 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064576321 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067657364 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079962263 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064715349 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06471707 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083141936 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064852803 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067565692 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079532396 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064546907 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06426077 seconds)
  done (took 2.537412037 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08564343 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083467191 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072542574 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088533931 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071045901 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088769846 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072517534 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067606711 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088056623 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069756304 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086137296 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071504002 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08423794 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071750683 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084803539 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071587941 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08746686 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069837344 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069606227 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086803132 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072813392 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083553663 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071710864 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087433612 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071059088 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086211816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069609726 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083263226 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07278977 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086354388 seconds)
  done (took 3.130565736 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071724051 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064938996 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081582951 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072289811 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06554827 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082558087 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065181321 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08155197 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066132698 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065331745 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082503356 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065390189 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065837829 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081666839 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066861036 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084379321 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082376088 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06618854 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081483282 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066251523 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068656165 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080640296 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065564755 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081234678 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065032219 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065339594 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080734734 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065247516 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066241641 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081023285 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069003479 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068172692 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080885174 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072278393 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084081689 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064687284 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068677278 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080084565 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065845095 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064915147 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080041192 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065246396 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065247086 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086899713 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065454768 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082780645 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064939964 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066474269 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081258798 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068814 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081317218 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065299583 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067670686 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082324712 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069396286 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064694107 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08154697 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065396199 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082033757 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065260158 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065303048 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080746911 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068235862 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066168231 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096045164 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072353107 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080528452 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066908869 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066588202 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082770039 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06658444 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079054921 seconds)
  done (took 6.017341383 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116341144 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091929414 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08290229 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067304591 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08003975 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065073612 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069027913 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081368602 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067540412 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087005651 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06640668 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066752655 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082624059 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07810497 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081019404 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067026433 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087783841 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063275335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065918685 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084764753 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065747469 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084166644 seconds)
  done (took 2.483781877 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183298639 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0878426 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109496935 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090440991 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085381641 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074564969 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086525617 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071352166 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071505281 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086279344 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069676417 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086220421 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069722303 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084517632 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069963943 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085675178 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071640893 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084998939 seconds)
  done (took 2.35034283 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077868638 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067216088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105555975 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067699737 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08396697 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070617629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088754988 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076112249 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085589959 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067451947 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091343591 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070853026 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085661891 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067765367 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070211643 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083485395 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069837896 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083241963 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07560694 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088377812 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072174005 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09057411 seconds)
  done (took 2.522415532 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081662773 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069839389 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101147781 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086427791 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06343841 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066216811 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089771618 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067646872 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09027031 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069280065 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068061566 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081982926 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07257166 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082726544 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072952528 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083388268 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069280428 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06779726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085113734 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064063831 seconds)
  done (took 2.316468655 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086820295 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084100839 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068853601 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092524754 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069060549 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085064675 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076842757 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084296009 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068929022 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108323623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069102505 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084596282 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076804877 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088949717 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069171473 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091520911 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076858473 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091999622 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069075463 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084203856 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108319224 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17559116 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092327551 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068836776 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084282928 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068451687 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069218024 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088956214 seconds)
  done (took 3.171754611 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067511722 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067591259 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081265984 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064737319 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065855404 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081298578 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06489537 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06599457 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083921379 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065417209 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067355439 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083463292 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067639208 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083262593 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06727272 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067081665 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082827056 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065002221 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065397067 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081391178 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067533194 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067659191 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083091586 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065267092 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080438755 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067703072 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065406474 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080800826 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067968525 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065952131 seconds)
  done (took 2.938169859 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077093056 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091197662 seconds)
  done (took 0.958584769 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065366131 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081804762 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081025923 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071524709 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088319439 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068669949 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091779228 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071572641 seconds)
  done (took 1.408483095 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083191476 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079176472 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085541382 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078872297 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094344976 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084624044 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15460939 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085124941 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074630674 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082831726 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081897637 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066925044 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090944584 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068652599 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089742733 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073964617 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066175129 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088968581 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070677762 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082927949 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070262082 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092354369 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070724715 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064481718 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085318105 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076842246 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094976969 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069410683 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087682798 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074955696 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089778338 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062458922 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068578129 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084415828 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066268577 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094462313 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082581675 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086984906 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077089699 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069795878 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093986442 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064246109 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08840807 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074489109 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093664492 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068892713 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084772288 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063685507 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066739874 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085937351 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064009478 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068665885 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079364479 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075109828 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087567281 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078148193 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085435614 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069308832 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071428742 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08777887 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075527097 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085990559 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070252915 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06851394 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093613429 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072777559 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09325875 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064044013 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062870447 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08236764 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077042349 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106853462 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074646998 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085205715 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069528415 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08257238 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071556785 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069599394 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089691486 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074529657 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084348983 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073939123 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091711545 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068261969 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070310078 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09091978 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066555716 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085853177 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065779758 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100090437 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06749919 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082448879 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065303334 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078510071 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087465159 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068183096 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081745962 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075125857 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062739803 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085298995 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069012451 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084784516 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078349278 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089073525 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07447441 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093236969 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075901886 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068426606 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087577155 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065944331 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085692308 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067471063 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075166625 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078594126 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070912484 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086168838 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069299234 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092403489 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066827916 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069097052 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091320907 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073967463 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083919658 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064932031 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07074267 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083824216 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07149796 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091755747 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068026877 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064428643 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080262591 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072167188 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084435215 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071329552 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089507069 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071175543 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063413357 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083160496 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072508962 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092902878 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068573847 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085222924 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07340087 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069436995 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083721442 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074481042 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086871084 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067145494 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073528851 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085782581 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064437185 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088527286 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071822014 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066443261 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08773781 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072064292 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086419575 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069576403 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083418766 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07308549 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069179961 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083335406 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068098999 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082929338 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077932933 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069694278 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080216077 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066005281 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091832645 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066872047 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067449709 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084419364 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070444608 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085184425 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066890294 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067540366 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086393614 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078989475 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089362285 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069745216 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08956576 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079287152 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084318166 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070079295 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069060527 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085644377 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069446857 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092458989 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07305997 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089181033 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071133743 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064519462 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090216948 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075254515 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083432162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066648301 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066256373 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08753935 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073777024 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087650196 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069144387 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082565357 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068079645 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071183888 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087973895 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067946423 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083772448 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072928002 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083357956 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074548426 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069111142 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094286936 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070947107 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0795875 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071896067 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082553886 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073636178 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063805239 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082496855 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067313239 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086396668 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067515208 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071017688 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078850208 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075156461 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091838227 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068254374 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068105909 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084685939 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074523154 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08575454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071659603 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071478913 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089920883 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077981022 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083439041 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071199167 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094138675 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068729612 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061886044 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089190342 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067703903 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08432615 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067466423 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066484431 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08772839 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07638965 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090923932 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0627158 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086263195 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067232076 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066805385 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080373937 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072508607 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087160473 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068431498 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074516007 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08576345 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06895803 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088925301 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067889275 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068628325 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086178258 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070792579 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084843225 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070347743 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083586982 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071336861 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066974813 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082208664 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06982119 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085343092 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067870824 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073016292 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084213161 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068377901 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086180301 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068791409 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068387838 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085251781 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067677694 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087641289 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06845969 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067955909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086352026 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064046644 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091012506 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068179922 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074767817 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084905399 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066112708 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089855645 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07032335 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089226265 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068905274 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069353234 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085556464 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067920645 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086722438 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074760149 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06643296 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094814106 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075681456 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085223717 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071060579 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084865454 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069565463 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067350987 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085887446 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069594634 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084731013 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06772491 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072911689 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087159761 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068886005 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08622842 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069192715 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068146119 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086022928 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063620167 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066831914 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084292719 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068428047 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093951654 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06880584 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084207408 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067448623 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068803517 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084132087 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065377413 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091950453 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076618453 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085337716 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075256275 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083497456 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068991516 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077468643 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080025508 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066386088 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082449075 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065975558 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074871856 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085261702 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076974654 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084772249 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067829755 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064874613 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085416419 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067318031 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07944403 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066311258 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071548878 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083307939 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067619545 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084532884 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070621539 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068845204 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093459885 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067986339 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085650267 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068553317 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065179429 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084040101 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06763217 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086853331 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068878929 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065496843 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082167826 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068070416 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085219528 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068975882 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068347204 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085830371 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075462516 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084374101 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070546941 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070370873 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082091727 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071294345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08491921 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067572389 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066949132 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087637672 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071802199 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085369276 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076904487 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084280781 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068526346 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06883362 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082874738 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068578995 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084243208 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067844982 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067056393 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086707842 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075948147 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082927531 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071210067 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06753642 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08512987 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074998029 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086230044 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071370678 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091735493 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068355869 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069143283 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092126393 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071803278 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088161304 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069447141 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086049622 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073665232 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067201365 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090652778 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068409977 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086280894 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069412862 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066034466 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084459904 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068275057 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083471549 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073367917 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069280324 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084521382 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067519996 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082276562 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068812762 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071029626 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092016458 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07050996 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08783196 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063699268 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064919334 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085889844 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066678426 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086115552 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07145793 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073025435 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087404548 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068224226 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084529595 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076929342 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090464594 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071984812 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065929266 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088297687 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069410871 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087266413 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069478298 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06812832 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08660015 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072274627 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086396645 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068227336 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075088568 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088444051 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070046784 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086756964 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069300472 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068085333 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081029984 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069550042 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086899767 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07348862 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087512405 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068302059 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07821575 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082977126 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06876651 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088479592 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067966258 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071797702 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081426015 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069394978 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086625999 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069930732 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063099912 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084522381 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066146891 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087203365 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067300019 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0635233 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094974611 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076742691 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087852016 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067800803 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084426235 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063746888 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063706662 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084408853 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069592714 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085753872 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077754134 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066592367 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084236048 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064199171 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086020006 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070840442 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070837634 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082592322 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064308697 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066314845 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088797359 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072984285 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083479929 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068703436 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087659123 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069656656 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066168979 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088169297 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065912783 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08900515 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079890228 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085734147 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068521335 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074392857 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093004334 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069108171 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08067078 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069578799 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070448157 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085346147 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069295725 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086254662 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082544195 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088559331 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067458463 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067064905 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087971231 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067822501 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092869505 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069464981 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086224146 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072511889 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069601094 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094344135 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070839636 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0925725 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071217812 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08815762 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067364577 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067799327 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083448054 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067058507 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087193725 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068498996 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071950425 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093162672 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066546168 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095787964 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076785924 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087171797 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065580469 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066386298 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084719104 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064206809 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086013928 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067544609 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066110904 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084079653 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067928807 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086325566 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073363736 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068501817 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08634008 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068779511 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079982781 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069968898 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07030264 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086308577 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065555077 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085791796 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069341113 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072168395 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088966632 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066293373 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086713266 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069610163 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069104541 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081047048 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074951911 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084892731 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070473368 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067263872 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086041168 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069338367 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088480592 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073390131 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086443669 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070172778 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07670776 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088064041 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065969776 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082825881 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07352086 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066559946 seconds)
  done (took 46.718898631 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108442891 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083242817 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064370638 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081561667 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075723288 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082803183 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063910742 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064612115 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08179772 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067229689 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080597686 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063512735 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08944324 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08725074 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093554733 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068141696 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081027077 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065186945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081195587 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065012424 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089647822 seconds)
  done (took 2.476715569 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07610033 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090201992 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074741883 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095029504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069051619 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08960689 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074157858 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089679444 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095022569 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069402171 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095218439 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072634778 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086123871 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069087685 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085736816 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074071558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094795355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068983707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089097175 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074121165 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089767218 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074085038 seconds)
  done (took 2.632210775 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068747334 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067653674 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085742533 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063370133 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067188486 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080739261 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071490439 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082791095 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07094619 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074141423 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083849326 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066735412 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086292538 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062968948 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067650326 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082972436 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130193268 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070863843 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066800881 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087616135 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063525376 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086611423 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063783112 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063596885 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083410598 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07163337 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085741483 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.0656775 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067357601 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083817446 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068240157 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082754304 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069009699 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068159127 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084418099 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066767462 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066660528 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085460874 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063565066 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082699132 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06790736 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063641234 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08632316 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06892441 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06513866 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082746243 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068894853 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084917184 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063283557 seconds)
  done (took 4.504367853 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085603724 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129773395 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087615111 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090649953 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101379915 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092597232 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071871566 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110334804 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065319819 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084725678 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084028702 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102872268 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085552896 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072819661 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091523094 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06810386 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085655472 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06689032 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071005712 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085260054 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070971212 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091866339 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099433493 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080702707 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088485675 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066873555 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084355228 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072103157 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097515536 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072123108 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089487118 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073070304 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100478549 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090173237 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068205394 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069513096 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101529248 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085309281 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070519956 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064855078 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087485895 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072127665 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092128634 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101910325 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067838775 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073344662 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086230993 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064926679 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098517712 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070462391 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093849478 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099527841 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071953227 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085683313 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07304939 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099986014 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068572705 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083421399 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071416835 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097450217 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066045156 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088580589 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081338524 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086989772 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07482961 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099676055 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072377999 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089356247 seconds)
  done (took 6.654698448 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076411866 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09163902 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081483222 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099914643 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092485681 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074519907 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091928241 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074591771 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091107263 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078600898 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091814465 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111989377 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070255948 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09489271 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074084096 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093071738 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074354053 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092587404 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07385077 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093227683 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092140426 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082524942 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091399295 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100149629 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103242077 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086637092 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074724604 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09178213 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081464536 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092008587 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103703949 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074466682 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091845822 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100174697 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085595802 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091817485 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066980947 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091165144 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075373347 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091884329 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069932695 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099814145 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073770856 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086900296 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073628989 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092519744 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099674392 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085744376 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094563275 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096732684 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074915287 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099461033 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073424621 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092846941 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099687314 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106256102 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099863914 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099510625 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074410626 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10035277 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099035337 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106884306 seconds)
  done (took 6.3414282 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088285438 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095137486 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096648725 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063949572 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066066099 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090836545 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065792567 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083483213 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077104056 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094245762 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078727593 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089508854 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074299863 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096848753 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089006544 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074349689 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088866384 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071782887 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094545254 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071452165 seconds)
  done (took 2.499146571 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076749136 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102709664 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068896049 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072855216 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089392974 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072829647 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088303616 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070307638 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08623727 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07096148 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095712698 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078475106 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086721975 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073371624 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095436546 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073564681 seconds)
  done (took 2.155868079 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079890771 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095961834 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082251116 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086677108 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066175449 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083440658 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067333947 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06358058 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082671895 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081637206 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087419748 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070187957 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086318487 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066602074 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06428291 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089133299 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064523693 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084106193 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068220637 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099990913 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079031743 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084570524 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068987124 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068821145 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086402979 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072566919 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086873803 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066259702 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085183729 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069195744 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08597979 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07602851 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083084417 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067190951 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066611422 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083905281 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067845952 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086210622 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072087119 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066982987 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084555754 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068245781 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086212112 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069841891 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081914567 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06912489 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063857357 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091702104 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066607668 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086123247 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068406909 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087831951 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069213588 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077140853 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089707297 seconds)
  done (took 5.110597009 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081227679 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070208615 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082221785 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066399766 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089574596 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069342113 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070476989 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089075085 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069813096 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083486181 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069703805 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088125138 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069599363 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071046896 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08749019 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07111154 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082021933 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069897555 seconds)
  done (took 2.238442857 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073546674 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067880531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093141764 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067816577 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086310948 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07040036 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063372597 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085324254 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066387265 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085493574 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068147288 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069615657 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084636143 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070510001 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085560072 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067570549 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069570383 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084996581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067742588 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081643898 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070605851 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06609879 seconds)
  done (took 2.505958185 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073777572 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093722595 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.161654044 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106899842 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084307887 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099040892 seconds)
  done (took 1.480300699 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091711405 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098837062 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069173352 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107368546 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076782443 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088639739 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06995836 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088056573 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078113694 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101587994 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069620909 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096068019 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096560398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077789451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093469512 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075482889 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08820445 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069714104 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086579376 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105537412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069863221 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096016683 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069873632 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087661975 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069984352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095767082 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078468017 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101658854 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087164842 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077917072 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093257473 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069966045 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096467777 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101413507 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071617169 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096125559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07040645 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105007207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075234442 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096275614 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070319233 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094387264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096407685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074549784 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095832425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069905049 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092800722 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069312779 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088950609 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111703632 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075395425 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096162305 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093167597 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078474051 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096320474 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113011273 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082487272 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096925259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093503079 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083512473 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096458786 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074885501 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097353953 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101399671 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075212361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095430114 seconds)
  done (took 6.613275487 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086638441 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106121682 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070489091 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10223266 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096773968 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070104968 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08839351 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07073623 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087985995 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069419445 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128614074 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070691438 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097085886 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096658103 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070326651 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087973834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069935737 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096203714 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069913749 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112063832 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087960657 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078371755 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096803583 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096417766 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083267685 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094341418 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070374576 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088407182 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070348901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088724566 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074951009 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088956232 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096154414 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069921563 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096780702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070704645 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088410937 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075407623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088510549 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075417655 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096758999 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10587773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070417508 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088522618 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082533624 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089348607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069585858 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088711231 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070379306 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087689036 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082489662 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102068668 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101163403 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096348086 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070448469 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088136146 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070496945 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088981825 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071387164 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093733139 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078427724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087933753 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113118492 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070136152 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088637129 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077873427 seconds)
  done (took 6.52436162 seconds)
done (took 129.064259369 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.232006196 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185207439 seconds)
  done (took 1.277950535 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070254745 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097010551 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098371737 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129401915 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087548659 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101094508 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119009027 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080566353 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067240931 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087071929 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068892388 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087922651 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13229991 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068173456 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086930183 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070109726 seconds)
  done (took 2.319424808 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103747325 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196071993 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109215166 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067502976 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100333046 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079731292 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08569656 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077577101 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095257271 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066712267 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078515764 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095557831 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066377698 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096066876 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075714013 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097546372 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066306415 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098008631 seconds)
  done (took 2.533894893 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104087317 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140327098 seconds)
  done (took 1.113963627 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200281168 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127208606 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201533903 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.414253378 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20458066 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274315245 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.171876764 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170292606 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.149933098 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.167643791 seconds)
  done (took 2.948143766 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099419467 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169644464 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309153001 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137824957 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086262084 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116119593 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137348866 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090189097 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100759807 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099801933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081892624 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097371926 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098468817 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095767033 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075568353 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096932811 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121712188 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075636771 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077630275 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096348057 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117510709 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068587308 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075923635 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094194766 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07917112 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097441732 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067148502 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086473747 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076670325 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094729453 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079763435 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113574005 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09718532 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129650979 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082612731 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.13017674 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097940656 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074273477 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095412098 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074693602 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09715414 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080021656 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102778184 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078259448 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086634444 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07864871 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086067004 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068511556 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100224107 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07850767 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099187964 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079736557 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129337387 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097932833 seconds)
  done (took 6.233892909 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.742075644 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110928517 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094510256 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.799030468 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090192123 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105466964 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.706067856 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11710343 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20874519 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.753162471 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09011168 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098763774 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.177296277 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233340111 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.878073503 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280536589 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630323201 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104661744 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109729831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13111936 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137579591 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173487658 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149467925 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.433627174 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075333977 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092591783 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135565158 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075627081 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158258312 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084812073 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093876847 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153967732 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223836184 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153696708 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09628424 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070770215 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092183469 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145986388 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215990897 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187462818 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157553694 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068408877 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090951857 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139466578 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130484683 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068822576 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137766242 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170591561 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147327636 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074729756 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095797268 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140325405 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137829737 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140604869 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100711328 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.260187712 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.279594678 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090467531 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098665887 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103731297 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234721784 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083333824 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.194182031 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138448281 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.164863192 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09102909 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.724760617 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145463309 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091320009 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07505982 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117737642 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094351197 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137870141 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143555581 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368295204 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141918611 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073541776 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090671881 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208378509 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102467468 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072826593 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13950311 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095693012 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100451452 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16190383 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142281296 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146093816 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.206482136 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139464185 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157940699 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075021263 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122537075 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07465942 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20927801 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.169878937 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.137582973 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205638626 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138140783 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140370381 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146046053 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096359521 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148436005 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117641656 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081752124 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136380588 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.187055236 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121792619 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082265306 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094091615 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138292721 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126040277 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085243955 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.158224348 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147504653 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457387384 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145776179 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088694637 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08696425 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136887765 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138821862 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097390541 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230033389 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101544424 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165867756 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099469162 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089944567 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11879501 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139739691 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079305296 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121499102 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156518886 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078177583 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212969254 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.185910497 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078237226 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210830025 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160300321 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076202344 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.146832238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118103522 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145014096 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097102073 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139876809 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076005603 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768130437 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142848023 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120729745 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072989431 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176949268 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090714663 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082907311 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103182443 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069170183 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777257785 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085207331 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100927597 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081978685 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095617928 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120716477 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135017012 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07284923 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157127996 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.176948711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097129649 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117578981 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083771996 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.137455061 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097648633 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083515564 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10441648 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103798629 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121967935 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074409734 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103047068 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146460254 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.139541218 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.188810702 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541146196 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0705796 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10393447 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196448428 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072631054 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259643601 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136077253 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194860354 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139980985 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080610023 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283082109 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141985466 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174020492 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084756204 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169637447 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069784854 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135020903 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.139475359 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090735432 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075765653 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.137107926 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162601979 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141144227 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911104925 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091746344 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201657221 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070049765 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.14762415 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096072054 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095650407 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.235963281 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091313388 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144318444 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141394197 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073623883 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104381171 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672663337 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104833495 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137504938 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095573211 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.169329513 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139719454 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.153651041 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136646801 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076151204 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.136957938 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.182769061 seconds)
  done (took 40.083293102 seconds)
done (took 57.380503708 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257893439 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178102859 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240076865 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143475121 seconds)
  done (took 1.794721524 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144166401 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104670394 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117388319 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087195063 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10352669 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087357807 seconds)
  done (took 1.542968209 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.404252709 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262987409 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229934507 seconds)
  done (took 1.793224076 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260711055 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213606498 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44543464 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29521274 seconds)
  done (took 2.24067359 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177088365 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114038676 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068426708 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106242348 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158203796 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251957983 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127763913 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186093021 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08068085 seconds)
  done (took 2.219999727 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196791472 seconds)
done (took 10.695600066 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124138272 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.313853597 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215211789 seconds)
    (4/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.218207275 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.159541245 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.300579767 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.097309354 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104526024 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.16056556 seconds)
    (10/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.27458013 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077542015 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.181433884 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080746163 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129080964 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.178006483 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078032427 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.283120074 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075522609 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.171372135 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 0.164836685 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170755023 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.173246936 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.162479968 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.172832663 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141829998 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.271447808 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077571981 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072579835 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171263374 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125255607 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.241487436 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.171475433 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053597747 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101538266 seconds)
    (35/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136604256 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072458003 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.250095412 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075085003 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099982003 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099045606 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09579067 seconds)
    (42/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076334608 seconds)
    (43/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.281505965 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118306486 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140717137 seconds)
    (46/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097054421 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067145796 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096913677 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075021753 seconds)
    (50/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083228732 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.124545754 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114779549 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.097624302 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14704483 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112216885 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067588293 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055288416 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099205911 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06815825 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.134791456 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069782719 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.074426184 seconds)
    (63/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054345466 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.260482155 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071252936 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.28714159 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08053136 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114317688 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08926774 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089638351 seconds)
    (71/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069008659 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.272356102 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.131343938 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078674392 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053655345 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098774339 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077665903 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07574413 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100694242 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120317074 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069003472 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083265033 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167608225 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088929402 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144566402 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.091299199 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092826374 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089234971 seconds)
    (89/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078864359 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067205429 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.074063318 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08017449 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171464806 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054068027 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112014966 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.27124282 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116260105 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053407054 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088987482 seconds)
    (100/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.258299242 seconds)
    (101/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.206276349 seconds)
    (102/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095041627 seconds)
    (103/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.122961628 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.207125989 seconds)
    (105/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111257084 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075502202 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.237896871 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.20039691 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.162635687 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075402865 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.260101934 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.264833632 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075305983 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053946692 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096861861 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.238622392 seconds)
    (117/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063200526 seconds)
    (118/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07041805 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169407309 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068091325 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116594525 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.240440162 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071919655 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092029833 seconds)
    (125/309) benchmarking ("sort", Float32, false)...
    done (took 0.151427414 seconds)
    (126/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.112593316 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120974143 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.168651923 seconds)
    (129/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077086269 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096649883 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081411905 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.159009104 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110003864 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076656619 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.214146601 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074111067 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.096564965 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090778503 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052773104 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074760052 seconds)
    (141/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078465797 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097383736 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055310464 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075114763 seconds)
    (145/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.131144021 seconds)
    (146/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05371655 seconds)
    (147/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06806388 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096893137 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071152636 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098250238 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.217886167 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103465597 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078746868 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088260754 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075540088 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05511552 seconds)
    (157/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.124111775 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.171927404 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053349821 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092409354 seconds)
    (161/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131511659 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055557842 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067271607 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097113421 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157625293 seconds)
    (166/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06232309 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070137898 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113820796 seconds)
    (169/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081875827 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090548541 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168373276 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091129054 seconds)
    (173/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065756807 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054762776 seconds)
    (175/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099915106 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053855081 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073038937 seconds)
    (178/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.120950889 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054307989 seconds)
    (180/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120254101 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.215674115 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097500802 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076982199 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057815152 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.077084858 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067888736 seconds)
    (187/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053234459 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.481724223 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.095101426 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178629082 seconds)
    (191/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.12347534 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055070598 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066596584 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079418196 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190930986 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07461794 seconds)
    (197/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115305549 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077013921 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069951945 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133205792 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089936032 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.244812587 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067594036 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141358725 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098978546 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.218553389 seconds)
    (207/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092767803 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072126676 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053140302 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.076207616 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074437805 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073225953 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.240811125 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066280899 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.074440211 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071600795 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070558097 seconds)
    (218/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.074317776 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104144717 seconds)
    (220/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07508989 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068200547 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068145138 seconds)
    (223/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138498291 seconds)
    (224/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062507276 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191042115 seconds)
    (226/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071911539 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076309273 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109869028 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098011625 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074805945 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077075958 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207783644 seconds)
    (233/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.075872841 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086245382 seconds)
    (235/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194485094 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05358523 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088492447 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073013183 seconds)
    (239/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062339772 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086372011 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054279254 seconds)
    (242/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091925225 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100924077 seconds)
    (244/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067888542 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.114637173 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066915747 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110482299 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067729492 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092205472 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163037245 seconds)
    (251/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113416649 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074331237 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055878832 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.114439784 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066976797 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094776706 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097220451 seconds)
    (258/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06692919 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08988818 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0674812 seconds)
    (261/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054041977 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096525886 seconds)
    (263/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06386802 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06647824 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088241491 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093256024 seconds)
    (267/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.085166817 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08922921 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054333247 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075335654 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074131488 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089144943 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.074701111 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069722509 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054326167 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097238055 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069050607 seconds)
    (278/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.075700543 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075180818 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067091614 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074405595 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068072029 seconds)
    (283/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054927175 seconds)
    (284/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053793921 seconds)
    (285/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092298472 seconds)
    (286/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067657094 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053327313 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.090495733 seconds)
    (289/309) benchmarking ("sort", Float64, false)...
    done (took 0.125951157 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096572685 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.099286208 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088763775 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066993198 seconds)
    (294/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053189133 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09628055 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054504063 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074474252 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.07664546 seconds)
    (299/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080476812 seconds)
    (300/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052952096 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095874987 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074277624 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054134998 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157752326 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06816581 seconds)
    (306/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.075864088 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076370531 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053381634 seconds)
    (309/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077419761 seconds)
  done (took 35.157872877 seconds)
done (took 36.070783304 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083055044 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114589432 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077131779 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115866781 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082360277 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101215529 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074477648 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079760443 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103586672 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083510951 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102464785 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056407395 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098034562 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077335623 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098850973 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093034209 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101581739 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074741351 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07568553 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08864674 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075547813 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088806812 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069623624 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056912794 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101210359 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07406896 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074433012 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097972095 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067518614 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089120584 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070967853 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07432201 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088677854 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080622818 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09600248 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075198015 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076818997 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099475369 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070472141 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088709991 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074619679 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068004534 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095022639 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074997168 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073152889 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094707527 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075146319 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102510076 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093531248 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091705818 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075611062 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099995084 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077558087 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074551864 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093367616 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07564455 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094480722 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093420005 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098935129 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069454675 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075637129 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098509846 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073082874 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096604039 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075270405 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077011495 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099728492 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073130746 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098300811 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072726736 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06704085 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097443333 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070609641 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067189287 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099714662 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078522898 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087977836 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073774432 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073848603 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095463798 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067145248 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091123965 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069057504 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074020136 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090298046 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057131474 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071737437 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095220442 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066924306 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076068535 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095263951 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074443346 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068890105 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100148562 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067739222 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094286968 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067899299 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067457747 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091163859 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071909178 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067536382 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091454521 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076676712 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091394128 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.0735967 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081505122 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08879584 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073722997 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088180389 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067295859 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082624418 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099059249 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067962323 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091317306 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066697786 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074671409 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088637584 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067274217 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067064558 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089327753 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073346899 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06767583 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09184323 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074861762 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103121018 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066878778 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071645061 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091489587 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067310589 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073143768 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089608874 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067630982 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069216368 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08702747 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069223547 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089089104 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075841538 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070220294 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097458126 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069768949 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097715424 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072097528 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073257912 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095019789 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066698662 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061054957 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09117118 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069668508 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069244389 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089679787 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069177749 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066868995 seconds)
done (took 13.352385175 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068247717 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169577786 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127277534 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097337376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111064502 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067814396 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100810657 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105120537 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092156119 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127964738 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089678495 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110613531 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11458922 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090050209 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067493729 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071518391 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09090595 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090261839 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125135008 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110273123 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117405529 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089096623 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121568094 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091185014 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112479534 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104496859 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.09037664 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072180382 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092801913 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093879225 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109711136 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071138091 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068381284 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123484305 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.11818609 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086437203 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089261103 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086082562 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0894062 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067378538 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114843537 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101157266 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104684434 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105693065 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074369315 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070963672 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091435367 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087700297 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114595974 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082332795 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111321941 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134887823 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070855324 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106430628 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066809687 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111391405 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106536999 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070395456 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068306818 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093138727 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0670536 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070725618 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112729985 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116893948 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071265873 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106258334 seconds)
  done (took 7.315357132 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085992688 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118077834 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085163811 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108662173 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067423321 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068672282 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090752281 seconds)
  done (took 1.595547768 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068859411 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090393092 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113003579 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09075171 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109304441 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088588775 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100627687 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068372677 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108444397 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069516719 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089657757 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128090018 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070149432 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098274098 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092612783 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091056574 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093530758 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091076147 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071523477 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114704357 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07126449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.111476651 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070084839 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068698922 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105866189 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06859529 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138814077 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073639361 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092700181 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07234215 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067058979 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139924898 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105574839 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07851141 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068243552 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10598113 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084107164 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089167121 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085457113 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09632425 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08303348 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069817723 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094210921 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067896247 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095291091 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078739331 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070226683 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092654475 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071428828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111945098 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06964993 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082958013 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09218096 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073080682 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069641163 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09695635 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078758318 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092215164 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089274622 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070060994 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107856328 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084654101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105659487 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085372176 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093921755 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083136868 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105150208 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072143742 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070795556 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095354322 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08545489 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089676508 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070164245 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079256003 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093237472 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091584159 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114091295 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07048729 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101724132 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069217273 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069372853 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091498846 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091571774 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095009934 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069220164 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072627531 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095020197 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067316237 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067801201 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095068761 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067515658 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09280888 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071914984 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069132474 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094163543 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08517353 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.0926938 seconds)
  done (took 9.423963023 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069687466 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070244305 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093507952 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069275957 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06967223 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092307368 seconds)
  done (took 1.446824711 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098917362 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094120132 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083320801 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097668914 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107806016 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10700975 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084038967 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106630343 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087549501 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103897409 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083236152 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106764429 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089900051 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097809361 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083657479 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097093555 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084291127 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100843645 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080647375 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098244389 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089048198 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097948556 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075790447 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107734349 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072815953 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074845901 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101602422 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081128211 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103810464 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084503299 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097574593 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072738592 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097568958 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083940017 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106376354 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07389052 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096907859 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073700354 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10188407 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072696882 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107355377 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075101832 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080336999 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095942262 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107331114 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073992564 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073284121 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100809002 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083466946 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096585029 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073916517 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09717182 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072633578 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096593198 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073384234 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107096978 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073376728 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108019422 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074664442 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073997104 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094779088 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07211372 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106038714 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072948303 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105301086 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074165225 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096338237 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075196178 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09826766 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074663036 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0736972 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094562221 seconds)
  done (took 7.426765721 seconds)
done (took 28.178433491 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649400885 seconds)
  done (took 1.632486629 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.795735517 seconds)
  done (took 1.780708526 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.341992932 seconds)
  done (took 15.330527624 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.613125379 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.760828059 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.807004052 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160048901 seconds)
  done (took 3.323771397 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.871460274 seconds)
  done (took 1.875203567 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235124816 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224456908 seconds)
  done (took 1.450856566 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.74751771 seconds)
  done (took 1.74697335 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.300947086 seconds)
  done (took 2.28894729 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320230606 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180828513 seconds)
  done (took 1.498380409 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.52389358 seconds)
  done (took 1.519219716 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.55239947 seconds)
  done (took 7.552745086 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228902484 seconds)
  done (took 1.239568121 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267450049 seconds)
  done (took 1.266118134 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.090022069 seconds)
  done (took 4.091756239 seconds)
done (took 47.589993855 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078718196 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083940454 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105080943 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081071906 seconds)
  done (took 1.345272002 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078812255 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075298289 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101435451 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075151797 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101841569 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074898456 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099835538 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078588791 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074181005 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098573392 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074898501 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097078761 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077490743 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099470138 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072279633 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077720111 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100519962 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075013841 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100583328 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07527396 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072562815 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099447002 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079013787 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096677721 seconds)
  done (took 3.066296787 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078381021 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07435889 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098438759 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073516019 seconds)
  done (took 1.327320456 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078527871 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116562431 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089659924 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10191024 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093473557 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111589188 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072055966 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072108499 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097130121 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079502916 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093143068 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099233774 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113393612 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079355951 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103914991 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06733651 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070230189 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111483795 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079963464 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102561338 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072484283 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082479664 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092791948 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091917611 seconds)
  done (took 3.181505893 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078928313 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105795608 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102496538 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090911543 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116908356 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067981009 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101226623 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093395321 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149431543 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067254919 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095730077 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06794225 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097637965 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06699134 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078543146 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132618506 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113525231 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093759499 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09823343 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090467893 seconds)
  done (took 2.92068988 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076321975 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071462607 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090182109 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070161553 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07806434 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096701401 seconds)
  done (took 1.492483999 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069035666 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068858176 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091807433 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067838995 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073107569 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091693661 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067163913 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068372287 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091320665 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069023088 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068689294 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090182842 seconds)
  done (took 1.926195922 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.430589196 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070006942 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093463102 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067185101 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072499134 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091277767 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082101428 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069064253 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115693156 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068414549 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091884016 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069823567 seconds)
  done (took 2.333832533 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259141364 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079093454 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322086468 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168614726 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141474683 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155620411 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105515585 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140322465 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197389337 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138375351 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200117212 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223704467 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13437588 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16703302 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11605095 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132093385 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185156497 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220440791 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106528972 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222413652 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205471379 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157274816 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180704434 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128872707 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134652896 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14966473 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074282631 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106645271 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230811475 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161304985 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199890361 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137855021 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122594512 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206027941 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224568916 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193918808 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163310675 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086312846 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156965822 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163370845 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252581429 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114109351 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192758146 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133228261 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106125568 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172151868 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146189687 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146692197 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136672817 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115585856 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173179114 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238884645 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164950207 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112398774 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136932463 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14224349 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144825343 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106026793 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265591366 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19366321 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158853167 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097569878 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098886669 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210846609 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159530799 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141966985 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154121788 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12081158 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167355923 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210528985 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146288515 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173797106 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179955812 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090437647 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146248692 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193655007 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155749073 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22746381 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155016723 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07566493 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151744771 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129471556 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108110416 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144787143 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101601273 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20701825 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125326936 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138806642 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139033283 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135855236 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136854364 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19463813 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200548972 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130731844 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067653426 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130520924 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149654775 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174825005 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113940218 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135839642 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146979534 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080986618 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190111468 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077253448 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151993736 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104543758 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152214376 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162015111 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077763376 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177872308 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10344433 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128223669 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162692681 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218219618 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116091124 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084565232 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226688375 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155509884 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131969647 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174829649 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21390995 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103852512 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129974625 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203919672 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241481422 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091829839 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221336574 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135408971 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086400791 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113922253 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154138404 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139597655 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149283269 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109031767 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153107175 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225621336 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077097128 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122487407 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166621827 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083484011 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107662208 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140746657 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128165028 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097366686 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126944484 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133483814 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194184346 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154956315 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109808937 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177264188 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100755483 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223762458 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116280793 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132009615 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131213037 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071840997 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.163796879 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215837921 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082011061 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224478295 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153293167 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131402253 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147428376 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084656596 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193042334 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080560765 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096586245 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173514583 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137592889 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13789373 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183779899 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129982825 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154186564 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150888251 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161603618 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18534143 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16172533 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133506163 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089841878 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139782533 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152681677 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099481264 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120354889 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084290342 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130050218 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122777633 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086267608 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194902232 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155563323 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125620094 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115599919 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123951687 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204107422 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079044565 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159296106 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146070665 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120547783 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20979242 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186298153 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164051522 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126067087 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198815994 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0735841 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10050523 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092650311 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154881352 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109682862 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085760871 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169141712 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178747156 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157238273 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165367544 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137701165 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149180594 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211419445 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073176955 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143833148 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179159567 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15287755 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154910575 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112993552 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100867811 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199740934 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136331151 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244695892 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144474112 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152746449 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180858322 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130699175 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106416211 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108084943 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190381767 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133793902 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181545846 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127326069 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115220978 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138192731 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082804528 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131080147 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154853839 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149050341 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18831753 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144453414 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160240185 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079028021 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172930226 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151977392 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150154533 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067087141 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148019021 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2213401 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121824465 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145918162 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185532093 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106216664 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152601706 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23328686 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17509361 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111508274 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137262461 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148858331 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158131349 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147609237 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172887148 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140035064 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164348483 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139255842 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087657642 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115138852 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12548088 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13466383 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097025359 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138753861 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.167627173 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09638802 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159874691 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138765286 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137887523 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147215419 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125353078 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092738098 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124315223 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234043509 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151562254 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23258962 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128185468 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179478646 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224330014 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077588198 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106550306 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082619341 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197058939 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086370059 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163578024 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123856341 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132414358 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155623341 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172896117 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123524353 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070441619 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138161876 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164211412 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138527416 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126265169 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133239001 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221396294 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106044539 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107260486 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15395248 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107176842 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129621559 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233355548 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08898363 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099321261 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103147795 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083468129 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158206615 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21233579 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109845376 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.129542139 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14421982 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149121702 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15762113 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127468223 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126541584 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141280872 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180334544 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156763441 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117866895 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141078829 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158102921 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214139327 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133866572 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097406903 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231015974 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210349216 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219399695 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091561211 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143679619 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143579813 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137501384 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195350564 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086242459 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225939805 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084591416 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19238559 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132486987 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120378875 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157864923 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099015264 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11645725 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219578875 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148950006 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084353497 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106476856 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14652258 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151687315 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135071871 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077441167 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19428258 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075144935 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166299693 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226972885 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083272008 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133613025 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123521066 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10925413 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136817702 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10578479 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113902996 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14324334 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205281348 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117019677 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207218645 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171949504 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142094722 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193242567 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101893013 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662351219 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105631027 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18534734 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147303447 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260640291 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099981205 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146662995 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138277126 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152184329 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197695649 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133531296 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178962885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18650785 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150271222 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081678483 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130422418 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138203722 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119041577 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134960008 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143144145 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144270595 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.102914116 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17387617 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156171718 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084764822 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123361009 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21630319 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147218567 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174827109 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170739829 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111581031 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147534773 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169349281 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107334231 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151075438 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213817631 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135961151 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100551911 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108400221 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133100582 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230673391 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075699642 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220168381 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153602137 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138108254 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141919692 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147043707 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162101976 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135407764 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153567993 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122481208 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139174545 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143584172 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111449555 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079334943 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133295487 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1405264 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126439986 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129719334 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121448259 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207242523 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073608185 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12473887 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130208934 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174870744 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236520195 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116382554 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084930032 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146934049 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142211467 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144528879 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153002021 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10896973 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084587663 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108755598 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116523589 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134446551 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144567284 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130435119 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139635887 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225412953 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086799537 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251874723 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122568084 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132380565 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071682649 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082355302 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123512075 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125244297 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136128496 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125381718 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205560109 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124130666 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118508822 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095210468 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100477432 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084812481 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157655431 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138421084 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148991763 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125924387 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.09010419 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136866506 seconds)
  done (took 71.280372283 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162719136 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105500529 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117142371 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172425405 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144726585 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237855742 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181940983 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223619501 seconds)
  done (took 2.437223546 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069781127 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116601487 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102870695 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116356747 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09028846 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070103904 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293576297 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110482059 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068692383 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114081536 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119034051 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091618108 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.471592897 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067213802 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09524445 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084837263 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068702393 seconds)
  done (took 3.233625163 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427027541 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615237561 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450975479 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074418651 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.813428429 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10726734 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.212120937 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160498771 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091288856 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.422274425 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728837954 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147049303 seconds)
  done (took 17.3424534 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075578174 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070851114 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109664218 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084678108 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098984382 seconds)
  done (took 1.533249698 seconds)
done (took 114.418756538 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081289128 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.346524712 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054784455 seconds)
  done (took 1.525154138 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083989179 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085513003 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11020505 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084348588 seconds)
  done (took 1.465395148 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07556488 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07778913 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110698657 seconds)
  done (took 1.362625266 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278007029 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16546208 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090030211 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08358849 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079690695 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105169003 seconds)
  done (took 1.365004557 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073612147 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07649482 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099541338 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077974878 seconds)
  done (took 1.41650915 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077501964 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053744637 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056853476 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082108944 seconds)
  done (took 1.365933193 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090563445 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106683388 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081644039 seconds)
  done (took 1.373234718 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108436152 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112432818 seconds)
  done (took 1.31870398 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083007668 seconds)
  done (took 1.1758595 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093157781 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140786697 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155719954 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136722516 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165133831 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136455249 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087065037 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114687606 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103947829 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089457692 seconds)
  done (took 2.32054658 seconds)
done (took 16.394088311 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078516203 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393793627 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361699299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117383652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670612692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357888445 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.025297439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118843639 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121156908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094457249 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084911668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676226626 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.996039474 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350883181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982676536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.420291487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676311208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069274327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093384767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06906819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.987684881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094177013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068892436 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069381067 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675764161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372233724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094440641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.42019084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068862685 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096356401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356283125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094985252 seconds)
  done (took 16.243897451 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071479489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14372571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074103223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084393383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096363441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070850191 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098038495 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070112966 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152605377 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069283522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111588172 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068815867 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098096055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069373202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088515423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094855752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069905808 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069500827 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09429733 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069658568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112829287 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068797329 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069407152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095011936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069639683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106412945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069482182 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069510956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094140131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07124102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09805941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069790585 seconds)
  done (took 3.862180985 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11600027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152501874 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075361603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129266221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114469706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096947603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171523426 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093354137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155611155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069493869 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111494982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069716537 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127687866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070229215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114210396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069353495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071001225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094702525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069102163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095593495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088285593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093860043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0698358 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070533448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095217318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082658443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094541886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069674556 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069484787 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096492034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072825442 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095082425 seconds)
  done (took 4.174306836 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073518407 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076355448 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109633094 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084810699 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097156429 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07376644 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075005997 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09673541 seconds)
  done (took 1.791064795 seconds)
done (took 27.172201145 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079524723 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071489302 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100233192 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082442832 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100607014 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07984078 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069272641 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101938326 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07818168 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074495295 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103326878 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068616484 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098961905 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069208992 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075707046 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095455034 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080733125 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099030319 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080694793 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080966543 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097360908 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078568075 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101402421 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08071122 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106317496 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080744171 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084637278 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100990939 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071268389 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097617933 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07825089 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085091536 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095907964 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080530551 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096116702 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069517899 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068932434 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095089526 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081182363 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101022574 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072254215 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101145558 seconds)
  done (took 4.711227917 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08925506 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090368036 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112417741 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071981594 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09822227 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064703562 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116820221 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.071709404 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.094704823 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090694787 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057514525 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087215344 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072282281 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062853078 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.094731603 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059093058 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060755931 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084219585 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061386875 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060661712 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085500379 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055561866 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061712484 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064759294 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083339187 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063539711 seconds)
  done (took 3.125988235 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076415383 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085670657 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115698948 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130484893 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133560381 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079640046 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105436568 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089442614 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115065096 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068415624 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072772592 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124817417 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089945846 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101321572 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06949828 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.1146647 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083634632 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070414002 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101402368 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092377528 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112470516 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080395965 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122324483 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083573807 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068623656 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097373471 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072415124 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109243212 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07355901 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077574805 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099169353 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072460835 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097214001 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07992725 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072631325 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096973636 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091799166 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104485773 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08010443 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069237223 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098302942 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069754239 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115070162 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112785267 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094765844 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075465135 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076288546 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103377045 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069132755 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112974481 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077981459 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06830656 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098199043 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068338782 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094992691 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082837501 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070866063 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097658222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077963657 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097423889 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081361022 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072009524 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110165976 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068167283 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102950455 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068189434 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069363098 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093910119 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093592836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069981436 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.13703156 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070062809 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096428656 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077358448 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103409643 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074758461 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068885006 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110593761 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07874766 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099724577 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077178509 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072194891 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098226909 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091324961 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098081673 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070755081 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070424807 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101644183 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072209238 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09647688 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082115164 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070060639 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098393088 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085607417 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094759445 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07040532 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074869604 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099955422 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068451507 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106925645 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073576812 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069523591 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104019883 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068771749 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098428417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078309392 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072784293 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094790219 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073627308 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101386118 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070114165 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069981257 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098842342 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070813476 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078234215 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100692558 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073204147 seconds)
  done (took 11.413371767 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.191644264 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185645554 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071691397 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178559441 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076766116 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107704212 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179313884 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096274265 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097409221 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069552488 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069403669 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131156575 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124365407 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108569148 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105867581 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.078700734 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114104074 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105654045 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180955133 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.17582145 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116282391 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077501413 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071888173 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098217279 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071332047 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105763071 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08550105 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102670901 seconds)
  done (took 4.308192822 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08306902 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.138493858 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075576199 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094139547 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119859467 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06945755 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102059039 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070930309 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108923782 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080754021 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096356558 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074453299 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075373102 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105581898 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070542966 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106931835 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079359061 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07051539 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099197964 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074608136 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.108941876 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081971227 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100132155 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06801295 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07565905 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095682351 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066121234 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113646359 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068779459 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120255001 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067532152 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074727894 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115290958 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070192906 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096132507 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073050332 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071448965 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099742003 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070660948 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068674154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094684144 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059158246 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067991247 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108523494 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076550261 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08812401 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07506889 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101965728 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074545545 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067052316 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099728587 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071542418 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072207007 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110537795 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074161562 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102465322 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074346091 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067196704 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104943834 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072313529 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065688932 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095914627 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073677618 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096107392 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077029733 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073197777 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095928582 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07282225 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074515748 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102685847 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072704111 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099007479 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067246164 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071434615 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.10196637 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07375661 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073585715 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094490126 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068774404 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097014296 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057528126 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068793809 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055344895 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099528851 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067361005 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094699897 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07250973 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074573749 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109047487 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070884264 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102686369 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069761013 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068559803 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098968935 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065008376 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099364338 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08756431 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113558445 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069359845 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067111574 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11334987 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073289937 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095869832 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058189533 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075768877 seconds)
  done (took 9.971718959 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097486088 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093672292 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097979398 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084881871 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124731972 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093952887 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104434539 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075432125 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070658629 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113133893 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069318127 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10571349 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068811371 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078023338 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125552856 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077420234 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.0988179 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078904455 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073038544 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137244743 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084764507 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111049996 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083310112 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096980073 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074087258 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081225394 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124929246 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082108543 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109025093 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087662998 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082320391 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124333715 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088182936 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100336423 seconds)
  done (took 4.340679977 seconds)
done (took 38.974633974 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.206732399 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.398415131 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183965609 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.028660943 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.227087248 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.209927238 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200637407 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.186774459 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.272866901 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188291203 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.408165697 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.842972808 seconds)
done (took 58.4870481 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.220091251 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.325184865 seconds)
    (2/2) benchmarking "String"...
    done (took 1.459836206 seconds)
  done (took 3.932276806 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.545612106 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.196216411 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.474019425 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186100277 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.185395763 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.64253798 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.732218921 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.003166223 seconds)
  done (took 27.551047486 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.187200212 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.532530668 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.367917378 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.368973685 seconds)
  done (took 17.590606529 seconds)
done (took 58.973553258 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.219353629 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.234409342 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.234193459 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172831963 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290639077 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.20440731 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.504888623 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.297179679 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.191751906 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184751091 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.188351257 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.210782887 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199111925 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.530365849 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.189288049 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.191117452 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.238731503 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.938302009 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.555668801 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19824299 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.191266567 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.260759285 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.191370758 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.192239437 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.250269554 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.186451726 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188650893 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.189140561 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.253822301 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.189557461 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.269881826 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.661914098 seconds)
  done (took 190.133502264 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.187207733 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.265794075 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.369622843 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.228842755 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.556613714 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.386447463 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.323471515 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.757002286 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.205613107 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198690939 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.486122046 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.188707444 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.531620602 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155885324 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.196786884 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.288044202 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.369775619 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.527831288 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.207103446 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.465816007 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.198640123 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.406829976 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.314900722 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.423786146 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.22147656 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.204834894 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.216468468 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.201780871 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.381720901 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.276974839 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.194871776 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.188200191 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.734188005 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051346236 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.191916994 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.201777249 seconds)
  done (took 149.43916845 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.456146123 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.190333762 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.186713599 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.189029327 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189198834 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.216263591 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.18883788 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.692418652 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.694185642 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.716132186 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.942005711 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.24743679 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.405661027 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187901029 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280273214 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.202313223 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.190788301 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203971591 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.21558914 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18962718 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189737662 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.679904575 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201908012 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.562885691 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195542559 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.189779189 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218824355 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585153029 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189523758 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218402051 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.50282444 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23233784 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189933015 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.471243778 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.284851188 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295590216 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191268744 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216973797 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.190177082 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.454839243 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190896993 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188240773 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.190787719 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.193270601 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.749418748 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.189117528 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.693433656 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219805817 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.096452384 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190015322 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190034715 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.617107277 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.582624154 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.192678604 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.191402726 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191894003 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.191649585 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191852263 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220640372 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.555676456 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.285268285 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.19153691 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19154765 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218372575 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.189544726 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.244811906 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191238331 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.611475367 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.242746956 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.295877977 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.672242757 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188926333 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.189551616 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277782027 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305490941 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.186960128 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19097386 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187085798 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188411346 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189053203 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.290681412 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.186472817 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.564810814 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196072473 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193098693 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.245493804 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.281409225 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188764226 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455135015 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.190108741 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189818968 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867183081 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.27959961 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.18969134 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.189954926 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188939841 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.56119635 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.68539556 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.379827084 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.19466277 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.460158249 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.190339119 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.577646604 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.664955933 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.785876099 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.193719995 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293625743 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195061276 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.193775639 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.19159855 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220468392 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.193773148 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251396059 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.192913846 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585976423 seconds)
  done (took 343.70882436 seconds)
done (took 685.868401779 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.871920372 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.848091804 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.955765974 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850590078 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.82459711 seconds)
  done (took 10.482962398 seconds)
done (took 11.61874977 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.36496424 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.369582556 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249868372 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.370246897 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222066571 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.382974595 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.342672867 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.211010592 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.286663172 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.261480401 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.2924089 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240311965 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218919331 seconds)
  done (took 17.948509302 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.476425986 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490183743 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254458305 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.483592323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233757109 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.494051823 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377326843 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.387837336 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392311491 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.20847575 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21044783 seconds)
  done (took 16.146698016 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486971297 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477545004 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260145154 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487931204 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237686508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.494862165 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379090508 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.386386604 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.378083982 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209871521 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207416228 seconds)
  done (took 16.142032795 seconds)
done (took 51.3745397 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.202792023 seconds)
  done (took 2.339985628 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.232937458 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.39855333 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.216460631 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.205281017 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202162726 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.203257592 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.204662547 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204464372 seconds)
  done (took 11.008015508 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.203193228 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.205613764 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.203707683 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.206408175 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.199932344 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.205539501 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.20577977 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.204417023 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.203541763 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204151994 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205520248 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.201945252 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.202717759 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.202830526 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201640319 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203961202 seconds)
  done (took 20.396003934 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.205387256 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.201905498 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203369241 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202556032 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20036182 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.204902954 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.201990754 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.199861829 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.199577752 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.204032209 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.204673205 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.201097381 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203859042 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201892071 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.204645157 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.201954597 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.203702448 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.202100301 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.208630975 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.2041641 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.203372041 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202433145 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20354558 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204872656 seconds)
  done (took 30.012570901 seconds)
done (took 64.891443909 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.110568009 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.729640851 seconds)
  done (took 8.976683005 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.206540238 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.208988928 seconds)
  done (took 3.55715713 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205980917 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.207645116 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207642039 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205199138 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.207653612 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204125623 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.207420444 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.207139826 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208161315 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208338452 seconds)
  done (took 13.207789461 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.207533154 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.205208559 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204252406 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209864995 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207872248 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.20463083 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206782367 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206333474 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206626192 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206087776 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207509458 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.204868317 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.206281167 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.207040956 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.208308218 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205324447 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204953019 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.203273989 seconds)
  done (took 22.853333463 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208321897 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209763718 seconds)
  done (took 3.558460981 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.207195787 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205265405 seconds)
    (3/7) benchmarking "month"...
    done (took 1.205694597 seconds)
    (4/7) benchmarking "year"...
    done (took 1.207747145 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.203821519 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.2068394 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206786786 seconds)
  done (took 9.582358041 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208884247 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.379244547 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.463257546 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.768050937 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.210406503 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212601665 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.070065218 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212785401 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214619317 seconds)
  done (took 13.882869287 seconds)
done (took 76.757596719 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.196529075 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.19970354 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.996180239 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.203572155 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.216778925 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.497948564 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.248756088 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.318089485 seconds)
done (took 37.017882473 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.213027485 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.88617152 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.933914025 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.204986819 seconds)
  done (took 11.169759945 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.190152465 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.077329976 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.192412759 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.184004719 seconds)
  done (took 17.78913262 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.780308014 seconds)
    (2/2) benchmarking "read"...
    done (took 1.534280532 seconds)
  done (took 4.456665818 seconds)
done (took 40.771586129 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207238212 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.209186726 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208745088 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.20489698 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210301007 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.208275999 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.208076971 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209894469 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.211263768 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.210157666 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.209455091 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211943189 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20884492 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206427489 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209637936 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205908171 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208567558 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206669662 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211524822 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208352494 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210848593 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.203638595 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206445984 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207532935 seconds)
  done (took 30.143263026 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21132674 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209191982 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.210818535 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.210487053 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208590551 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.208948776 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212632462 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207333277 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211540626 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211760073 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207319367 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.20854734 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211063359 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208461456 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211911101 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.20929481 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.211806716 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208635018 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211337907 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208489184 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.21113205 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20853369 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209046311 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211885888 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210468301 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209523225 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211666742 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.20989012 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21231858 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.206857093 seconds)
  done (took 37.444463693 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215592488 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219856717 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212721074 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212749503 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212541818 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214724782 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213346231 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21128996 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212646603 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.212609201 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212652905 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.211916246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.210546004 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.212992521 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214820983 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213861475 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214322291 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214352483 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213740744 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212341931 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.211090761 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.212837525 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212184821 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.211954475 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213136687 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214103029 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.212639816 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21369707 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.213483533 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.213096957 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21362917 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212168591 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214099556 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213012754 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214515179 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212796917 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217492146 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.217046267 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.214025341 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214478841 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21316689 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.214688565 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213793634 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214596451 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215577086 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214977138 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215512346 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.2128573 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.213723732 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.214980279 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.214731243 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.21355067 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213953364 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.213880856 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.212624725 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.210883864 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215703706 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214062012 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.212358556 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.211525782 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213474268 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.214190627 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215872928 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214784272 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215148822 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.21520765 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216132981 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214101499 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215989333 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.216069956 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.215248475 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.214054289 seconds)
  done (took 88.548654802 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217452526 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212364325 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213880913 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212138543 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212970495 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216711859 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213843961 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215361716 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21115948 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216520362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214186481 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214527164 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214507315 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216441891 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216500359 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213883351 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.214708037 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213884092 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216357397 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217004275 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218561331 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213765824 seconds)
  done (took 27.879757902 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21619459 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216314846 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215056559 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215910936 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214922149 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217791192 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217523117 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216038606 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217087128 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217028026 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214940914 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216197236 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216406119 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214128941 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214361822 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215755856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217400415 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215486618 seconds)
  done (took 23.038889657 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.214106343 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.216757329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218587334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216548938 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21416671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218598232 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216881619 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220487382 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220311678 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216587029 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220680682 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216079039 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218835929 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217550277 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21787441 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216361598 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219512351 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215544726 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219262312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216846487 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216913599 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216642722 seconds)
  done (took 27.940448911 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218025051 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219811564 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218016833 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215739922 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217803817 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219514871 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220078303 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217295599 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.219113618 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219182885 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21724664 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2202909 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.216921063 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217779738 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.214102864 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217766817 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219575129 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217326251 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218196329 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217784218 seconds)
  done (took 25.5175757 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219156075 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219268407 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217655783 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219745575 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215566181 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216578065 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218375163 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.216960702 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219610165 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.22018767 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219634791 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216185215 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218436433 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.217070079 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215978993 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21655671 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219664005 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217066701 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.219156735 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218166417 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217389008 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219749404 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219370358 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.220219656 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.219990455 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220500483 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217190146 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222601724 seconds)
  done (took 35.274231033 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221686067 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223130548 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.218736933 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221261568 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.216744784 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.216711981 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219775349 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220075589 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222890014 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218758216 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.220139007 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.218798694 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222196327 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222428555 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220241654 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.221479954 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223304233 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22120028 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219512368 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219726734 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.221986434 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222713035 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222294012 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219833621 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219781604 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222032675 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220633315 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220267396 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222998352 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220309634 seconds)
  done (took 37.77963783 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242153233 seconds)
    (2/2) benchmarking "in"...
    done (took 1.240949308 seconds)
  done (took 3.641467186 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.220365122 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221301681 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.222554739 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221176679 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22061609 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22351761 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223572164 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221070733 seconds)
  done (took 10.929482554 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.219438289 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.222018871 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.222248827 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224226147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.222051246 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.221937336 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230333736 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.239982776 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.22382385 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.222728896 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.226565963 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.228251573 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.225753573 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.220983336 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.221070033 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222683494 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224323908 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.221124009 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.220928013 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.223204617 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221408139 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224999861 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225187477 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.220764997 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22259093 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.236693413 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.229106729 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.224751826 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222461361 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229351641 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.221352694 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219623626 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.222679714 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.222094881 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224847782 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.223250596 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233893348 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238134415 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.231108688 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222254783 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224622322 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.221266704 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.224077103 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.225193513 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224718219 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.223658218 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.225867957 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223467792 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.221290529 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.225104577 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.230029943 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221934623 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.222236028 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230597294 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.225048936 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232578444 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.238816581 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.225588646 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.232967682 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.234876575 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.240017707 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.23154218 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226590243 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.224349474 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233766652 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.246831455 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233198758 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.240595444 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224565361 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.227072092 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.233241948 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240198661 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.234465151 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.224729577 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226029553 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227937811 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225105392 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227462927 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234270023 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.245621027 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.225212578 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2246098 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233548997 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247720441 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.224805671 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.225405651 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226248299 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.225749809 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.224967908 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238814557 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.242720219 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.227739857 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.224494951 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.224081022 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.229278127 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226828359 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.223192959 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226704202 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.225709342 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.22974565 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226371182 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230860814 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.235445122 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227116693 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226945601 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236073471 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.228832662 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225499381 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237491914 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.230148253 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227821263 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.226184061 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.234406454 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228782887 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229783143 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.23610582 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.227585882 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.229118016 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.22847032 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.228939438 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237890537 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.25570856 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.230734968 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.230900614 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.232456605 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.239002234 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228837849 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.233714078 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.230520748 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.227975873 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.2276481 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.230311369 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.230882193 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.229192911 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22740605 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231146949 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.228326235 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231418215 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.22914507 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.230027684 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230799169 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.230119707 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.227588936 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.231532731 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.228394375 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230361463 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.237283933 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.229035078 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.230903082 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.229695981 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.228511459 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231691207 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.232135975 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.229589133 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.230325765 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228777853 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.227931114 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231506372 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23235884 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.231838073 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23305804 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.230506572 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23361005 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.229503887 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.234049082 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.229494779 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.228649165 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.233193235 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.232909954 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23055437 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.232449762 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229710391 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.232306478 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.236956856 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.232726525 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230935746 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.233306354 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229219386 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231634829 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229998186 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.232980394 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238138999 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.231340704 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.238133593 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.229496393 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230412128 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.233120959 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.2313643 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23043512 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230752774 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.234043132 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.239145057 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245925596 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241542065 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.230115159 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.237234295 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.232478823 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.234465787 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.237674608 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.230987457 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235683426 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232008511 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228259504 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231477099 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.233708258 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.232199601 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.231488935 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.235406048 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.235699325 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.23325731 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235855875 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.232905907 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233507158 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.23089144 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234630397 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2310213 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.232031672 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.232577709 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.231912443 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.231458114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.235914282 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.23204627 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.244128733 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.233059665 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234736744 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234218929 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.232567675 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.230543064 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.235047655 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23674573 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.233181489 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242577747 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.249611768 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233706994 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239814447 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.248457284 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.232205665 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.236407241 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.235007929 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.234737276 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.236450592 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.244953257 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.237980602 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.234110652 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.232689813 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232372562 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236580646 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.242758444 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.234591305 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.233963437 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.234918116 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.237184481 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232410242 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.235886477 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.235124072 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.234713798 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236567375 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237981207 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.237339003 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236473989 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.233008475 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.233881244 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.233326159 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237395751 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.240866192 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.242464596 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.236090598 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.238603074 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.236559564 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.240194279 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.234014888 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235358177 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236197195 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250313525 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.24364894 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245617231 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.238724679 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.238093834 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24318612 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23575675 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.239813807 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234919133 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236702813 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.237325491 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.234405642 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.237198157 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237159257 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.239164436 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236930035 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.236853185 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24398291 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.239497452 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.235903719 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23492084 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.236714535 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.23737191 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.236871247 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238337698 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.240155468 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238437161 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.234452167 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.235787102 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246048337 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252658163 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.238313194 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.235106306 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.235599164 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.238009259 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.23662012 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.236105822 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.238756617 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.243835819 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.240117073 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.247450133 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.237763489 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247622888 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.236474405 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.239700765 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.245031678 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.238124465 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.236189899 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.237462019 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.236358386 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24602116 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.251303054 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.23629656 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.241478344 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237632617 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.236175006 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.240124404 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.23882113 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239864273 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.237571852 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247368928 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.254877879 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.240493079 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242127094 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.23745446 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.237492099 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.240009131 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.235114757 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244562252 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.239526949 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.23740432 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.236890025 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.239289158 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.240051668 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.237844644 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.240233334 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.238347442 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.240193788 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246803063 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.256623524 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241821522 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.241749955 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.250957672 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238542459 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248510769 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.25386184 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.239618884 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.237883208 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.241661845 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.241094367 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.239832106 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240180097 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.239217412 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.240501171 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.245304558 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.238543889 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.243574446 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.241054564 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.239613988 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.239257096 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248839202 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261385418 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.239831599 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246954078 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.240639365 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.241084292 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.242733348 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.240399066 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.238877036 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.244242242 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250466669 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25107967 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.242976283 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.240588826 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241776163 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241039652 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.243346313 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.241146737 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.241132354 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.243666232 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.241601716 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.241160313 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247733412 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.244941451 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.242851472 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24302002 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.242416054 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.253953747 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.242556438 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.243670688 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240077378 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.242809958 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241943166 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.242856818 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.240923128 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241692877 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245390443 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.241209221 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247467716 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.249231489 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.244439516 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.240613035 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.241071592 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.242441034 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.244100098 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241864866 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.241141775 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241467432 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.243801878 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.243135127 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.244794453 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.239510024 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.243231948 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.243899951 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246638248 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243931714 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.249797135 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242689387 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.241335104 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.24397952 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24639125 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.240415708 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.243452087 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.25364741 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24508941 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.252509525 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.250435221 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.246900562 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.243832375 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245001405 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.251125372 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.240672943 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.243807172 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.242702839 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.247033442 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.244298675 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.246340618 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24343602 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.251862749 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.244136094 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.243918498 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254833995 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.261891236 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243204913 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.246934772 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.247648544 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.243374249 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.243629134 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24600269 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.24191694 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253719924 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.26454608 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243004837 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245356099 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.242541823 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.244380573 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24686475 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246949078 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.244466454 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.243712109 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.243915891 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244126518 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247296483 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.244989762 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.243476461 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.244817064 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.247190485 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.25011607 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.24406629 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246365219 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.244945905 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.246572943 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246386104 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247355995 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.246405567 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.244997757 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.245617068 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24447887 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.247953998 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.249899391 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.24669626 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.245698139 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.248706039 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246258499 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248178167 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.255378232 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.255856694 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.247234563 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.24467339 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.245967093 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.249000143 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246043433 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.245092083 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245519361 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.248431692 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.248506034 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246160402 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.248712836 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.250688818 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263563951 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.264652163 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247469646 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.246265706 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252071603 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.250266433 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.248155747 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.250646766 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.249820299 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.250746798 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.25421054 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.24731521 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25802386 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262945712 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.248873537 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.252039223 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.250371152 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.254412868 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.252497557 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247728946 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.246995353 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251711689 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.265817001 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250381243 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259118086 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279323634 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.263375598 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.250901121 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.248671926 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246448907 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.247598805 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.251878494 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.248246422 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.251216207 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251685938 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.248474892 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.249163502 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253988523 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250586994 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.250737149 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.251927492 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.250218408 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.249918449 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.247683893 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.247896304 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250882152 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.248793184 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249597009 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.248453404 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.248151166 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264760691 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.259745394 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.251456894 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.24756451 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.249701278 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.253909088 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.252540123 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258970091 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.259184877 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.249083435 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.249829336 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.250413451 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250996766 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.251385126 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.251016581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.251547896 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251412073 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.2510773 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.265540916 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259117608 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.257133253 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.249625988 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249680851 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.254117122 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25195257 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252045765 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250539549 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.253246544 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.254316494 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254295376 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.255740862 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.255198752 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.255890009 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.263733048 seconds)
  done (took 739.738156101 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251231352 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252229633 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251624904 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252587102 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250921981 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251511 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252320734 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254693626 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.251458293 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25253062 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.252638633 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252292176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250681782 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2507118 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251048138 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25097191 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251862109 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252988715 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251678506 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250901341 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25437601 seconds)
  done (took 27.481250112 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.254066742 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25068133 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.253949893 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253582512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251695468 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254151504 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252335584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25442526 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253146532 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253309369 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.256182942 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256747642 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.253857958 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.252695076 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251682126 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255335148 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254959246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253387658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.255209202 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251310326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254964477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252221085 seconds)
  done (took 28.772959257 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.251874748 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.252847349 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.25319637 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.252915526 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.257084777 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.254463679 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.252216045 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.255070583 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.257041939 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.255448533 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.252524953 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.254531759 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.259980338 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.259438836 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.256282991 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.257668067 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.399286917 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.254117023 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.253710448 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.252968574 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.255258969 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.261930519 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.255412 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.254979307 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.254597182 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.255620532 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.257737667 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.256255964 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253875855 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.255318205 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.257740239 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.256655035 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.253553484 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256714847 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.254414524 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.255327473 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.261111349 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.255489509 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.254751266 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.257982519 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263776206 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.278091532 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.255398842 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.264939134 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.258052898 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.258159914 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.25816069 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.262521449 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.25559977 seconds)
  done (took 62.915198213 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.256874154 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.257575253 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.254786302 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258373896 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.258046996 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.256695377 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.258110652 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25682325 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.256090651 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.256006524 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.258240619 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.255236238 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25583307 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.258382389 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.258466261 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256170999 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255300913 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.256445447 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.256378564 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25485828 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.256600047 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.259082829 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.259326154 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.257626718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25853072 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255721393 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256964727 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.25980647 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.256596386 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.255770756 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.258844381 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258018848 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.260387246 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.256659072 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256354387 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.258107657 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.260152112 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.256632283 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.259386491 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.256338017 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.258773554 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.258945648 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.259994715 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.259990455 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256399037 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.256281699 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257737866 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.256857121 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.257900064 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.260104996 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.259883868 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.257632913 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260011143 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.257543356 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260481969 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.26007395 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.2578479 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.256316841 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.260146713 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.26124592 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.257559843 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.260105278 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.259161641 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.261884784 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.262634022 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.258457019 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.258559331 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261231467 seconds)
  done (took 86.74101652 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258811555 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.258483109 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257481028 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259168431 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259141368 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.257876458 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258920519 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.258639149 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.259195917 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258985508 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258749946 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261327985 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.258049179 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26029863 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.25881028 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258224041 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258461507 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259326952 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259153305 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259024619 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.25828718 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258796056 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.258371432 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259398052 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259756973 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258812765 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258049953 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259251612 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259548517 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25970282 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259800952 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.259027889 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.2587109 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.259721072 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.261108223 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.259928548 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259279994 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259349528 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.260222421 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.259835718 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260167942 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259494719 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260182518 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.260761509 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259779783 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.25959858 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261281555 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.26163494 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263352441 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261214163 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.260571869 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261299817 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260595935 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260273636 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261520572 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.263690111 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260002969 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261842348 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260039679 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260139913 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260969673 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.264433206 seconds)
  done (took 79.304855195 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265295051 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263903035 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.261665541 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.26198061 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264250939 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261923491 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264839678 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.26499514 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.264541903 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.265076178 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264810029 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262025588 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263020393 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264825995 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261244015 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262647907 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262016914 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262769972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264363235 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.261129984 seconds)
  done (took 26.46487295 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.262543975 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.265378437 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.263436452 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.263431449 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.265794448 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.264050072 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.265643878 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266141603 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263398983 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267088055 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266173546 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266490028 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263952244 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263654986 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266984077 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263760951 seconds)
  done (took 21.436294433 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.264527193 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.267134008 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.263863642 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.26346949 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.264079061 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.264270228 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.26652583 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.263871864 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.264422935 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.267586949 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.266306516 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.266552922 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.266954702 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.264172194 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.263148851 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.267440619 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.265157502 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.265815559 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.267083394 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.264996028 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.265564703 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.264717029 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.26768207 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.266834812 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.265089618 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.265628896 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.264279203 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.265276061 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.264974336 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267893994 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.265331385 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.265247189 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.265174042 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.265488782 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.26502864 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.265151414 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.268881891 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.268744174 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.268198918 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.268279241 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.268724055 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.265361513 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.268291775 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.269808168 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.265967255 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.268437003 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.266766815 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.266968557 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.265937796 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.266942909 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.268141724 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.266529649 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.269491524 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268853633 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.269204149 seconds)
  done (took 70.847414815 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270475092 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271200943 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.266578664 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268568825 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269971329 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.267854829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268947187 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267591393 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267245353 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.271749808 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267194719 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.270441741 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268398016 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270131732 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270063098 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271019518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268865724 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268744084 seconds)
  done (took 24.050224819 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.26770358 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268723056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.271133273 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267165724 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.270011987 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272215172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268222161 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.270393539 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27117976 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268777053 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268443166 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.272941164 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271039327 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.270161467 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269510688 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268110014 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.270768468 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270816821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268437965 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26820842 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271154359 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271053299 seconds)
  done (took 29.141792789 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.267537084 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.267485631 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.286186978 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.313800971 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.298558989 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.27024712 seconds)
  done (took 8.90813247 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269649703 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272210489 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268684468 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272368261 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27234188 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269777502 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269704349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269954493 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271882519 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270306085 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268460357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271594769 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271520188 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269363615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270776242 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273398833 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271955437 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270780222 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271442554 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27272492 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270934025 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274089671 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270157951 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271513597 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271066969 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270728765 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273344226 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271231465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270719126 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272399871 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273714253 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271038924 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274579745 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271600631 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276595369 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273551217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271787173 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274856242 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275590751 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270915474 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27436697 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275637936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273535301 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271198624 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274326249 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274534935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272221885 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273046523 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274221094 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274779437 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275051684 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270859031 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274119638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273974491 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275144815 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277948405 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272721769 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2717136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275349857 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272684485 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274096435 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275025368 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275138496 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276260929 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274453514 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271875701 seconds)
  done (took 85.203945195 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27278001 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271918981 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272474599 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2733397 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272367883 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271674782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273416077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273567157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272768133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272420411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275869291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272549043 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275919565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274342072 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2738344 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273706158 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274849633 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274698729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272758858 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277831853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275572486 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273615561 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274652345 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273975755 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272402467 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276122798 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275470335 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273955735 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273821429 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273761928 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274839305 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275892622 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274445076 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274283441 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275403177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27574093 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274343836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273695202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275234552 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279213478 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273709489 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279416886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27614292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276019845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277600754 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27590446 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273905721 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275940412 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276496211 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277252214 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277676594 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276679135 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277744807 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278308945 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277965249 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278105054 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277283292 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276610497 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276752211 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280055327 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275464551 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276681 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280940108 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27723671 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27756392 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277905099 seconds)
  done (took 85.391770453 seconds)
done (took 1725.681912325 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.303888444 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.26570734 seconds)
  done (took 13.78391234 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.437696631 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.390451281 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.274517222 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.307693027 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.27381766 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.271859352 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.295570995 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.275858755 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.276800912 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.275505655 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.273471659 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.461364468 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.303856731 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.275504034 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.275946899 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.369724468 seconds)
  done (took 42.259851063 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.301724313 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.281891339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.387706643 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.298003194 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.302383842 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.451719664 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.332150203 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.280902666 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.44341987 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.322399144 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.751173845 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.302830007 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.280665127 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.365892388 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.298925736 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.455198204 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.518460914 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.748361071 seconds)
  done (took 29.340784553 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.701762588 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.300092063 seconds)
  done (took 9.217887717 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.306099471 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.290583347 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.290680292 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.286236767 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.28412856 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.341110876 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.343907805 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.346661669 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.305955578 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.355182989 seconds)
  done (took 64.376995841 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.29871854 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.283992446 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.279757181 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.279756197 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.274024631 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.274624362 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.279306744 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.27504 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.691184861 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.401719898 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297643262 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.286860861 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.282794649 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.282617487 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.283263779 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.31369559 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.410975072 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.28211486 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.281853717 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.287971456 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.282979474 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.405838828 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.323200811 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.283657567 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.400627603 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.703158176 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.286419125 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.288514751 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.401639473 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.283537457 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.280407268 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.283297025 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.285169747 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.849684826 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.816193588 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.2933427 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.305104832 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.290903796 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.284003562 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458307552 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.283078497 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.289985837 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.275840814 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.790717971 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437074577 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.394036841 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.523733593 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.283759127 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.284518472 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.343959211 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285985102 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.284863361 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.310462871 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.031337823 seconds)
  done (took 108.189669817 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.309873392 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.765499454 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444965468 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.298214202 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.062831003 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.954719306 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.278932327 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.550665725 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.344437071 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.276046232 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.605569872 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.769301805 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278695107 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.287938548 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.352949314 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.2800659 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.279384604 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.048514772 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.278144693 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.275842842 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.68890317 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294020026 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.277558882 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.345000833 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.318066874 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737568681 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.675434548 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.720688174 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.279061874 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.276666322 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.730553236 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.285359721 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.355094023 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.281427432 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.549014186 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.632502715 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.61335188 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.280177834 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.281301335 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.277635815 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.30210977 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731948461 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.618582462 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.278914842 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.278498822 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75307911 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.278781399 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.277619326 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.283021671 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.476250095 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.267808485 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.279372729 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.661477426 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.280195974 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.622900428 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.367191932 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.335606906 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765542283 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279930636 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.356872284 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.286503866 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.277698727 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.281009937 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.281198183 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.281326262 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.622083264 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.680157842 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.283733376 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.621271248 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.72577556 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.282084414 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.787067649 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.149940583 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.306278831 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.344607353 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.28124932 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.859173379 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762278566 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.318646737 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278609583 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.607231283 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.282310802 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.598284515 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.294753432 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280835236 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70020515 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.302123914 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.303437654 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.279472435 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.279705246 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.90481176 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.283176864 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.556457028 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.344959558 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.281254324 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.278450501 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.323127293 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.28035819 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.280761387 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.281776068 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.789264106 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.286116935 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.568656385 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301821017 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28223366 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.282354263 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.282077619 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.281712355 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493893466 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.716653229 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.286461508 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.281548242 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.280788943 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.285604367 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.575419715 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.284620523 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.582849888 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285625296 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279827952 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.28834741 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.022410769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.286381769 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281176903 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.297222902 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.130402151 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.494135498 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.298001273 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.282294484 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284608634 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.300485104 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.579708786 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.281514026 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.328634546 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.287574168 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.972872194 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311991985 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.319571215 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.933282906 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.283952051 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.185871819 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.29902906 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.281887555 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.585981583 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.558337683 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.596251429 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.28436243 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.284368759 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.961060137 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.307964363 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.417338795 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30418959 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.283275216 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48095712 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.624143678 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.284238577 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.862885098 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.28558249 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492716572 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.282354931 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596500557 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.758822133 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.285522506 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.288557726 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972406575 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.952970749 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.909123444 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.287051895 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.617894505 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.25751074 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.743578129 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.28443024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.29760202 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.717426206 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285975605 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.286450258 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.285232792 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.285653405 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34870597 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.459203227 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.637639591 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.28744154 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742053111 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303126608 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286224244 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.290242816 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.284289139 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.640072913 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.342169352 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.287269996 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.316446172 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.286972631 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.29608877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.755065277 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.186578007 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.288404154 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.438035214 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901554404 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.289005516 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.287942538 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.94141654 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.575384388 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790325012 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292636416 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.590699401 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.2958265 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.327077302 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.007597627 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.296465983 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756294411 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290114704 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.286357364 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.876537655 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.289784395 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.347651457 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.284989085 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.287395043 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801057121 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.289054755 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.2909449 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.657480261 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.28830045 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533445957 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.286490729 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.325966646 seconds)
  done (took 1099.254451821 seconds)
done (took 1367.63755993 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.287642764 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.290106941 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.275566559 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.289308372 seconds)
  done (took 26.376424851 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.298158158 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.293463597 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.29575541 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.294108407 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.297208533 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.293691259 seconds)
  done (took 9.004907902 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.331959585 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.289346756 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.290674209 seconds)
  done (took 19.143506782 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.503589894 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.502368709 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.644839561 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.358372148 seconds)
  done (took 10.242431133 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295266591 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.295697039 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.296444453 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.298857416 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.297366347 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.30087538 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.297708452 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.297667616 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.300926377 seconds)
  done (took 12.9120718 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.058236144 seconds)
done (took 83.970861389 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.614383069 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.276723317 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.290058841 seconds)
    (4/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.034255826 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.365235346 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.607097965 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.301301178 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.564023254 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.304614896 seconds)
    (10/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.466796614 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.319955507 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.694961274 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.34759006 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.168332779 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.479014653 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.316837935 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.591538515 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.318948662 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.50434823 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 4.335047616 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.291176314 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.898825552 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.280265653 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.306433759 seconds)
    (25/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.291758327 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.580353903 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.317678748 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.766992192 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.2906313 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.291476185 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.962337263 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.299625818 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.593065858 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.303255278 seconds)
    (35/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.300255878 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.375489908 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.853475114 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.424101727 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.401051075 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.892710565 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.319152376 seconds)
    (42/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.421166814 seconds)
    (43/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.598293753 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.927741281 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.316099289 seconds)
    (46/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.408245388 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.376754673 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.301855764 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.407303738 seconds)
    (50/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.180629862 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.341896491 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.550785489 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.173456336 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.290610469 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.310273436 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.938227692 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.976363102 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.304862911 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.736884101 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.371910689 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.368154384 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.507047343 seconds)
    (63/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.878830874 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.691670716 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.340837039 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.283713078 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.476274386 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.311943667 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.690076938 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.650608024 seconds)
    (71/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.305815607 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.815038631 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.726313906 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.660612406 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.147917352 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.382610048 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.291846787 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.420561123 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.319716019 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.293898739 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.320880533 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.631183676 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.413568886 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.298607321 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.295401545 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.438658789 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.33789062 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.187178258 seconds)
    (89/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.292143684 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.888396143 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.092124306 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.380890565 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.405231762 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.517356797 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.219056885 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.494122496 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.370691208 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.98226803 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.722206179 seconds)
    (100/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.136883245 seconds)
    (101/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.840639221 seconds)
    (102/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.01350445 seconds)
    (103/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.510761092 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.875595322 seconds)
    (105/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.093142654 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.326592727 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.388287423 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.309599282 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.159279051 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.327491002 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.825665371 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.742547512 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.048330531 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.108789606 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.497283859 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.530518392 seconds)
    (117/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.671956817 seconds)
    (118/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.425963846 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.296379449 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.825303592 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.203969489 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.537863937 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.362336527 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.894536547 seconds)
    (125/309) benchmarking ("sort", Float32, false)...
    done (took 5.29563206 seconds)
    (126/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.310722932 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.395277371 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.317944356 seconds)
    (129/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.304381951 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.10419871 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.38044378 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.801843323 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.673527753 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.340492268 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.873256694 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.629346383 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.571443343 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.674725206 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.631271344 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.930846307 seconds)
    (141/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.350421555 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.027381417 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.172889221 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.547727616 seconds)
    (145/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.484518746 seconds)
    (146/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.851949317 seconds)
    (147/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.303306297 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.432713515 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.298220214 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.537738164 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.064157206 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.423777425 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.309545307 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.066139354 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.326635749 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.28195283 seconds)
    (157/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.911097854 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.29277286 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.998944813 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.152782228 seconds)
    (161/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.678064876 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.915780506 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.710933125 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.338683462 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.417036001 seconds)
    (166/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.648446878 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.409472982 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.613040591 seconds)
    (169/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.496447074 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.407801005 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.361658203 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.399415458 seconds)
    (173/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.282830077 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.781837975 seconds)
    (175/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.373161116 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.632562291 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.318826823 seconds)
    (178/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.485721447 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.09477487 seconds)
    (180/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.487949543 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.666652748 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.311822311 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.360018839 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.290941425 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.586151048 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.150566955 seconds)
    (187/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.109021002 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.285162013 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.511056553 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.31109454 seconds)
    (191/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.892101082 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.287504819 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.016935998 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.286012818 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.315756 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.343450747 seconds)
    (197/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.634919655 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.304535561 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.400796126 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.286234285 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.324243816 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.290099907 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.909767589 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.287698126 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.38363043 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.5976086 seconds)
    (207/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.368700622 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.366203637 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.689909407 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.357297625 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.355718647 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.326841031 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.860863125 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.361207952 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.858029106 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.324888983 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.366617897 seconds)
    (218/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.573313927 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.375872886 seconds)
    (220/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.744569577 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.345317897 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.301949477 seconds)
    (223/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.117130809 seconds)
    (224/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.656111891 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.310811477 seconds)
    (226/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.390709878 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.517866249 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.576636257 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.849004799 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.509741826 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.408786317 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 6.306679333 seconds)
    (233/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.89411161 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.605403207 seconds)
    (235/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.303720248 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.943483321 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.387838706 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.326802531 seconds)
    (239/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.662702849 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.301489797 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.62493512 seconds)
    (242/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.334085467 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.419614487 seconds)
    (244/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.548814582 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.14957416 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.359773477 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.768877666 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.720831653 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.761676327 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.302089323 seconds)
    (251/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.40115475 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.331279642 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.287297435 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.619505331 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.144550474 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.053796992 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.354525094 seconds)
    (258/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.64775708 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.301840809 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.135806745 seconds)
    (261/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328518749 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.316088062 seconds)
    (263/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.556653467 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.202744712 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.513681681 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.363798954 seconds)
    (267/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.585601649 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.75088817 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.608473542 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.142464673 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.331822467 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.689967508 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.500031037 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.380591989 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.287685958 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.713634389 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.316257196 seconds)
    (278/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.674513147 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.332147594 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.031926038 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.724436894 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.304782346 seconds)
    (283/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.862435024 seconds)
    (284/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.676027016 seconds)
    (285/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.830295452 seconds)
    (286/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.30220174 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.808079726 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.451090672 seconds)
    (289/309) benchmarking ("sort", Float64, false)...
    done (took 5.547318606 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.38961795 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.292779764 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.390265005 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.418924903 seconds)
    (294/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.416433031 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.403396155 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.84065706 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.46099648 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.59176918 seconds)
    (299/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.0095953 seconds)
    (300/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.038006308 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.349555911 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.332933672 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.904410453 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.306756689 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.305367491 seconds)
    (306/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.873941473 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.347437053 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.442329384 seconds)
    (309/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.298025395 seconds)
  done (took 910.470699269 seconds)
done (took 911.705190938 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.333822088 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329807226 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.313400021 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.334899035 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.425151881 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.343334643 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.323965636 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.316158407 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.361395521 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.363367826 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.31392861 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.343428466 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.316224871 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.315036126 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.31272515 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328894352 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.280523782 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.315584902 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.333008696 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.324553422 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.333203205 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.314178923 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.364027331 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.344446903 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.317855058 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.31697322 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.318020325 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.335640509 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.42616104 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.317912467 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.316406923 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.328143082 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.279693734 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.314008056 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.310173547 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.334333541 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.327106555 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.325447929 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.318743257 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.348393024 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.667176937 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.316057446 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.317497088 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.316353305 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.315720884 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.319302307 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.317507185 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.321635881 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329103012 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328903328 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.658920725 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.331413309 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.319434805 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.316725387 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.326831946 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.316862608 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.320075865 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333008477 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.336819185 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332090984 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.307557704 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.322071861 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.317464488 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.333890407 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.324764945 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.698146871 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.311908709 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.320444551 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.671593719 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.320474777 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.702849817 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.326150815 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.318899958 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.331789903 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.349149216 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.326785729 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.312922014 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.317674693 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.325021639 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.316281379 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.32651705 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.331223836 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.322696121 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.318081265 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331327149 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.347495744 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.326820743 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.319754149 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.32748169 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.338396771 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.3262116 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.330090693 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.321507005 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.314364569 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.327694545 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.321498693 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.321436966 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.32191726 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.323643706 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.329255084 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.673132754 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337676887 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.315149685 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.315837806 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.318492602 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.331910895 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.673904668 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.321928079 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.340657949 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.367216228 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.319656585 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.288995782 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.323514041 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335877592 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.328796369 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.323220007 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.31554167 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.31674622 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.68003072 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.33573531 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.320291381 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.319258092 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336348039 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.320615727 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.315941801 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.332905994 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.322961297 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333385734 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.441225356 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.331181127 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.352475748 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.31992992 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.324628541 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.354149184 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33740068 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.351536682 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.323871513 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336101068 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.337164224 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.317939139 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.333589197 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.330845745 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.321928667 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.326465977 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.315581003 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.35159651 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.333851359 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335123688 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.34227575 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.444437875 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.318920584 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.282892273 seconds)
done (took 222.030868407 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.381922428 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.317336686 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.420407293 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.322129815 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.417993119 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.418240823 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.320237666 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.320513945 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.320382032 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.697531376 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.320682432 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.32007106 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.319447159 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.321051991 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.401666002 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.322964656 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.32032922 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.659414591 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.320454895 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.390454836 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.317572707 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.321472749 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.323076439 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.700518424 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.314061012 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.314901176 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.390534421 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.323119063 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.665119488 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.318520583 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.313992376 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.664524999 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.410172073 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.341167013 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.333398469 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330675261 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.419476081 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.340834235 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.401432628 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.400613341 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.422157269 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.358942578 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.320980268 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.317730637 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.326273848 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.321673446 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.322579686 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.351750102 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.320867238 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.322958366 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.662252311 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.334497275 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.323920134 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.323150998 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.323110018 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.351395713 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.323252334 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.323439735 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.411236213 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.323054678 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.384370066 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.701963924 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.700932329 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.326138721 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.324422723 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.322619111 seconds)
  done (took 147.679257656 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.389360595 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.394616897 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.433207925 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.322695444 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.373916727 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.435473916 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.323956649 seconds)
  done (took 10.929082254 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.328356392 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327099304 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.372336433 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.372402123 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.322886848 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.469550035 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326056261 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.333992184 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.323796118 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.375999163 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.324198645 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326326043 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.33279283 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.324366653 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.372282739 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.335086873 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.438241399 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.324038803 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.32437346 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.473502312 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.324051263 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.334532132 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.375612833 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.336057712 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.325470533 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.329208738 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.889904247 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325085778 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324431695 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.3278337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325825417 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.362343067 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328182199 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.324287734 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325435191 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439376249 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.325110534 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325911551 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.328259753 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.318697911 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.327901222 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.328584461 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.329438548 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.326389342 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.328537313 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.348432552 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.329059633 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.329036895 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.328823376 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.329206557 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.376328379 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330066095 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.326464243 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.326581103 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.379600302 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336254519 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.326983643 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.326068563 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329227456 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326230402 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.47677848 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.373725596 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.328615793 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.372896495 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32911619 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.330059449 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.33030773 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.329582795 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381492005 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.329328636 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374129764 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.327873461 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.480801715 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.349883562 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330260439 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.329364358 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.328177197 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327793621 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.322783809 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.332339557 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.327517977 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.328059636 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.332961345 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327716682 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328201739 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.429977859 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435445119 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.327326694 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.340364475 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.334754638 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.327660859 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.380255906 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.331962602 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.32915292 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.380252921 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.4416289 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.381049481 seconds)
  done (took 152.541644612 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.333576142 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.336624472 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.330540197 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.345243992 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.32894883 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.330010209 seconds)
  done (took 9.268253183 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.332015231 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.333733167 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.331970804 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.332127329 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.328892291 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.330663434 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.329228207 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.331736539 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.333686438 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33276047 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.330649289 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.331878767 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.331937013 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.330148957 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.33070443 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.333624182 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.330588868 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33109337 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.333254078 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331316835 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.426237257 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.33060197 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.330038402 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.332591438 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.33553178 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.332729148 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.338565188 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.333978484 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.33434457 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.337612946 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.334133627 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.331555755 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.331937304 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.33602021 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.334167437 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.332937091 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338715741 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.332814365 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.331666714 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.332723031 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.332710136 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.331100602 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.334006762 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.332130632 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.33328426 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.336365396 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.336384226 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.338679199 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.331267168 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.333439156 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.332993191 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.336160147 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.331938046 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.332731127 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.336001875 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335899241 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.33702002 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.331991913 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.331457327 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.333620294 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.335917067 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.333310995 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.333928003 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.336131977 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.341817905 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.333975103 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.334023591 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.336670663 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333232869 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.335928582 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.333658414 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.333697049 seconds)
  done (took 98.368011902 seconds)
done (took 420.038974352 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.636966449 seconds)
  done (took 7.903051811 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.383755438 seconds)
  done (took 7.650540551 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.214699324 seconds)
  done (took 21.485991923 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.351106404 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.424085613 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.345746189 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.338219749 seconds)
  done (took 26.727817302 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.666194826 seconds)
  done (took 7.93212291 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.332598432 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.328829702 seconds)
  done (took 13.929782517 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.420590596 seconds)
  done (took 7.686585435 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.743953094 seconds)
  done (took 8.015824452 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.33654375 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.355324988 seconds)
  done (took 14.225541507 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.313630498 seconds)
  done (took 7.580665735 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.584028054 seconds)
  done (took 8.851329705 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.332187219 seconds)
  done (took 7.600169414 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.399563983 seconds)
  done (took 7.667063974 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.125517439 seconds)
  done (took 9.391583335 seconds)
done (took 157.913431933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.326596139 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.328958868 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.328821708 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.328834987 seconds)
  done (took 26.580428768 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.371157299 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.371274049 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.371292754 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.381385959 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.374046726 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.370755136 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.364139963 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.3644968 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.382525248 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.373942282 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.372334905 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.373763341 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.372056147 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.36440153 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.374526232 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.373279671 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.38229823 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.3741378 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.364828972 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.374746374 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.339766439 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.382979384 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.375143813 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.340669157 seconds)
  done (took 34.159519593 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.533302933 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.406892525 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.489457339 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.386509383 seconds)
  done (took 7.084450791 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.391994063 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.392571426 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.403393908 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.4427624 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.46889872 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.402346871 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.364931194 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.360973054 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.347269346 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.393075127 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.467928089 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.408812278 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.475833497 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.338693003 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.525700793 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.339657509 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.339177174 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.392188842 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.443277772 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.456338211 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.341023706 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.391590929 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.394454906 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.409459068 seconds)
  done (took 34.962890618 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.338842113 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.346662267 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.345634506 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.338665094 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.33917405 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.339728238 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.345914983 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.340281135 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.360450618 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.340853584 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.33885397 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.339724952 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.338106914 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.340765108 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.339395906 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.351489682 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.353404645 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.340446461 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.342769752 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.346267819 seconds)
  done (took 28.137792887 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.330016317 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.184281064 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.68250354 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.585874298 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.330552089 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.331046964 seconds)
  done (took 27.715944195 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.406910066 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.53736461 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.340678498 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.694365715 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.771138658 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.339773866 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.337833059 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.570981244 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.874951347 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.881091309 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.393975659 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.407102358 seconds)
  done (took 19.828593592 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.330147156 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.333921343 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.33739183 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.350169573 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.392081604 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.345297118 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.344867546 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.331898432 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.393799795 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.400550098 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.344295734 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.394342809 seconds)
  done (took 37.57289285 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424102528 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380675277 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.306354972 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070983937 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715805368 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548522368 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.092429672 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.768969673 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.343786538 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610589577 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345902455 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43018534 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.591882906 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337975997 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340557212 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.336404656 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565688459 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823340932 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339757389 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.254690758 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365222635 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337336913 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.364718692 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366821823 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548385475 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467984616 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.598178901 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338648381 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615589126 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350463157 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349140597 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338082883 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611574276 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008640623 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432314997 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348373426 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.03170958 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.052972887 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.323841562 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.263622108 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227145072 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34284961 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349146974 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33978989 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.27401318 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338591235 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775704317 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.346267803 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.050958148 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339874797 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349473031 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433490887 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.342550181 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.153138594 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35302858 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340360963 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.337029051 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342150347 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910346174 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.784487485 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345286598 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.276747571 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.716339548 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.262412707 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945309592 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.442745443 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.343709453 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343770686 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27393538 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.267202124 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359838522 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487810103 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.362037362 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990207621 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050518347 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.355387445 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272895508 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885323105 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349747597 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.278241417 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568607231 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342296582 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278060723 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.288715998 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.275773515 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045715794 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350436083 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.757948984 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345936287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.768815796 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.354846822 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359395346 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365259815 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.565566496 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.225821183 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341624327 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.296566648 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486062039 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363610303 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.771345318 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280038059 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.34750367 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597384314 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.554143609 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343334717 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.364454118 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546496603 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806861582 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.361651117 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34305593 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.377101235 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.914733191 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356054895 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.785800383 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363174934 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343147677 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107574975 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34852856 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.445736258 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356415415 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591275617 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.146671693 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348178797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425772817 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344623319 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343499613 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.365858668 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861622503 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34410467 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.343300613 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342990456 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.356375739 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.341599293 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290146347 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.351988983 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361237186 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.348915747 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.568132895 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343906807 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622999067 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27784975 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491045763 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.400278637 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.566855227 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.551056827 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.344724183 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602542634 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354675387 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356686236 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356987369 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364626192 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443569463 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365819653 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.355600603 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60208475 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.348608298 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.34930617 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.386392904 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352632143 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353169767 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.350994352 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.175521042 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919388442 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326225404 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349787511 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235354622 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.359420508 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408825022 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351718677 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.357721071 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.154507311 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.149098123 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.354645766 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.343061462 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570101268 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357314972 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.365985955 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425918555 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.543483992 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926678389 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362880941 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.281926301 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.058508513 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.040636064 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346114777 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28295038 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346541643 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355276248 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357143725 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.851487936 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926347266 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351216277 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.28870595 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.354479001 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35754774 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.351520428 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348245201 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.149100096 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.810005699 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353283496 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.361320766 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490394723 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.36199988 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281950144 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.350547945 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352708332 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347710389 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.34787697 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380990858 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.300145266 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821534157 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60742477 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.029098952 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361931321 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.474252617 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.381196212 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.346340909 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349878406 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354112659 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.372607449 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35695669 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.359849783 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.352619501 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022480509 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918796513 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080133138 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886979468 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328578681 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.35378306 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355099162 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.783778648 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288633255 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906906308 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536362986 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.784718109 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298518783 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551108643 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.530448689 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117918614 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361024186 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5774182 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313953079 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.364095734 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362820841 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561054317 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385955115 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353641704 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279766985 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.639431094 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58130186 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328380586 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429703567 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784665831 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.240006775 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366732936 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.347090269 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.717220902 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526962882 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.064050026 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522268165 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364141526 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358375164 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823234646 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357908682 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.577052054 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96365525 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353606061 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.553492453 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290904432 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.362568264 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.36214084 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.34964312 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.664091568 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.356039384 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.608319069 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362125286 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287935872 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352227213 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891180468 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.207855675 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.356107391 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351941257 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096565686 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364123739 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63603958 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.353948957 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.141617517 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357899074 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.286077846 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286315464 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.045491963 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35482281 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327707303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838512105 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.705602822 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350125355 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378345026 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196043049 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.607189041 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.36660268 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932233028 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580334914 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.140539526 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377877254 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.454082451 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365648501 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.339495358 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35255589 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.588837761 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.185221966 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.578584163 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.350829609 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.263842902 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349634514 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567895842 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354732968 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354529066 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602632517 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.068516552 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.358647787 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076159385 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380753488 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365473537 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27222172 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.728462934 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361784439 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43392035 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364603271 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.366061657 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.364703816 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529592419 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371143706 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358330842 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.367361317 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448983554 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.848678656 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.14827442 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.358876035 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944283831 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093472332 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.941199756 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36979887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354628455 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364999596 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290512014 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503977138 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.581098394 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629191442 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486610587 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.795622194 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378669707 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362067409 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36104316 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568872897 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629799595 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.251165997 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363380213 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368617917 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.356365923 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367309895 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.568231947 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849296744 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908931324 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466006651 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355536255 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.790799896 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633717035 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355276729 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357150978 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948505092 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.37301742 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.714533871 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.362187324 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358224186 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505945327 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367000736 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036389484 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.368257518 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.516328151 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.13128382 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.327204457 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612577518 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.820443069 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.367846252 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948947784 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062474271 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622506078 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424812297 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368553153 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.473012567 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503463809 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.364220247 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359908807 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358003316 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201232596 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.069432685 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.365811425 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946173077 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623989496 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.354820137 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.356471059 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383269224 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.368751921 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581592456 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075891627 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582890153 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36883378 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363887163 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.174453461 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945402389 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372619563 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291987331 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.361927818 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604296443 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597527812 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379469288 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.812025931 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.070927775 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913077099 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.331009081 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381331431 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37172507 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.068456178 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948649721 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.161861994 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855148064 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918253042 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359664779 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636044772 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.364095978 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360201844 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638616068 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.364840631 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37452764 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373743716 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.946799577 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135034859 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.376472771 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.336893378 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.298665784 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701597533 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994036569 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299367781 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362455751 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.544301639 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363390628 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491502977 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372640129 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.357690228 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364088008 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.096960464 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63345224 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.36649756 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.343471438 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.349830802 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362618068 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366842127 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593750125 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369348624 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.044889946 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.712518223 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616373147 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371101368 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.346797141 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.366313888 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362614477 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350441378 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.56073853 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.872712719 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92115979 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.370673335 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.37389527 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365449029 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.578696555 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573977448 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375610098 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373650849 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365059636 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379966392 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.26483665 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.863709279 seconds)
  done (took 1601.551313625 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.370322368 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.376744734 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.401081042 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.402204719 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.400864923 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.461078798 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.453124973 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.465410429 seconds)
  done (took 52.630357687 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.361329738 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.617904605 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.389656249 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.367056023 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.371276007 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.359717781 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.795720107 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.369504315 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.368456527 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.369118748 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.377365617 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.370845369 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.995293058 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.37075584 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.368041769 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.348450623 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.370957019 seconds)
  done (took 65.87644927 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.373184125 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.960868493 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.462047572 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.364421355 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.399396064 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.375176886 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.231621838 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.39935682 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.370354585 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.698602656 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.019315642 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.410012153 seconds)
  done (took 85.365092856 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.370274545 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.369651866 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.369439192 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.369196943 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.368715069 seconds)
  done (took 8.14777616 seconds)
done (took 2030.882138894 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.613370696 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.057582847 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.015859637 seconds)
  done (took 5.372472954 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.50966349 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.562302653 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.677216545 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.685471769 seconds)
  done (took 7.735650361 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.639842391 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.75988991 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.554480195 seconds)
  done (took 6.254338804 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.770337827 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.365047919 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.487027627 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.366030876 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.368215889 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.366568958 seconds)
  done (took 20.403659885 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.370034382 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.371955512 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.369248381 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.371746749 seconds)
  done (took 6.78571108 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.348729948 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.138259114 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.352325335 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.367033928 seconds)
  done (took 18.508696167 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.115425504 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.137891297 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.120891882 seconds)
  done (took 7.675375958 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.37078007 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.208460883 seconds)
  done (took 9.881377061 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.673123083 seconds)
  done (took 2.975802053 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.501410761 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.639255159 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.396744181 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.32519647 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.419697929 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.23564262 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.997204748 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.583931492 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.314402313 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.564624359 seconds)
  done (took 28.282328833 seconds)
done (took 127.412148995 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.144223549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.612227665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.570097158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.156217634 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.596516472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.569409665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.584302999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.122694066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.622107832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.611865459 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.117984767 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.598757801 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.528159945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.612493475 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.528911141 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.739816741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.598379729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.183965544 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.801402808 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.999327113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.578005375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.753834413 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.949904117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.77315211 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.596829677 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.522681887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.33361551 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.739687786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.971254038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.35127177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.521632017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.172371352 seconds)
  done (took 192.867767864 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.370589823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.38021501 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.367255229 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.380771366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.374700324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.367524083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.38114037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.379391029 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.365568971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.366124013 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.365785058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.3663227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.366802107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.369373979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.366454881 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.369663423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.379626079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.367186589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.380798176 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.366277814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.369484359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.382334869 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.366660633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.381370351 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.366646888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.368084491 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.369085059 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.366941619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.367082324 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.367011894 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.381285325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.367274198 seconds)
  done (took 205.191234663 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.366388481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.367587238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.367761968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.370809051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.368619688 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.368140657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.367038782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.367333932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374323748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.371342132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.367578378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.367833608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.367258527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381102596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.367046855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399444442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.36861816 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.376401214 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.367527316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.368813001 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.37232203 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.368738684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.368444117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.375865851 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.367591305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.368400752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.367676804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367437107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.379594455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.373768033 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.369491644 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.368236011 seconds)
  done (took 205.176292893 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.568257585 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.380031973 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.380593516 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.316441333 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.380197585 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.380223103 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.377199991 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.569475083 seconds)
  done (took 14.661123132 seconds)
done (took 619.200089468 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.644198019 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.367319466 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.578083159 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.400164405 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.200355959 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.399257084 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.401336136 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.565761955 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.292374323 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.570074559 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.642239319 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.393934874 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.824269609 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.399381001 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.648504759 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.494128033 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.2621153 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.379523508 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.71628616 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.923802322 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.656426135 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.829351281 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.569713243 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.295035025 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.815659381 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.83115462 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.066449575 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.24442722 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.39989252 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.715132811 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.979111949 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.319176117 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.454936518 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.437273023 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.493323201 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.476522911 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.305859065 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.435731022 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.580596132 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.627482934 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.928529778 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.105690792 seconds)
  done (took 92.980281153 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.36802629 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.369984868 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.366358152 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.369889584 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.368534725 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.369166755 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.366106109 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.368475264 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.36665844 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.365838619 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.366497628 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.367594938 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.369275568 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.368309363 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.368167561 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.367063526 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.370140603 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.369647934 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.368711199 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.368528553 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.368713716 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.366949378 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.368291313 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.368501113 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.368136118 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.367746081 seconds)
  done (took 36.883787088 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.38340936 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.622863484 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.800669714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.389552244 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380242057 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.383424054 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.459216817 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.385051759 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.383391158 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.382753116 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.532356259 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.388870162 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416143602 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.806057829 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.385087728 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.384502062 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.384415384 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.380853877 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.627077118 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390720161 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.459839514 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.385692934 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.458957836 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.391868771 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.384574153 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.382388368 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.386499965 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.883938149 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.384287836 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.53338125 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.156066265 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.458577441 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.835499164 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.810115007 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.161286036 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.388411239 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.385852178 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.538091197 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.384757415 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.383557518 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.460507479 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.3833924 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.808314638 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.01607626 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.401591506 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.386338278 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.909902255 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.542850884 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.633882334 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.392313503 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.838067148 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388154315 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.387813354 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.384880708 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.633490429 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.391997735 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.383366077 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.926358858 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.390203359 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.461105298 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.389299837 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.384246432 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.639948391 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.386251394 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.630607649 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.38802439 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.392269432 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.384829174 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.81419478 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.389703037 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.032931462 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.401781621 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.38738231 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.536095901 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.62992034 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.946380594 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.389826506 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.645786523 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.854355804 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.46079322 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.389797991 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.876838318 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.467319051 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.390271507 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.390587808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.391576544 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.388025952 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.433219364 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.460915223 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.95986066 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.026328487 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.944555185 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.46713541 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.399897384 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.387001597 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.929500875 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.391439728 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.389935318 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.809173337 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.037221521 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.404340449 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.395240927 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.019009028 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.406624775 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.464771306 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.392906204 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.819641574 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.389392409 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.433388017 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.389622096 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.394179296 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.39051777 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.46485533 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.392010503 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.390269958 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.007013734 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.563400088 seconds)
  done (took 181.590157964 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.381444543 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.379663626 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.38047614 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.394414689 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.380901833 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385579474 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.380646644 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.381421164 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.386143602 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.380439841 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.380255978 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.380936393 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.382162107 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.398343902 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.390679199 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.397114954 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.990340583 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.383265292 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.382449711 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.395348708 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.186123738 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.383447626 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.380800223 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.381017247 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.381333404 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.380768837 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.390251812 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.382934727 seconds)
  done (took 153.500084268 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.391774759 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.97433719 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.392283473 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.520777012 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.415218305 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.389414619 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.51978176 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.446907665 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.39043168 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.390671819 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.389489224 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.70163775 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.395451006 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.898700605 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.577211345 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.527076021 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.89658357 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.393404422 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.39107954 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.391487229 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.521159344 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.39983664 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.702765168 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.975702777 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.39576599 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.978078902 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.381984003 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.393701996 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388519339 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.978461446 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.392815882 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.709439264 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.468411559 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.449446031 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.979101498 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.900000986 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.901335813 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.536590512 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.390056283 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.391631852 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.391539884 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.378817162 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.951192433 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.395074152 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.391775322 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.946069685 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.410116377 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.395147987 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.401745117 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.391601088 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.448446131 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.448895618 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.695214101 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.957595721 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.47206465 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.415253572 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.51926894 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.751601187 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.394056739 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.897172404 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.379334349 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.958068244 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.396915212 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.378941755 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.393959802 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.399669385 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.544651347 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.526408332 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.918653425 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393888017 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.899392316 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.545766907 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.393892498 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.393013149 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.395509354 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.953060617 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.900129686 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.545006058 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.528447635 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.584458399 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.382883891 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.391475318 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.381091476 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.467890976 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.394481239 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.958440555 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.900893986 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.396866967 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.396427886 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.396972198 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.397045539 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.566548723 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.95613262 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.469808617 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.907261689 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.71041178 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.694047028 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.397150033 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.454200489 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.394630723 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.696861807 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.397122108 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.451567992 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.810226553 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.696249314 seconds)
  done (took 165.501511795 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.636315994 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.601645708 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.485232921 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.505037137 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.925243064 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.965678443 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.569284218 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.516393899 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504490387 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.634823141 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.540689391 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.488099075 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.583517153 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.467239378 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.096106521 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.46212868 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.487681838 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.513783116 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.507542833 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.430452112 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.000301699 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.673135317 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.56703986 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.504886928 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.485724829 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.177161015 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.942822639 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.909438735 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.567078821 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.682540502 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.928856371 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.520868232 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.334182032 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.045503885 seconds)
  done (took 66.58712416 seconds)
done (took 698.351512666 seconds)
SAVING RESULT...
DONE!
